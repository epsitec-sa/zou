<!--
The agent prolog and epilog are used to create a minimal zou agent.
with standard configurations (Debug, Release) and platforms (Win32, x86, x64 and Any CPU).
Example: see Templates\Cs.Component.Pack.vcxproj

# : import project
+ : define data

Summary:
  # zou.props
  + Standard configurations (Debug|x64, ...)
  + Default targets (Build, Clean, Rebuild, PackFilter)
  # Microsoft.Cpp.Default.props
  + C++ utility project
  # Boot.Core.props
    # Cpp.PlatformToolset.props
    + Configuration, IsDebug, IsRelease, Solution*, Project*
  # Microsoft.Cpp.props
  # Boot.Runtime.props
    + Platforms, Platform, RuntimePlatform, ForwardPlatform
  # TargetFramework.props
    + CoreTargetFramework, FullTargetFramework
  # hook.zou.build.props  
-->
<Project TreatAsLocalProperty="RedistFolder">

  <Import Project="zou.props" Condition="'$(ZouVersion)' == ''" />

  <!-- Standard configurations -->
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Any CPU">
      <Configuration>Debug</Configuration>
      <Platform>Any CPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Any CPU">
      <Configuration>Release</Configuration>
      <Platform>Any CPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- Default standard targets -->
  <Target Name="Build">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.Build (DUMMY)" />
  </Target>
  <Target Name="Clean">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.Clean (DUMMY)" />
  </Target>
  <Target Name="Rebuild" DependsOnTargets="Clean;Build">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.Rebuild (DUMMY)" />
  </Target>
  <Target Name="PackFilter">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.PackFilter (DUMMY)" />
  </Target>

  <!-- Save TargetFramework, PlatformToolset, Platform and OutDir -->
  <PropertyGroup>
    <Zou_TargetFramework>$(TargetFramework)</Zou_TargetFramework>
    <Zou_PlatformToolset>$(PlatformToolset)</Zou_PlatformToolset>
    <Zou_Platform>$(Platform)</Zou_Platform>
    <Zou_OutDir>$(OutDir)</Zou_OutDir>
  </PropertyGroup>

  <!-- Microsoft.Cpp.Default.props: Platform -> *Win32 -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" Condition="Exists('$(VCTargetsPath)\Microsoft.Cpp.Default.props')"/>

  <!-- C++ utility project -->
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
  </PropertyGroup>

  <!-- Restore PlatformToolset and TargetFramework -->
  <PropertyGroup>
    <PlatformToolset>$(Zou_PlatformToolset)</PlatformToolset>
    <TargetFramework>$(Zou_TargetFramework)</TargetFramework>
  </PropertyGroup>

  <!-- PlatformToolset, Configuration, IsDebug, IsRelease, Solution*, Project* -->
  <Import Project="Boot.Core.props"/>

  <!-- Microsoft.Cpp.props: OutDir -> $(Configuration) -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" Condition="Exists('$(VCTargetsPath)\Microsoft.Cpp.props')"/>

  <!-- TODO: DEBUG ONLY -->
  <!--<PropertyGroup>
    <PlatformToolset1>$(PlatformToolset)</PlatformToolset1>
    <Platform1>$(Platform)</Platform1>
    <OutDir1>$(OutDir)</OutDir1>
  </PropertyGroup>-->

  <!-- Restore Platform and OutDir -->
  <PropertyGroup>
    <Platform>$(Zou_Platform)</Platform>
    <OutDir>$(Zou_OutDir)</OutDir>
    <!-- Clean -->
    <Zou_PlatformToolset />
    <Zou_Platform />
    <Zou_OutDir />
  </PropertyGroup>

  <Import Project="Boot.Runtime.props"    Condition="'$(BootRuntimeImported)' == ''" />
  <Import Project="TargetFramework.props" Condition="'$(CoreTargetFramework)' == ''" />
  <Import Project="hook.zou.build.props"  Condition="'$(ZouBuildProps)' == ''"/>

</Project>
