<!--
The agent prolog and epilog are used to create a minimal zou agent.
with standard configurations (Debug, Release) and platforms (Win32, x86, x64 and Any CPU).
Example: see Templates\Cs.Component.Pack.vcxproj

Summary:
  # zou.props
  # zou.Errors.props
  + Standard configurations (Debug|x64, ...)
  + Default targets (Build, Clean, PackFilter)
  # Microsoft.Cpp.Default.props
  + C++ utility project
  # Boot.Core.props
    # PlatformToolset.props
      + PlatformToolset
    + Configuration, IsDebug, IsRelease, Solution*, Project*
  # Microsoft.Cpp.props

-->
<Project TreatAsLocalProperty="RedistFolder">

  <ImportGroup Condition="'$(ZouVersion)' == ''">
    <Import Project="zou.props" />
    <Import Project="zou.Errors.props" />
  </ImportGroup>

  <!-- Standard configurations -->
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Any CPU">
      <Configuration>Debug</Configuration>
      <Platform>Any CPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Any CPU">
      <Configuration>Release</Configuration>
      <Platform>Any CPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- Default standard targets -->
  <Target Name="Build">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.Build (DUMMY)" />
  </Target>
  <Target Name="Clean">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.Clean (DUMMY)" />
  </Target>
  <Target Name="Rebuild" DependsOnTargets="Clean;Build">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] Agent.prolog.Rebuild (DUMMY)" />
  </Target>

  <!-- Microsoft.Cpp.Default.props -->

  <PropertyGroup>
    <!-- 'Microsoft.Cpp.Default.props' overrides PlatformToolset and Platform -->
    <_Agent_PlatformToolset0>$(PlatformToolset)</_Agent_PlatformToolset0>
    <_Agent_Platform0>$(Platform)</_Agent_Platform0>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" Condition="Exists('$(VCTargetsPath)\Microsoft.Cpp.Default.props')"/>
  <PropertyGroup>
    <!-- Restore Platform -->
    <PlatformToolset>$(_Agent_PlatformToolset0)</PlatformToolset>
    <Platform>$(_Agent_Platform0)</Platform>
    <_Agent_PlatformToolset0 />
    <_Agent_Platform0 />
  </PropertyGroup>

  <!-- C++ utility project -->
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
  </PropertyGroup>

  <!-- PlatformToolset, Configuration, IsDebug, IsRelease, Solution*, Project* -->
  <Import Project="Boot.Core.props"/>

  <!-- Microsoft.Cpp.props -->

  <PropertyGroup>
    <!-- 'Microsoft.Cpp.props' overrides OutDir value -->
    <_Agent_OutDir0>$(OutDir)</_Agent_OutDir0>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" Condition="Exists('$(VCTargetsPath)\Microsoft.Cpp.props')"/>
  <PropertyGroup>
    <!-- Restore OutDir -->
    <OutDir>$(_Agent_OutDir0)</OutDir>
    <_Agent_OutDir0 />
  </PropertyGroup>

</Project>
