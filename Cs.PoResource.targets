<?xml version="1.0" encoding="utf-8"?>
<!--
Layout:
=======
    
  bundle1\.po\                                      $(PoBundleRootDir)
      bundle1.fr-CH.po                              %(PoResource.PoBundlePath)  
      bundle1.de-CH.po
      .refs\                                        $(PoReferencesDir)
        PotModules.zou                              $(PotModuleReferencesPath)
          - module1\.po\module1.pot                 $(PotModulePath)
        PotDomains.zou                              $(PotDomainReferencesPath)
          - project1\obj\Debug\domain1.pot          %(PoResource.PotDomainPath)
          - project1\obj\Debug\domain2.pot
        PoModules.fr-CH.zou                         %(PoResource.PoModuleReferencesPath)
          - module1\.po\module1.fr-CH.po            %(PoResource.PoModulePath)
        PoDomains.fr-CH.zou                         %(PoResource.PoDomainReferencesPath)
          - project1\Resource\domain1.fr-CH.po      %(PoResource.FullPath)
          - project1\Resource\domain2.fr-CH.po
        MoDomains.fr-CH.zou                         %(PoResource.MoDomainReferencesPath)
          -project1\bin\Debug\locale\fr-CH\LC_MESSAGES\domain1.mo  %(PoResource.MoDomainPath)
          -project1\bin\Debug\locale\fr-CH\LC_MESSAGES\domain2.mo
            
    module1\.po\                                    $(PoModuleRootDir)
      module1.fr-CH.po                              %(PoResource.PoModulePath)
      module1.de-CH.po
      obj\Debug\                                    $(PotModuleDir)
        module1.pot                                 $(PotModulePath)
          
    project1\
      Source\
        *.cs
      Resource\
        domain1.fr-CH.po                            %(PoResource.FullPath)
        domain1.de-CH.po
        domain2.fr-CH.po
        domain2.de-CH.po
      obj\Debug                                     $(IntDir)
        LastSolution.zou                            $(LastSolutionSavePath)
        domain1.pot.src.zou                         %(PoResource.PotSourcePath)
        domain1.pot                                 %(PoResource.PotDomainPath)
        domain2.pot
      bin\Debug\locale\fr-CH\LC_MESSAGES\           %(PoResource.MoDomainDir)
        domain1.mo                                  %(PoResource.MoDomainPath)
        domain2.mo

  where:
      bundle1                   $(BundleName)
      module1                   $(ModuleName)
      domain1                   %(PoResource.DomainName)
      fr-CH                     %(PoResource.Culture)
      bundle1.fr-CH.po          %(PoResource.PoBundleFileName)
      module1.fr-CH.po          %(PoResource.PoModuleFileName)
      locale\fr-CH\LC_MESSAGES\ %(PoResource.MoDomainSubdir)
  
Pseudo-code:
============

  foreach (project in solution)
  {
    PotSource = *.cs                // source files
    PotDomain = xgettext(PotSource) // message IDs
    PoDomain  = not initialized
                ? msginit (PotDomain)
                : msgmerge(culture, PoDomain, PotDomain)
    
    PoBundle = msgcat  (culture, PoBundles, PoDomains)             // concat domain changes into bundle
    PoModule = msgmerge(culture, -C PoBundle, nul, PotModule)      // import bundle changes into module
    PoDomain = msgmerge(culture, -C PoBundle, nul, PotDomain)      // import bundle changes into domain
    MoDomain = msgfmt(PoDomain)                                    // compile domain

    // touch all references to same last 
    PotReferences.Time = PoReferences.Time = MoReferences.Time = LastModifiedMoDomain.Time 
  }


PoResource metadata:
====================
BundleDir = .../bundle

InitPoResources:
  Culture                   // fr-CH, fr, ..., default to en-US
  DomainName                    // file name without culture extension
  
  PoModuleReferencesPath    // .../bundle/.po/refs/PoModules.fr-CH.zou -> { module\.po\module.fr-CH.po }
  PoDomainReferencesPath    // .../bundle/.po/refs/PoDomains.fr-CH.zou -> { module\**\project\Resource\domain.fr-CH.po }
  MoDomainReferencesPath    // .../bundle/.po/refs/MoDomains.fr-CH.zou -> { %(MoDomainPath) }
  
  PotSourcePath             // .../bundle/module/**/project/obj/Debug/%(DomainName).pot.src.zou
  PotDomainPath             // .../bundle/module/**/project/obj/Debug/%(DomainName).pot
  MoDomainSubdir            // locale/fr-CH/LC_MESSAGES/
  PoBundleFileName          // bundle.fr-CH.po
  PoModuleFileName          // module.fr-CH.po
  MoDomainFileName          // domain.mo

  PoBundlePath              // .../bundle/.po/bundle.fr-CH.po
  PoModulePath              // .../bundle/module/.po/module.fr-CH.po
  MoDomainDir               // .../bundle/module/**/project/bin/Debug/locale/fr-CH/LC_MESSAGES/
  MoDomainPath              // .../bundle/module/**/project/bin/Debug/locale/fr-CH/LC_MESSAGES/domain.mo

  CopyToOutputDirectory     // default to PreserveNewest
  Exists
  Length
  IsReadOnly
  
Read/WritePotModuleReferences:
  PotModuleReferences       // { module\.po\obj\Debug\module.po }

Read/UpdatePotDomainReferences:
  PotDomainReferences       // { module\**\project\obj\Debug\domain.pot }
 
Read/WritePoModuleReferences:
  PoModuleReferences        // { module\.po\module.fr-CH.po }
 
Read/WritePoDomainReferences:
  PoDomainReferences        // { module\**\project\Resource\domain.fr-CH.po }
 
Read/WriteMoDomainReferences:
  MoDomainReferences        // { module\**\project\bin\Debug\locale\fr-CH\LC_MESSAGES\domain.mo }
  
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="PoResourceBuild">

  <Import Project="Cs.Boot.props" Condition="'$(CsBootImported)' != 'true'"/>
  <Import Project="BuildSequence.targets" Condition="'$(LastBuildSequencePath)' == ''"/>

  <!--=========================================================================-->
  <!-- Constants -->
  <!--=========================================================================-->
  
  <PropertyGroup>
    <PoTrace>false</PoTrace>
    <PoTraceResources>false</PoTraceResources>
    <PoTracetModuleReferences>false</PoTracetModuleReferences>
    <PoTracetDomainReferences>false</PoTracetDomainReferences>
    <PoTraceDomainReferences>false</PoTraceDomainReferences>
    <PoTraceModuleReferences>false</PoTraceModuleReferences>
    <PoTraceMoDomainReferences>false</PoTraceMoDomainReferences>
    
    <ContinueMessage>Press [Enter] to continue...</ContinueMessage>
    <Interactive       Condition="'$(Interactive)'       == ''">false</Interactive>
    <PoNoFuzzy         Condition="'$(PoNoFuzzy)'         == ''">false</PoNoFuzzy>
    <PoNoClean         Condition="'$(PoNoClean)'         == ''">false</PoNoClean>
    <PoNoLocation      Condition="'$(PoNoLocation)'      == ''">false</PoNoLocation>
    <NoPotCreationDate Condition="'$(NoPotCreationDate)' == ''">true</NoPotCreationDate>
    <NoPoRevisionDate  Condition="'$(NoPoRevisionDate)'  == ''">true</NoPoRevisionDate>

    <IntDir Condition="'$(IntDir)' == ''">$(ProjectDir)$(IntermediateOutputPath)</IntDir>
    <LastSolutionSavePath>$(IntDir)LastSolution.zou</LastSolutionSavePath>
    
    <PoBundleName>$(BundleName)</PoBundleName>
    <PoBundleRootDir>$(BundleDir).po\</PoBundleRootDir>

    <PoReferencesDir>$(PoBundleRootDir).refs\</PoReferencesDir>
    <PotModuleReferencesPath>$(PoReferencesDir)PotModules.zou</PotModuleReferencesPath>
    <PotDomainReferencesPath>$(PoReferencesDir)PotDomains.zou</PotDomainReferencesPath>
    <PoModuleReferencesPath>$(PoReferencesDir)PoModules.zou</PoModuleReferencesPath>
    <PoDomainReferencesPath>$(PoReferencesDir)PoDomains.zou</PoDomainReferencesPath>
    <MoDomainReferencesPath>$(PoReferencesDir)MoDomains.zou</MoDomainReferencesPath>

    <PoModuleName    Condition="'$(ModuleName)' != ''">$(ModuleName)</PoModuleName>
    <PoModuleRootDir Condition="'$(ModuleName)' != ''">$(ModuleDir).po\</PoModuleRootDir>
    <PotModuleDir    Condition="'$(ModuleName)' != ''">$(PoModuleRootDir)obj\$(Configuration)\</PotModuleDir>
    <PotModulePath   Condition="'$(ModuleName)' != ''">$(PotModuleDir)$(PoModuleName).pot</PotModulePath>

    <PotDomainSubdir>$([MSBuild]::MakeRelative($(ProjectDir), $(IntDir)))</PotDomainSubdir>
    <PoDomainSubdir>Resource\</PoDomainSubdir>
    
    <MoLocaleLinkdir>locale\</MoLocaleLinkdir>
    <MoLocaleSubdir>$([MSBuild]::MakeRelative($(ProjectDir), $(OutDir)))$(MoLocaleLinkdir)</MoLocaleSubdir>
    <MoLocaleDir>$(ProjectDir)$(MoLocaleSubdir)</MoLocaleDir>

    <XGetText>$(ZouBinDir)xgettext</XGetText>
    <MsgInit>$(ZouBinDir)msginit</MsgInit>
    <MsgMerge>$(ZouBinDir)msgmerge</MsgMerge>
    <MsgCat>$(ZouBinDir)msgcat</MsgCat>
    <MsgFmt>$(ZouBinDir)msgfmt</MsgFmt>
    <MsgAttrib>$(ZouBinDir)msgattrib</MsgAttrib>

    <PoCopyright>EPSITEC SA, CH-1400 Yverdon-les-Bains, Switzerland</PoCopyright>
    <PoPackageName Condition="'$(ModuleName)' == ''">'$(BundleName)'</PoPackageName>
    <PoPackageName Condition="'$(ModuleName)' != ''">'$(ModuleName)'</PoPackageName>

    <!-- Use default keyword to extract messages (same as NGetText.Catalog methods) -->
    <PoKeywordSpec></PoKeywordSpec>
  </PropertyGroup>

  <Target Name="PoTraceConstants" Condition="'$(PoTrace)' == 'true'">
    <Message Text="IntermediateOutputPath   = $(IntermediateOutputPath)" Importance="high" />
    <Message Text="IntDir                   = $(IntDir)" Importance="high" />
    <Message Text="TargetDir                = $(TargetDir)" Importance="high" />
    <Message Text="LastSolutionSavePath     = $(LastSolutionSavePath)" Importance="high" />
    <Message Text="PoBundleName             = $(PoBundleName)" Importance="high" />
    <Message Text="PoBundleRootDir          = $(PoBundleRootDir)" Importance="high" />
    <Message Text="PoReferencesDir          = $(PoReferencesDir)" Importance="high" />
    <Message Text="PotModuleReferencesPath  = $(PotModuleReferencesPath)" Importance="high" />
    <Message Text="PotDomainReferencesPath  = $(PotDomainReferencesPath)" Importance="high" />
    <Message Text="PoModuleName             = $(PoModuleName)" Importance="high" />
    <Message Text="PoModuleRootDir          = $(PoModuleRootDir)" Importance="high" />
    <Message Text="PotModuleDir             = $(PotModuleDir)" Importance="high" />
    <Message Text="PotModulePath            = $(PotModulePath)" Importance="high" />
    <Message Text="PotDomainSubdir          = $(PotDomainSubdir)" Importance="high" />
    <Message Text="PoDomainSubdir           = $(PoDomainSubdir)" Importance="high" />
    <Message Text="MoLocaleSubdir           = $(MoLocaleSubdir)" Importance="high" />
    <Message Text="MoLocaleDir              = $(MoLocaleDir)" Importance="high" />
  </Target>

  <!--=========================================================================-->
  <!-- Initialization -->
  <!--=========================================================================-->

  <ItemGroup>
    <!-- Make sure that PoResource is available in VisualStudio's Build Action combo -->
    <AvailableItemName Include="PoResource" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <PoResource>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Culture>en-US</Culture>
    </PoResource>
  </ItemDefinitionGroup>

  <Target Name="InitPoResources">
    <!-- Extract Culture metadata from PO project resource name (exemple: Project1.fr-CH.po) -->
    <AssignCulture Files="@(PoResource)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoResourceWithCulture" />
      <Output TaskParameter="AssignedFilesWithNoCulture" ItemName="PoResourceWithNoCulture" />
    </AssignCulture>

    <!-- Add Exists, Length and IsReadOnly metadata -->
    <AddFileInfo Files="@(PoResourceWithCulture);@(PoResourceWithNoCulture)">
      <Output TaskParameter="OutputFiles" ItemName="PoResourceWithInfo" />
    </AddFileInfo>
    
    <!-- Add metadata helpers -->
    <ItemGroup>
      <PoResource Remove="@(PoResourceWithInfo)" />
      <PoResource Include="@(PoResourceWithInfo)" />
      <PoResource>
        <!-- PO resource is considered initialized if not empty. -->
        <Initialized Condition="'%(Length)' &gt; '10'">true</Initialized>
        <DomainName>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)'))</DomainName>
      </PoResource>
      <PoResource>
        <DomainId>$(BundleRelativeProjectName)%(DomainName)</DomainId>

        <PoModuleReferencesPath>$(PoReferencesDir)PoModules.%(Culture).zou</PoModuleReferencesPath>
        <PoDomainReferencesPath>$(PoReferencesDir)PoDomains.%(Culture).zou</PoDomainReferencesPath>
        <MoDomainReferencesPath>$(PoReferencesDir)MoDomains.%(Culture).zou</MoDomainReferencesPath>

        <PotSourcePath>$(IntDir)%(DomainName).pot.src.zou</PotSourcePath>
        <PotDomainPath>$(IntDir)%(DomainName).pot</PotDomainPath>
        <PoBundleFileName>$(PoBundleName).%(Culture).po</PoBundleFileName>
        <PoModuleFileName Condition="'$(ModuleName)' != ''">$(PoModuleName).%(Culture).po</PoModuleFileName>
        <MoDomainLinkdir>$(MoLocaleLinkdir)%(Culture)\LC_MESSAGES\</MoDomainLinkdir>
        <MoDomainSubdir>$(MoLocaleSubdir)%(Culture)\LC_MESSAGES\</MoDomainSubdir>
        <MoDomainFileName>%(DomainName).mo</MoDomainFileName>
      </PoResource>
      <PoResource>
        <PoBundlePath>$(PoBundleRootDir)%(PoBundleFileName)</PoBundlePath>
        <PoModulePath Condition="'$(ModuleName)' != ''">$(PoModuleRootDir)%(PoModuleFileName)</PoModulePath>
        <MoDomainDir>$(ProjectDir)%(MoDomainSubdir)</MoDomainDir>
      </PoResource>
      <PoResource>
        <MoDomainPath>%(MoDomainDir)%(MoDomainFileName)</MoDomainPath>
      </PoResource>
    </ItemGroup>

    <LogItems Items="@(PoResource)" Title="PoResource" Condition="'$(PoTraceResources)' == 'true'"/>
  </Target>

  <Target Name="PoCreateRefsDir">
    <MakeDir Directories="$(PoReferencesDir)" />
  </Target>
  
  <!--=========================================================================-->
  <!-- SAVE PO REFERENCES -->
  <!--=========================================================================-->

  <!-- POT Domain -->

  <Target Name="ReadPotDomainReferences"
          DependsOnTargets="InitPoResources"
          Outputs="$(PotDomainReferencesPath)">

    <ReadLinesFromFile File="$(PotDomainReferencesPath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>

    <ItemGroup>
      <_PoReferences Include="@(_Temporary->'$(BundleDir)%(Identity)')" />
      <_PoReferences Remove="%(PoResource.PotDomainPath)" />
      <_PoReferences Include="%(PoResource.PotDomainPath)" />
      <PoResource>
        <PotDomainReferences>@(_PoReferences)</PotDomainReferences>
      </PoResource>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>

    <!--<Message Importance="high" Text="PotDomainReferences.FileNames=@(_PoReferences->'%(FileName)%(Extension)')" />-->
    <LogItems Items="@(_PoReferences)" Title="PotDomainReference" Condition="'$(PoTracetDomainReferences)' == 'true'"/>

    <ItemGroup>
      <_PoReferences Remove="@(_PoReferences)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdatePotDomainReferences"
          DependsOnTargets="ReadPotDomainReferences;PoCreateRefsDir"
          Outputs="$(PotDomainReferencesPath)">

    <ItemGroup>
      <_Temporary Include="%(PoResource.PotDomainReferences)" />
    </ItemGroup>
    <ItemGroup>
      <_Temporary Remove="%(PoResource.PotDomainPath)" />
      <_Temporary Include="%(PoResource.PotDomainPath)" />
      <PoResource>
        <PotDomainReferences>@(_Temporary)</PotDomainReferences>
      </PoResource>
      <_Temporary>
        <RelativePath>$([MSBuild]::MakeRelative($(BundleDir), %(FullPath)))</RelativePath>
      </_Temporary>
    </ItemGroup>
    <WriteLinesToFile File="$(PotDomainReferencesPath)" Lines="@(_Temporary->'%(RelativePath)')" Overwrite="true" />

    <Message Text='Added "%(PoResource.PotDomainPath)" to "$(PotDomainReferencesPath)"' />

    <!--<Message Importance="high" Text="PotDomainReferences=@(_Temporary->'%(FileName)%(Extension)')" />-->
    <!--<LogItems Items="@(_Temporary)" Title="PotDomainReference" />-->

    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <!-- POT Module -->

  <Target Name="ReadPotModuleReferences"
          DependsOnTargets="InitPoResources"
          Outputs="$(PotModuleReferencesPath)">

    <ReadLinesFromFile File="$(PotModuleReferencesPath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>

    <ItemGroup>
      <_PoReferences Include="@(_Temporary->'$(BundleDir)%(Identity)')" />
      <_PoReferences Remove="$(PotModulePath)" />
      <_PoReferences Include="$(PotModulePath)" />
      <PoResource>
        <PotModuleReferences>@(_PoReferences)</PotModuleReferences>
      </PoResource>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>

    <!--<Message Importance="high" Text="PotModuleReferences.FileNames=@(_PoReferences->'%(FileName)%(Extension)')" />-->
    <LogItems Items="@(_PoReferences)" Title="PotModuleReference" Condition="'$(PoTracetModuleReferences)' == 'true'"/>

    <ItemGroup>
      <_PoReferences Remove="@(_PoReferences)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdatePotModuleReferences"
          Condition="'$(ModuleName)' != ''"
          DependsOnTargets="ReadPotModuleReferences;PoCreateRefsDir"
          Outputs="$(PotModuleReferencesPath)">

    <ItemGroup>
      <_Temporary Include="%(PoResource.PotModuleReferences)" />
    </ItemGroup>
    <ItemGroup>
      <_Temporary Remove="$(PotModulePath)" />
      <_Temporary Include="$(PotModulePath)" />
      <PoResource>
        <PotModuleReferences>@(_Temporary)</PotModuleReferences>
      </PoResource>
      <_Temporary>
        <RelativePath>$([MSBuild]::MakeRelative($(BundleDir), %(FullPath)))</RelativePath>
      </_Temporary>
    </ItemGroup>
    <WriteLinesToFile File="$(PotModuleReferencesPath)" Lines="@(_Temporary->'%(RelativePath)')" Overwrite="true" />

    <Message Text='Added "$(PotModulePath)" to "$(PotModuleReferencesPath)"' />

    <!--<Message Importance="high" Text="PotModuleReferences=@(_Temporary->'%(FileName)%(Extension)')" />-->
    <!--<LogItems Items="@(_Temporary)" Title="PotModuleReference" />-->

    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <!-- PO Domain -->

  <Target Name="ReadPoDomainReferences"
          DependsOnTargets="InitPoResources"
          Outputs="%(PoResource.PoDomainReferencesPath)">

    <ReadLinesFromFile File="%(PoResource.PoDomainReferencesPath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>

    <ItemGroup>
      <_PoReferences Include="@(_Temporary->'$(BundleDir)%(Identity)')" />
      <_PoReferences Remove="%(PoResource.FullPath)" />
      <_PoReferences Include="%(PoResource.FullPath)" />
      <PoResource>
        <PoDomainReferences>@(_PoReferences)</PoDomainReferences>
      </PoResource>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>

    <!--<Message Importance="high" Text="PoDomainReferences.FileNames=@(_PoReferences->'%(FileName)%(Extension)')" />-->
    <LogItems Items="@(_PoReferences)" Title="PoDomainReference" Condition="'$(PoTraceDomainReferences)' == 'true'"/>

    <ItemGroup>
      <_PoReferences Remove="@(_PoReferences)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdatePoDomainReferences"
          DependsOnTargets="ReadPoDomainReferences;PoCreateRefsDir"
          Outputs="%(PoResource.PoDomainReferencesPath)">

    <ItemGroup>
      <_Temporary Include="%(PoResource.PoDomainReferences)" />
    </ItemGroup>
    <ItemGroup>
      <_Temporary Remove="%(PoResource.FullPath)" />
      <_Temporary Include="%(PoResource.FullPath)" />
      <PoResource>
        <PoDomainReferences>@(_Temporary)</PoDomainReferences>
      </PoResource>
      <_Temporary>
        <RelativePath>$([MSBuild]::MakeRelative($(BundleDir), %(FullPath)))</RelativePath>
      </_Temporary>
    </ItemGroup>
    <WriteLinesToFile File="%(PoResource.PoDomainReferencesPath)" Lines="@(_Temporary->'%(RelativePath)')" Overwrite="true" />

    <Message Text='Added "%(PoResource.FullPath)" to "%(PoResource.PoDomainReferencesPath)"' />

    <!--<Message Importance="high" Text="PoDomainReferences=@(_Temporary->'%(FileName)%(Extension)')" />-->
    <!--<LogItems Items="@(_Temporary)" Title="PoDomainReference" />-->

    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <!-- PO Module -->

  <Target Name="ReadPoModuleReferences"
          DependsOnTargets="InitPoResources"
          Returns="%(PoResource.PoModuleReferencesPath)">

    <ReadLinesFromFile File="%(PoResource.PoModuleReferencesPath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>

    <ItemGroup>
      <_PoReferences Include="@(_Temporary->'$(BundleDir)%(Identity)')" />
      <_PoReferences Remove="%(PoResource.PoModulePath)" />
      <_PoReferences Include="%(PoResource.PoModulePath)" />
      <PoResource>
        <PoModuleReferences>@(_PoReferences)</PoModuleReferences>
      </PoResource>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>

    <!--<Message Importance="high" Text="PoModuleReferences.FileNames=@(_PoReferences->'%(FileName)%(Extension)')" />-->
    <LogItems Items="@(_PoReferences)" Title="PoModuleReference" Condition="'$(PoTraceModuleReferences)' == 'true'"/>

    <ItemGroup>
      <_PoReferences Remove="@(_PoReferences)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdatePoModuleReferences"
          Condition="'$(ModuleName)' != ''"
          DependsOnTargets="ReadPoModuleReferences;PoCreateRefsDir"
          Outputs="%(PoResource.PoModuleReferencesPath)">

    <ItemGroup>
      <_Temporary Include="%(PoResource.PoModuleReferences)" />
    </ItemGroup>
    <ItemGroup>
      <_Temporary Remove="%(PoResource.PoModulePath)" />
      <_Temporary Include="%(PoResource.PoModulePath)" />
      <PoResource>
        <PoModuleReferences>@(_Temporary)</PoModuleReferences>
      </PoResource>
      <_Temporary>
        <RelativePath>$([MSBuild]::MakeRelative($(BundleDir), %(Identity)))</RelativePath>
      </_Temporary>
    </ItemGroup>
    <WriteLinesToFile File="%(PoResource.PoModuleReferencesPath)" Lines="@(_Temporary->'%(RelativePath)')" Overwrite="true" />

    <Message Text='Added "%(PoResource.PoModulePath)" to "%(PoResource.PoModuleReferencesPath)"' />

    <!--<Message Importance="high" Text="PoModuleReferences=@(_Temporary->'%(FileName)%(Extension)')" />-->
    <!--<LogItems Items="@(_Temporary)" Title="PoModuleReference" />-->

    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <!-- MO Domain -->

  <Target Name="ReadMoDomainReferences"
          DependsOnTargets="InitPoResources"
          Outputs="%(PoResource.MoDomainReferencesPath)">

    <ReadLinesFromFile File="%(PoResource.MoDomainReferencesPath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>

    <ItemGroup>
      <_PoReferences Include="@(_Temporary->'$(BundleDir)%(Identity)')" />
      <_PoReferences Remove="%(PoResource.MoDomainPath)" />
      <_PoReferences Include="%(PoResource.MoDomainPath)" />
      <PoResource>
        <MoDomainReferences>@(_PoReferences)</MoDomainReferences>
      </PoResource>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>

    <!--<Message Importance="high" Text="MoDomainReferences.FileNames=@(_PoReferences->'%(FileName)%(Extension)')" />-->
    <LogItems Items="@(_PoReferences)" Title="MoDomainReference" Condition="'$(PoTraceMoDomainReferences)' == 'true'" />

    <ItemGroup>
      <_PoReferences Remove="@(_PoReferences)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdateMoDomainReferences"
        DependsOnTargets="ReadMoDomainReferences;PoCreateRefsDir"
        Outputs="%(PoResource.MoDomainReferencesPath)">

    <ItemGroup>
      <_Temporary Include="%(PoResource.MoDomainReferences)" />
    </ItemGroup>
    <ItemGroup>
      <_Temporary Remove="%(PoResource.MoDomainPath)" />
      <_Temporary Include="%(PoResource.MoDomainPath)" />
      <PoResource>
        <MoDomainReferences>@(_Temporary)</MoDomainReferences>
      </PoResource>
      <_Temporary>
        <RelativePath>$([MSBuild]::MakeRelative($(BundleDir), %(FullPath)))</RelativePath>
      </_Temporary>
    </ItemGroup>
    <WriteLinesToFile File="%(PoResource.MoDomainReferencesPath)" Lines="@(_Temporary->'%(RelativePath)')" Overwrite="true" />

    <Message Text='Added "%(PoResource.MoDomainPath)" to "%(PoResource.MoDomainReferencesPath)"' />

    <!--<Message Importance="high" Text="MoDomainReferences=@(_Temporary->'%(FileName)%(Extension)')" />-->
    <!--<LogItems Items="@(_Temporary)" Title="MoDomainReference" />-->

    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <!--=========================================================================-->
  <!-- CREATE PO DOMAIN -->
  <!--=========================================================================-->

  <!-- POT source -->
  
  <Target Name="InitPotSources"
          Returns="@(PotSource)">
    <ItemGroup>
      <PotSource Include="@(Compile)" Exclude="$(TMP)\*;$(IntDir)\*;Properties\Resources.Designer.cs;Properties\AssemblyInfo.cs" />
      <PotSource>
        <RelativePath>$([MSBuild]::MakeRelative($(BundleDir), %(PotSource.FullPath)))</RelativePath>
      </PotSource>
    </ItemGroup>
    <!--<LogItems Items="@(PotSource)" Title="PotSource" AllMetadata="true"/>-->
  </Target>

  <Target Name="CreatePotSource"
          DependsOnTargets="InitPoResources;InitPotSources"
          Inputs="@(PotSource)"
          Outputs="%(PoResource.PotSourcePath)">

    <WriteLinesToFile File="%(PoResource.PotSourcePath)" Lines="@(PotSource->'%(RelativePath)')" Overwrite="true" />
    <Message Text='Created POT source file: "%(PoResource.PotSourcePath)"' />

    <Prompt Text="$ create =&gt; %(PoResource.PotSourcePath) -- $(ContinueMessage)"
            Condition="'$(Interactive)' == 'True'" />
  </Target>

  <Target Name="DeletePotSource" DependsOnTargets="InitPoResources">
    <Delete Files="@(PoResource->'%(PotSourcePath)')" />
  </Target>

  <!-- POT domain-->

  <Target Name="CreatePotDomain"
          DependsOnTargets="CreatePotSource;UpdatePotDomainReferences;UpdatePotModuleReferences"
          Inputs="%(PoResource.PotSourcePath)"
          Outputs="%(PoResource.PotDomainPath)">

    <!-- PotDomain = xgettext(PotSource) -->
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(BundleDir)." -f"%(PoResource.PotSourcePath)" -o"%(PoResource.PotDomainPath)"</_Options>
      <_Options Condition="'$(PoNoLocation)'  == 'true'">$(_Options) --no-location</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <Error Code="$(ErrorPoNoMessageIdCode)" Text="$(ErrorPoNoMessageId)" Condition="!Exists(%(PoResource.PotDomainPath))" ContinueOnError="false" />

    <!-- Replace CHARSET with UTF-8 and remove BOM -->
    <FileUpdate Files="%(PoResource.PotDomainPath)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3"/>

    <Prompt Text="$ xgettext =&gt; %(PoResource.PotDomainPath) -- $(ContinueMessage)"
            Condition="'$(Interactive)' == 'True'" />
  </Target>

  <Target Name="DeletePotDomain" DependsOnTargets="InitPoResources">
    <Delete Files="@(PoResource->'%(PotDomainPath)')" />
  </Target>

  <!-- PO domain -->
  
  <Target Name="InitPoDomain" Inputs="%(PoResource.PotDomainPath)" Outputs="%(FullPath)">

    <!-- PoResource = msginit(PotDomain) - fuzzy marker (if not initialized) -->
    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale=%(PoResource.Culture)</_Options>
      <_Options>$(_Options) -o"%(PoResource.FullPath)" -i"%(PoResource.PotDomainPath)"</_Options>
    </PropertyGroup>

    <MakeDir Directories="%(PoResource.RootDir)%(Directory)" />
    <Exec Command='"$(MsgInit)" $(_Options)' />

    <Prompt Text="$ msginit =&gt; %(PoResource.FullPath) -- $(ContinueMessage)" Condition="'$(Interactive)' == 'True'" />

    <!-- PoResource -= header's fuzzy marker -->
    <PropertyGroup>
      <_Options>-o"%(PoResource.FullPath)"</_Options>
      <_Options Condition="'$(PoNoFuzzy)'  == 'true'">$(_Options) --clear-fuzzy</_Options>
      <_Options Condition="'$(PoNoLocation)'  == 'true'">$(_Options) --no-location</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgAttrib)" $(_Options) "%(PoResource.FullPath)"' Condition="'$(PoNoFuzzy)' == 'true'" />

    <!-- Clean -->
    <ItemGroup>
      <PoFile Include="%(PoResource.FullPath)">
        <Bundle>$(BundleName)</Bundle>
        <Module Condition="'$(ModuleName)' != ''">$(ModuleName)</Module>
        <DomainName>%(PoResource.DomainName)</DomainName>
        <NoPotCreationDate>$(NoPotCreationDate)</NoPotCreationDate>
        <NoPoRevisionDate>$(NoPoRevisionDate)</NoPoRevisionDate>
      </PoFile>
    </ItemGroup>
    <CleanPoFile SourceFiles="@(PoFile)" Condition="'$(PoNoClean)' != 'true'"/>
    <ItemGroup>
      <PoFile Remove="@(PoFile)" />
    </ItemGroup>
  </Target>

  <Target Name="UpdatePoDomain" 
          Inputs="%(PoResource.PotDomainPath)"
          Outputs="%(FullPath)">

    <!-- PoDomain = msmerge(culture, PoDomain, PotDomain) -->
    <PropertyGroup>
      <_Options>-q --no-wrap -D"$(BundleDir)." --lang=%(PoResource.Culture)</_Options>
      <_Options Condition="'$(PoNoLocation)'  == 'true'">$(_Options) --no-location</_Options>
      <_Options Condition="Exists(%(PoResource.PoBundlePath))">$(_Options) -C"%(PoResource.PoBundlePath)"</_Options>
      <_Options>$(_Options) -o"%(PoResource.FullPath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "%(PoResource.FullPath)" "%(PoResource.PotDomainPath)"' />

    <Prompt Text="$ msgmerge =&gt; %(PoResource.FullPath) -- $(ContinueMessage)" Condition="'$(Interactive)' == 'True'" />

    <!-- Clean -->
    <ItemGroup>
      <PoFile Include="%(PoResource.FullPath)">
        <Bundle>$(BundleName)</Bundle>
        <Module Condition="'$(ModuleName)' != ''">$(ModuleName)</Module>
        <DomainName>%(PoResource.DomainName)</DomainName>
        <NoPotCreationDate>$(NoPotCreationDate)</NoPotCreationDate>
        <NoPoRevisionDate>$(NoPoRevisionDate)</NoPoRevisionDate>
      </PoFile>
    </ItemGroup>
    <CleanPoFile SourceFiles="@(PoFile)" Condition="'$(PoNoClean)' != 'true'"/>
    <ItemGroup>
      <PoFile Remove="@(PoFile)" />
    </ItemGroup>
  </Target>

  <Target Name ="CreatePoDomain"
          DependsOnTargets="InitPoResources;CreatePotDomain;UpdatePoDomainReferences;UpdatePoModuleReferences;UpdateMoDomainReferences"
          Returns="%(PoResource.Identity)">
    
    <CallTarget Targets="InitPoDomain"    Condition="'%(PoResource.Initialized)' != 'true'" />
    <CallTarget Targets="UpdatePoDomain"  Condition="'%(PoResource.Initialized)' == 'true'" />
    
  </Target>

  <!--=========================================================================-->
  <!-- CONSOLIDATE UPWARDS -->
  <!--=========================================================================-->

  <!-- Initialize PO collections -->

  <!-- Domain -->
  
  <Target Name="InitPotDomains" DependsOnTargets="ReadPotDomainReferences">
    <ItemGroup>
      <PotDomain Include="%(PoResource.PotDomainReferences)" />
      <PotDomain>
        <ProjectDir>$([System.String]::new(%(FullPath)).Substring(0, $([System.String]::new(%(FullPath)).IndexOf($(PotDomainSubdir)%(FileName)%(Extension)))))</ProjectDir>
      </PotDomain>
      <PotDomain>
        <DomainId>$([MSBuild]::MakeRelative($(BundleDir), %(ProjectDir)%(FileName)))</DomainId>
        <ModuleDir>$([MSBuild]::GetDirectoryNameOfFileAbove(%(ProjectDir), '.git'))</ModuleDir>
      </PotDomain>
      <PotDomain>
        <ModuleId Condition="'%(ModuleDir)' != ''">$([MSBuild]::MakeRelative($(BundleDir), %(ModuleDir)))</ModuleId>
        <ModuleDir>%(ModuleDir)\</ModuleDir>
      </PotDomain>
    </ItemGroup>
    <!--<LogItems Items="@(PotDomain)" Title="PotDomain" />-->
  </Target>
  
  <Target Name="InitPoDomains" DependsOnTargets="InitPotDomains;ReadPoDomainReferences">
    <ItemGroup>
      <PoDomain Include="%(PoResource.PoDomainReferences)">
        <Culture>en-US</Culture>
      </PoDomain>
      <PoDomain>
        <ProjectDir>$([System.String]::new(%(FullPath)).Substring(0, $([System.String]::new(%(FullPath)).IndexOf($(PoDomainSubdir)%(FileName)%(Extension)))))</ProjectDir>
        <DomainName>$([System.IO.Path]::GetFileNameWithoutExtension('%(FileName)'))</DomainName>
      </PoDomain>
      <PoDomain>
        <DomainId>$([MSBuild]::MakeRelative($(BundleDir), %(ProjectDir)%(DomainName)))</DomainId>
        <ModuleDir>$([MSBuild]::GetDirectoryNameOfFileAbove(%(ProjectDir), '.git'))</ModuleDir>
      </PoDomain>
      <PoDomain>
        <ModuleId Condition="'%(ModuleDir)' != ''">$([MSBuild]::MakeRelative($(BundleDir), %(ModuleDir)))</ModuleId>
        <ModuleDir>%(ModuleDir)\</ModuleDir>
      </PoDomain>
      <PoDomain>
        <ModuleName>$([System.IO.Path]::GetFileNameWithoutExtension('%(ModuleId)'))</ModuleName>
      </PoDomain>
    </ItemGroup>

    <AssignCulture Files="@(PoDomain)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoDomainWithCulture" />
    </AssignCulture>
    <ItemGroup>
      <PoDomain Remove="@(PoDomainWithCulture)"/>
      <PoDomain Include="@(PoDomainWithCulture)"/>
      <PoDomainWithCulture Remove="@(PoDomainWithCulture)"/>
      <PoDomain>
        <BundlePath>$(PoBundleRootDir)$(PoBundleName).%(Culture).po</BundlePath>
      </PoDomain>
    </ItemGroup>

    <!-- PotPath -->
    <LeftOuterJoin Outer="@(PoDomain)" Inner="@(PotDomain)" Keys="DomainId" Modifiers="PotPath=FullPath">
      <Output TaskParameter="Result" ItemName="PoDomainWithPotPath" />
    </LeftOuterJoin>
    <ItemGroup>
      <PoDomain Remove="@(PoDomain)" />
      <PoDomain Include="@(PoDomainWithPotPath)" />
      <PoDomainWithPotPath Remove="@(PoDomainWithPotPath)" />
    </ItemGroup>

    <!--<LogItems Items="@(PoDomain)" Title="PoDomain" />-->
  </Target>

  <Target Name="InitMoDomains" DependsOnTargets="InitPoDomains">
    <ItemGroup>
      <MoDomain Include="%(PoResource.MoDomainReferences)" />
      <MoDomain>
        <ProjectDir>$([System.String]::new(%(FullPath)).Substring(0, $([System.String]::new(%(FullPath)).IndexOf($(MoLocaleSubdir)))))</ProjectDir>
      </MoDomain>
      <MoDomain>
        <CultureSubdir>$([MSBuild]::MakeRelative(%(ProjectDir)$(MoLocaleSubdir), %(FullPath)))</CultureSubdir>
      </MoDomain>
      <MoDomain>
        <Culture>$([System.String]::new(%(CultureSubdir)).Substring(0, $([System.String]::new(%(CultureSubdir)).IndexOf('\'))))</Culture>
      </MoDomain>
      <MoDomain>
        <BundlePath>$(PoBundleRootDir)$(PoBundleName).%(Culture).po</BundlePath>
        <DomainName>%(FileName)</DomainName>
        <MoDomainSubdir>$(MoLocaleSubdir)%(Culture)\LC_MESSAGES\</MoDomainSubdir>
      </MoDomain>
      <MoDomain>
        <MoDomainDir>%(ProjectDir)%(MoDomainSubdir)</MoDomainDir>
        <DomainId>$([MSBuild]::MakeRelative($(BundleDir), %(ProjectDir)%(DomainName)))</DomainId>
        <ModuleDir>$([MSBuild]::GetDirectoryNameOfFileAbove(%(ProjectDir), '.git'))</ModuleDir>
      </MoDomain>
      <MoDomain>
        <ModuleId Condition="'%(ModuleDir)' != ''">$([MSBuild]::MakeRelative($(BundleDir), %(ModuleDir)))</ModuleId>
        <ModuleDir>%(ModuleDir)\</ModuleDir>
      </MoDomain>
      <MoDomain>
        <ModuleName>$([System.IO.Path]::GetFileNameWithoutExtension('%(ModuleId)'))</ModuleName>
      </MoDomain>
    </ItemGroup>

    <!-- PoPath -->
    <LeftOuterJoin Outer="@(MoDomain)" Inner="@(PoDomain)" Keys="Culture;DomainId" Modifiers="PoPath=FullPath">
      <Output TaskParameter="Result" ItemName="MoDomainWithPoPath" />
    </LeftOuterJoin>
    <ItemGroup>
      <MoDomain Remove="@(MoDomain)" />
      <MoDomain Include="@(MoDomainWithPoPath)" />
      <MoDomainWithPoPath Remove="@(MoDomainWithPoPath)" />
    </ItemGroup>

    <!--<LogItems Items="@(MoDomain)" Title="MoDomain" />-->
  </Target>
  
  <!-- Module -->
  
  <Target Name="InitPotModules" DependsOnTargets="InitPotDomains;ReadPotModuleReferences">
    <ItemGroup>
      <_PotModule Include="%(PoResource.PotModuleReferences)" />
      <_PotModule>
        <ModuleDir>$([MSBuild]::GetDirectoryNameOfFileAbove(%(FullPath), '.git'))</ModuleDir>
      </_PotModule>
      <_PotModule>
        <ModuleId>$([MSBuild]::MakeRelative($(BundleDir), %(ModuleDir)))</ModuleId>
        <ModuleDir>%(ModuleDir)\</ModuleDir>
      </_PotModule>
    </ItemGroup>
    <GroupJoin Outer="@(_PotModule)" Inner="@(PotDomain)" Keys="ModuleId" Modifiers="Dependencies=FullPath">
      <Output TaskParameter="Result" ItemName="PotModule" />
    </GroupJoin>

    <!--<LogItems Items="@(PotModule)" Title="PotModule" />-->
  </Target>

  <Target Name="InitPoModules" DependsOnTargets="InitPotModules">
    <ItemGroup>
      <PoModule Include="%(PoResource.PoModuleReferences)">
        <DomainName/>
      </PoModule>
      <PoModule>
        <ModuleDir>$([MSBuild]::GetDirectoryNameOfFileAbove(%(FullPath), '.git'))</ModuleDir>
      </PoModule>
      <PoModule>
        <ModuleId>$([MSBuild]::MakeRelative($(BundleDir), %(ModuleDir)))</ModuleId>
        <ModuleDir>%(ModuleDir)\</ModuleDir>
      </PoModule>
      <PoModule>
        <ModuleName>$([System.IO.Path]::GetFileNameWithoutExtension('%(ModuleId)'))</ModuleName>
      </PoModule>
    </ItemGroup>

    <!-- Culture -->
    <AssignCulture Files="@(PoModule)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoModuleWithCulture" />
    </AssignCulture>
    <ItemGroup>
      <PoModule Remove="@(PoModuleWithCulture)"/>
      <PoModule Include="@(PoModuleWithCulture)"/>
      <PoModuleWithCulture Remove="@(PoModuleWithCulture)"/>
      <PoModule>
        <BundlePath>$(PoBundleRootDir)$(PoBundleName).%(Culture).po</BundlePath>
      </PoModule>
    </ItemGroup>

    <!-- PotPath -->
    <LeftOuterJoin Outer="@(PoModule)" Inner="@(PotModule)" Keys="ModuleId" Modifiers="PotPath=FullPath">
      <Output TaskParameter="Result" ItemName="PoModuleWithPotPath" />
    </LeftOuterJoin>
    <ItemGroup>
      <PoModule Remove="@(PoModule)" />
      <PoModule Include="@(PoModuleWithPotPath)" />
      <PoModuleWithPotPath Remove="@(PoModuleWithPotPath)" />
    </ItemGroup>

    <!--<LogItems Items="@(PoModule)" Title="PoModule" />-->
  </Target>
  
  <!-- PO Bundle -->
  
  <Target Name="InitPoBundles" DependsOnTargets="InitPoDomains;InitPoModules;InitMoDomains">
    <ItemGroup>
      <DomainCulture Include="%(PoDomain.Culture)" />
      <DomainCulture>
        <Culture>%(Identity)</Culture>
      </DomainCulture>
      <_PoBundle1 Include="@(DomainCulture->'$(PoBundleRootDir)$(PoBundleName).%(Identity).po')" />
    </ItemGroup>

    <!--<ItemGroup>
      <_PoBundle1 Include="@(PoModule->'$(PoBundleRootDir)$(PoBundleName).%(Culture).po')" KeepMetadata="Culture" />
    </ItemGroup>

    <RemoveDuplicates Inputs="@(_PoBundle1)" >
      <Output TaskParameter="Filtered" ItemName="_PoBundle2" />
    </RemoveDuplicates>-->

    <ItemGroup>
      <_ExistingPoModule Include="@(PoModule)" Condition="Exists(%(Identity))" />
    </ItemGroup>
    
    <GroupJoin Outer="@(_PoBundle1)" Inner="@(_ExistingPoModule);@(PoDomain)" Keys="Culture" Modifiers="PoDependencies=FullPath;PotDependencies=PotPath">
      <Output TaskParameter="Result" ItemName="_PoBundle2" />
    </GroupJoin>

    <ItemGroup>
      <_PoBundle1 Remove="@(_PoBundle1)" />
      <_ExistingMoDomain Include="@(MoDomain)" Condition="Exists(%(Identity))" />
    </ItemGroup>

    <GroupJoin Outer="@(_PoBundle2)" Inner="@(_ExistingMoDomain)" Keys="Culture" Modifiers="MoDependencies=FullPath">
      <Output TaskParameter="Result" ItemName="PoBundle" />
    </GroupJoin>
    <Message Text="%(PoBundle.Identity)" Importance="high" />

    <ItemGroup>
      <_PoBundle2 Remove="@(_PoBundle2)" />
    </ItemGroup>

    <!--<LogItems Items="@(PoBundle)" Title="PoBundle" />-->
  </Target>
  
  <Target Name="CreatePoBundle" DependsOnTargets="InitPoBundles"
          Inputs ="%(PoBundle.PoDependencies)"
          Outputs="%(PoBundle.Identity)">

    <ItemGroup>
      <_PoDependencies Include="%(PoBundle.PoDependencies)" />
      <_PoDependencies Include="%(PoBundle.FullPath)" Condition="Exists(%(FullPath))" />
    </ItemGroup>

    <PropertyGroup>
      <_Options>--no-wrap -D"$(BundleDir)." --lang=%(PoBundle.Culture) -o"%(PoBundle.FullPath)"</_Options>
      <_Options Condition="'$(PoNoLocation)' == 'true'">$(_Options) --no-location</_Options>
      <_PoDependencies>@(_PoDependencies->'"%(FullPath)"')</_PoDependencies>
      <_PoDependencies>$(_PoDependencies.Replace(';', ' '))</_PoDependencies>
    </PropertyGroup>

    <Exec Command='"$(MsgCat)" $(_Options) $(_PoDependencies)' />

    <Prompt Text="$ msgcat =&gt; %(PoBundle.FullPath) -- $(ContinueMessage)" Condition="'$(Interactive)' == 'True'" />

    <!-- Clean -->
    <ItemGroup>
      <PoFile Include="%(PoBundle.FullPath)">
        <Bundle>$(BundleName)</Bundle>
        <NoPotCreationDate>$(NoPotCreationDate)</NoPotCreationDate>
        <NoPoRevisionDate>$(NoPoRevisionDate)</NoPoRevisionDate>
      </PoFile>
    </ItemGroup>
    <CleanPoFile SourceFiles="@(PoFile)" Condition="'$(PoNoClean)' != 'true'"/>
    <ItemGroup>
      <PoFile Remove="@(PoFile)" />
    </ItemGroup>
  </Target>

  <!--=========================================================================-->
  <!-- CONSOLIDATE DOWNWARDS -->
  <!--=========================================================================-->
  
  <!-- POT Module -->
  
  <Target Name="CreatePotModule"
          DependsOnTargets="InitPotModules"
          Inputs="%(PotModule.Dependencies)"
          Outputs="%(PotModule.FullPath)">

    <!-- PotModule = msgcat (anyCulture, PotDomains) -->

    <ItemGroup>
      <_PotDependencies Include="%(PotModule.Dependencies)" />
    </ItemGroup>

    <PropertyGroup>
      <_Options>--no-wrap -D"$(BundleDir)." --lang="" -o"%(PotModule.FullPath)"</_Options>
      <_Options Condition="'$(PoNoLocation)'  == 'true'">$(_Options) --no-location</_Options>
      <_PotDependencies>@(_PotDependencies->'"%(FullPath)"')</_PotDependencies>
      <_PotDependencies>$(_PotDependencies.Replace(';', ' '))</_PotDependencies>
    </PropertyGroup>

    <MakeDir Directories="%(PotModule.RootDir)%(Directory)"/>
    <Exec Command='"$(MsgCat)" $(_Options) $(_PotDependencies)' />

    <Prompt Text="$ msgcat =&gt; %(PotModule.FullPath) -- $(ContinueMessage)" Condition="'$(Interactive)' == 'True'" />

    <ItemGroup>
      <_PotDependencies Remove="@(_PotDependencies)" />
    </ItemGroup>
  </Target>

  <Target Name="DeletePotModule" DependsOnTargets="ReadPotModuleReferences">
    <Delete Files="%(PoResource.PotModuleReferences)" />
  </Target>
  
  <!-- PO Module -->
  
  <Target Name="InitPoModule" Inputs="%(PoModule.PotPath)" Outputs="%(PoModule.FullPath)">

    <!-- PoModule = msginit(PotModule) -->
    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale=%(PoModule.Culture)</_Options>
      <_Options>$(_Options) -o"%(PoModule.FullPath)" -i"%(PoModule.PotPath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' />

    <Prompt Text="$ msginit =&gt; %(PoModule.FullPath) -- $(ContinueMessage)" Condition="'$(Interactive)' == 'True'" />

    <!-- PoModule -= header's fuzzy marker -->
    <PropertyGroup>
      <_Options>-o"%(PoModule.FullPath)"</_Options>
      <_Options Condition="'$(PoNoFuzzy)'  == 'true'">$(_Options) --clear-fuzzy</_Options>
      <_Options Condition="'$(PoNoLocation)'  == 'true'">$(_Options) --no-location</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgAttrib)" $(_Options) "%(PoModule.FullPath)"' Condition="'$(PoNoFuzzy)' == 'true'" />

    <!-- Clean -->
    <ItemGroup>
      <PoFile Include="%(PoModule.FullPath)">
        <Bundle>$(BundleName)</Bundle>
        <Module>%(PoBundle.ModuleName)</Module>
        <NoPotCreationDate>$(NoPotCreationDate)</NoPotCreationDate>
        <NoPoRevisionDate>$(NoPoRevisionDate)</NoPoRevisionDate>
      </PoFile>
    </ItemGroup>
    <CleanPoFile SourceFiles="@(PoFile)" Condition="'$(PoNoClean)' != 'true'"/>
    <ItemGroup>
      <PoFile Remove="@(PoFile)" />
    </ItemGroup>
  </Target>

  <Target Name="CreatePoModule"
          DependsOnTargets="InitPoModules;CreatePotModule"
          Inputs="%(PoModule.PotPath)"
          Outputs="%(PoModule.FullPath)">

    <CallTarget Targets="InitPoModule" Condition="!Exists(%(PoModule.FullPath))" />
  </Target>

  <!-- PO Bundle Dependencies -->

  <Target Name="InitPoItems" DependsOnTargets="InitPoDomains;InitPoModules">
    <ItemGroup>
      <PoItem Include="@(PoModule);@(PoDomain)" />
    </ItemGroup>
    <!--<LogItems Items="@(PoItem)" Title="PoItem" />-->
  </Target>
  
  <Target Name="RefreshPoBundleItems" DependsOnTargets="InitPoItems;InitMoDomains">
    
    <!-- Refresh PO items -->
    <GroupJoin Outer="@(PoBundle)" Inner="@(PoItem)" Keys="Culture" Modifiers="PoDependencies=FullPath;PotDependencies=PotPath">
      <Output TaskParameter="Result" ItemName="_PoBundle1" />
    </GroupJoin>
    <ItemGroup>
      <PoBundle Remove="@(PoBundle)" />
    </ItemGroup>
    
    <!-- Refresh MO Items -->
    <GroupJoin Outer="@(_PoBundle1)" Inner="@(MoDomain)" Keys="Culture" Modifiers="MoDependencies=FullPath">
      <Output TaskParameter="Result" ItemName="PoBundle" />
    </GroupJoin>
    <ItemGroup>
      <_PoBundle1 Remove="@(_PoBundle1)" />
    </ItemGroup>
    
    <!--<LogItems Items="@(PoBundle)" Title="PoBundle" />-->
  </Target>

  <!-- PO Tree -->

  <Target Name="UpdatePoTree"
          DependsOnTargets="RefreshPoBundleItems;CreatePoBundle;CreatePoModule"
          Inputs="%(PoItem.BundlePath);%(PotPath)"
          Outputs="%(FullPath)">

    <!-- PoItem = msmerge(culture, -C PoBundle, PoDescendant.PotFile) -->
    <PropertyGroup>
      <_Options>-q --no-wrap -D"$(BundleDir)." --lang=%(PoItem.Culture)</_Options>
      <_Options Condition="'$(PoNoLocation)'  == 'true'">$(_Options) --no-location</_Options>
      <_Options>$(_Options) -C"%(PoItem.BundlePath)"</_Options>
      <_Options>$(_Options) -o"%(PoItem.FullPath)"</_Options>
    </PropertyGroup>

    <Exec Command='"$(MsgMerge)" $(_Options) nul "%(PoItem.PotPath)"' />

    <Prompt Text="$ msgmerge =&gt; %(PoItem.FullPath) -- $(ContinueMessage)" Condition="'$(Interactive)' == 'True'" />

    <!-- Clean -->
    <ItemGroup>
      <PoFile Include="%(PoItem.FullPath)">
        <Bundle>$(BundleName)</Bundle>
        <Module>%(PoItem.ModuleName)</Module>
        <Domain>%(PoItem.DomainName)</Domain>
        <NoPotCreationDate>$(NoPotCreationDate)</NoPotCreationDate>
        <NoPoRevisionDate>$(NoPoRevisionDate)</NoPoRevisionDate>
      </PoFile>
    </ItemGroup>
    <CleanPoFile SourceFiles="@(PoFile)" Condition="'$(PoNoClean)' != 'true'"/>
  </Target>

  <Target Name="UpdateMoTree"
          DependsOnTargets="UpdatePoTree"
          Inputs="%(MoDomain.PoPath)"
          Outputs="%(FullPath)">

    <!-- MoDomain = msgfmt(PoDomain) -->
    <MakeDir Directories="%(PoResource.MoDomainDir)" />
    <Exec Command='"$(MsgFmt)" -o"%(MoDomain.FullPath)" "%(PoPath)"' />
    
    <!-- Save last modified time for TouchPoTree -->
    <ItemGroup>
      <_MoDomain1 Include="%(MoDomain.FullPath)" />
    </ItemGroup>
    <PropertyGroup>
      <MoLastModifiedTime>%(_MoDomain1.ModifiedTime)</MoLastModifiedTime>
    </PropertyGroup>
    <ItemGroup>
      <_MoDomain1 Remove="@(_MoDomain1)" />
    </ItemGroup>
    <!--<Message Importance="high" Text="[$(ProjectName)] MoLastModifiedTime = $(MoLastModifiedTime)" />-->
  </Target>

  <Target Name="InitPoTrees">
    <!-- PoTree -->
    <ItemGroup>
      <PoTree Include="%(PoBundle.FullPath)" />
      <PoTree Include="%(PoBundle.PotDependencies)" />
      <PoTree Include="%(PoBundle.PoDependencies)" />
      <!--<PoTree Include="%(PoBundle.MoDependencies)" />-->
    </ItemGroup>
    
    <!-- PoTreeModifiedTime -->
    <ItemGroup>
      <PoTreeModifiedTime Include="%(PoTree.ModifiedTime)"  />
      <!--<PoTreeModifiedTime Include="%(PoBundle.MoDependencies)"  />-->
    </ItemGroup>
    
    <!-- PoTreeChanged -->
    <PropertyGroup>
      <PoTreeChanged Condition="'@(PoTreeModifiedTime->Count())' &gt; '1'">true</PoTreeChanged>
    </PropertyGroup>
    
    <!--<LogItems Items="@(PoTree)" Title="PoTree" />
    <LogItems Items="@(PoTreeModifiedTime)" Title="PoTreeModifiedTime" />
    <Message Importance="high" Text="[$(ProjectName)] PoTreeChanged = $(PoTreeChanged)" />-->
  </Target>
  
  <Target Name="TouchPoTrees" DependsOnTargets="InitPoTrees">
    <Touch Files="@(PoTree)" Time="$(MoLastModifiedTime)" Condition="'$(PoTreeChanged)' == 'true'"/>
  </Target>

  <!--=========================================================================-->
  <!-- MO propagation -->
  <!--=========================================================================-->

  <Target Name="CreateMoDomainContent">
    <ItemGroup>
      <PoContent Include="%(PoResource.MoDomainPath)">
        <Link>%(PoResource.MoDomainLinkdir)%(MoDomainFileName)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </PoContent>
      <Content Include="@(PoContent)" />
    </ItemGroup>
    <Message Text="Content &lt;= %(PoContent.Identity)" />
  </Target>

  <!--=========================================================================-->
  <!-- Lock / Unlock -->
  <!--=========================================================================-->

  <Target Name="PoLock">
    <Lock Name="$(PoBundleRootDir)" />
  </Target>
  
  <Target Name="PoUnlock">
    <Unlock Name="$(PoBundleRootDir)" />
  </Target>
  
  <!--=========================================================================-->
  <!-- Last solution path -->
  <!--=========================================================================-->

  <Target Name ="ReadLastSolution">

    <ReadLinesFromFile File="$(LastSolutionSavePath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>
    
    <PropertyGroup >
      <LastSolutionPath>@(_Temporary)</LastSolutionPath>
    </PropertyGroup>

    <!--<Message Importance="high" Text="[R] SolutionPath     = $(SolutionPath)" />
    <Message Importance="high" Text="[R] LastSolutionPath = $(LastSolutionPath)" />-->
    
    <ItemGroup >
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>
  
  <Target Name ="WriteLastSolution">

    <!--<Message Importance="high" Text="[W] SolutionPath     = $(SolutionPath)" />-->
    
    <WriteLinesToFile File="$(LastSolutionSavePath)" Lines="$(SolutionPath)" Overwrite="true" />
  </Target>
  
  <Target Name="DeleteLastSolutionSave">
    <Delete Files="$(LastSolutionSavePath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Clean -->
  <!--=========================================================================-->

  <Target Name="PoCleanIfSolutionChange" DependsOnTargets="InitPoResources;ReadLastSolution;WriteLastSolution">

    <Delete Files="@(PoResource->'%(PotSourcePath)')" Condition="'$(LastSolutionPath)' != '$(SolutionPath)'" />
  </Target>

  <Target Name="PoCleanIfProjectChange"
          DependsOnTargets="InitPoResources"
          Inputs="$(ProjectPath)"
          Outputs="@(PoResource->'%(PotSourcePath)')">

    <Delete Files="@(PoResource->'%(PotSourcePath)')" />
  </Target>

  <!--.........................................................................-->

  <Target Name ="PoReset" Condition="$(PoReset) != ''">

    <ItemGroup>
      <_Temporary Include="$(PoBundleRootDir)**\*" />
      <_Temporary Include="$(PoModuleRootDir)**\*" />
      <_Temporary Include="@(PoResource)" />
    </ItemGroup>

    <Delete Files="@(_Temporary)" />

    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
      <_Temporary Include="$(PoBundleRootDir);$(PoBundleRootDir)**" />
      <_Temporary Include="$(PoModuleRootDir);$(PoModuleRootDir)**" />
    </ItemGroup>
    
    <RemoveDir Directories="@(_Temporary)" />
    
    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <!--.........................................................................-->

  <Target Name="PoCleanCoreForClean" DependsOnTargets="DeleteLastSolutionSave;DeletePotSource;DeletePotDomain;DeletePotModule;PoReset" >

    <ItemGroup>
      <_Temporary Include="$(PoReferencesDir)*.zou" />
      <_Temporary Include="$(PoBundleRootDir)*.mo" />
      <_Temporary Include="$(PoModuleRootDir)*.mo" />
      <_Temporary Include="%(PoResource.RootDir)%(Directory)*.mo" />
    </ItemGroup>
    
    <Delete Files="@(_Temporary)" />
    <RemoveDir Directories="$(PoReferencesDir)" ContinueOnError="true" />
    
    <ItemGroup>
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>

  <Target Name="PoCleanCoreForRebuild" DependsOnTargets="DeletePotDomain" />

  <Target Name="PoCleanCore" DependsOnTargets="PoCleanCoreForClean;PoCleanCoreForRebuild">
    <CallTarget Targets="PoCleanCoreForClean"   Condition="'$(ZouInsideRebuild)' != 'true'" />
    <CallTarget Targets="PoCleanCoreForRebuild" Condition="'$(ZouInsideRebuild)' == 'true'" />
  </Target>

  <Target Name="PoClean" AfterTargets="Clean">
    <CallTarget Targets="PoLock;PoCleanCore;PoUnlock" RunEachTargetSeparately="true" />
  </Target>
  
  <!--=========================================================================-->
  <!-- Build -->
  <!--=========================================================================-->

  <PropertyGroup>
    <PoBuildDependsOn>
      PoTraceConstants;
      PoCleanIfSolutionChange;
      PoCleanIfProjectChange;
      CreatePoDomain;
      CreatePoBundle;
      CreatePoModule;
      UpdatePoTree;
      UpdateMoTree;
      CreateMoDomainContent;
      TouchPoTrees;
    </PoBuildDependsOn>
  </PropertyGroup>
  
  <Target Name="PoBuildCore" DependsOnTargets="$(PoBuildDependsOn)" />

  <Target Name="PoBuild" BeforeTargets="ResolveReferences" Condition="'@(PoResource)' != ''" >
    <CallTarget Targets="PoLock;PoBuildCore;PoUnlock" RunEachTargetSeparately="true" />
  </Target>
  
</Project>