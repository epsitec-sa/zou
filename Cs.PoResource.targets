<?xml version="1.0" encoding="utf-8"?>
<!-- Import this script at the end of the C# interop project -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GetTextBuild">

  <!-- Make sure that PoResource is available in VisualStudio's Build Action combo -->
  <ItemGroup>
    <AvailableItemName Include="PoResource" />
    <!--<AvailableItemName Include="PoGlobalResource" />-->
  </ItemGroup>

  <Import Project="Cs.Boot.props"  Condition="'$(CsBootImported)' != 'true'"/>

  <!--=========================================================================-->
  <!-- Definitions -->
  
  <PropertyGroup>
    <PoAnchorDir>$(BundleDir)</PoAnchorDir>
    <PoIntDir>$([System.IO.Path]::Combine($(ProjectDir),$(IntermediateOutputPath)))</PoIntDir>
    <PoLocaleDir>locale\</PoLocaleDir>
    <PoTemplateSourcesPath>$(PoIntDir)potsources.txt</PoTemplateSourcesPath>
    <PoTemplatePath>$(PoIntDir)$(ProjectName).pot</PoTemplatePath>

    <BundleCompendiumDir>$(BundleDir).Resource\</BundleCompendiumDir>
    <BundleCompendiumName>BundleCompendium</BundleCompendiumName>
    <ModuleCompendiumDir  Condition="'$(ModuleDir)'  != ''">$(ModuleDir).Resource\</ModuleCompendiumDir>
    <ModuleCompendiumName Condition="'$(ModuleName)' != ''">ModuleCompendium</ModuleCompendiumName>
    <ModulePoTemplateName Condition="'$(ModuleName)' != ''">ModuleTemplate</ModulePoTemplateName>
    <ModulePoTemplatePath Condition="'$(ModuleName)' != ''">$(ModuleCompendiumDir)$(ModulePoTemplateName).pot</ModulePoTemplatePath>

    <!--<GetTextKeyword>_</GetTextKeyword>-->
    <XGetText>$(ZouBinDir)xgettext</XGetText>
    <MsgInit>$(ZouBinDir)msginit</MsgInit>
    <MsgMerge>$(ZouBinDir)msgmerge</MsgMerge>
    <MsgCat>$(ZouBinDir)msgcat</MsgCat>
    <MsgFmt>$(ZouBinDir)msgfmt</MsgFmt>
    <MsgAttrib>$(ZouBinDir)msgattrib</MsgAttrib>

    <PoCopyright>EPSITEC SA, CH-1400 Yverdon-les-Bains, Switzerland</PoCopyright>
    <PoPackageName Condition="'$(ModuleName)' == ''">'$(BundleName)'</PoPackageName>
    <PoPackageName Condition="'$(ModuleName)' != ''">'$(ModuleName)'</PoPackageName>

    <!-- Use default keyword to extract messages (same as NGetText.Catalog methods) -->
    <PoKeywordSpec></PoKeywordSpec>
  </PropertyGroup>

  <!--=========================================================================-->
  <!-- Setup PO Resource -->
  
  <Target Name="SetupPoResource">
    <!-- Extract Culture metadata -->
    <AssignCulture Files="@(PoResource);@(PoGlobalResource)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoResourceWithCulture" />
      <Output TaskParameter="AssignedFilesWithNoCulture" ItemName="PoResourceWithNoCulture" />
    </AssignCulture>
    <AddFileInfo Files="@(PoResourceWithCulture);@(PoResourceWithNoCulture)">
      <Output TaskParameter="OutputFiles" ItemName="PoResourceWithInfo" />
    </AddFileInfo>
    <!-- Add metadata helpers -->
    <ItemGroup>
      <PoResource Remove="@(PoResourceWithInfo)" />
      <PoResource Include="@(PoResourceWithInfo)" />
      <PoResource>
        <WithCulture>true</WithCulture>
        <Culture Condition="'%(Culture)' == ''">en-US</Culture>
      </PoResource>
      <PoResource>
        <Type>PO</Type>
        <Domain>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)'))</Domain>
        <MoResourceDir >$(TargetDir)$(PoLocaleDir)%(Culture)\LC_MESSAGES\</MoResourceDir>
        <BundleCompendium>$(BundleCompendiumDir)$(BundleCompendiumName).%(Culture).po</BundleCompendium>
        <ModuleCompendium Condition="'$(ModuleCompendiumDir)' != ''">$(ModuleCompendiumDir)$(ModuleCompendiumName).%(Culture).po</ModuleCompendium>
      </PoResource>
      <PoResource>
        <MoResourceFullPath>%(MoResourceDir)%(Domain).mo</MoResourceFullPath>
      </PoResource>
    </ItemGroup>
    <!--<LogItems Items="@(PoResource)" Title="PoResource" AllMetadata="true" />-->
  </Target>

  <!--=========================================================================-->
  <!-- Create PO Template -->

  <Target Name="GetPoSources" Condition="'@(Compile)' != ''">
    <ItemGroup>
      <PoSource Include="@(Compile)" Exclude="$(TMP)\*" />
      <PoSource Condition="'@(PoGlobalResource)' != ''" Include="%(ProjectReference.RootDir)%(Directory)**\*.cs" Exclude="%(ProjectReference.RootDir)%(Directory)obj\**\*.cs" />
      <PoSource>
        <AnchorRelativePath>$([MSBuild]::MakeRelative($(PoAnchorDir), %(PoSource.FullPath)))</AnchorRelativePath>
      </PoSource>
    </ItemGroup>
    <!--<LogItems Items="@(PoSource)" Title="PoSource" AllMetadata="true"/>-->
  </Target>

  <Target Name="SavePoSources"
          DependsOnTargets="GetPoSources"
          Inputs="@(PoSource)"
          Outputs="$(PoTemplateSourcesPath)">

    <MakeDir Directories="$(PoIntDir)" />
    <WriteLinesToFile File="$(PoTemplateSourcesPath)" Lines="@(PoSource->'%(AnchorRelativePath)')" Overwrite="true" />
  </Target>

  <Target Name="CreatePoTemplate"
          Inputs="$(PoTemplateSourcesPath)"
          DependsOnTargets="SavePoSources"
          Outputs="$(PoTemplatePath)">
    
    <!-- xgettext: Project.POT << *.cs -->
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(PoAnchorDir)." -f"$(PoTemplateSourcesPath)" -o"$(PoTemplatePath)"</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <!-- Replace CHARSET with UTF-8 -->
    <FileUpdate Files="$(PoTemplatePath)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3" />
  </Target>
  
  <Target Name="DeletePoTemplate" Outputs="$(PoTemplateSourcesPath);$(PoTemplatePath)">
    <Delete Files="$(PoTemplateSourcesPath);$(PoTemplatePath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Update module PO template -->

  <Target Name="UpdateModulePoTemplate"
          Condition="'$(ModulePoTemplatePath)' != ''"
          DependsOnTargets="SavePoSources"
          Inputs="$(PoTemplateSourcesPath)"
          Outputs="$(ModulePoTemplatePath)">
    <MakeDir Directories="$(ModuleCompendiumDir)" />
    
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(PoAnchorDir)." -f"$(PoTemplateSourcesPath)" -o"$(ModulePoTemplatePath)"</_Options>
      <_Options Condition="Exists('$(ModulePoTemplatePath)')">$(_Options) --join-existing</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <!-- Replace CHARSET with UTF-8 -->
    <FileUpdate Files="$(ModulePoTemplatePath)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3" />
  </Target>
  
  <Target Name="UpdateModulePoTemplate1"
          Condition="'$(ModulePoTemplatePath)' != ''"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PoTemplatePath)"
          Outputs="$(ModulePoTemplatePath)">
    
    <MakeDir Directories="$(ModuleCompendiumDir)" />

    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale="" -o"$(ModulePoTemplatePath)" -i"$(PoTemplatePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' Condition="!Exists('$(ModulePoTemplatePath)')" />
    
    <!-- Merge: ModuleCompendium |= PoTemplate << PoResource -->
    <PropertyGroup>
      <_Options>-U --no-wrap -q --lang="" -D"$(PoAnchorDir)."</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "$(ModulePoTemplatePath)" "$(PoTemplatePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Update bundle compendium -->

  <Target Name="UpdateBundleCompendium"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PoTemplatePath)"
          Outputs="%(PoResource.BundleCompendium)">

    <MakeDir Directories="$(BundleCompendiumDir)" />

    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(PoAnchorDir)." -f"$(PoTemplateSourcesPath)" -o"%(PoResource.BundleCompendium)"</_Options>
      <_Options Condition="Exists('%(PoResource.BundleCompendium)')">$(_Options) --join-existing</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <!-- Replace CHARSET with UTF-8 -->
    <FileUpdate Files="%(PoResource.BundleCompendium)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3" />
  </Target>
  
  <Target Name="UpdateBundleCompendium1"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PoTemplatePath)"
          Outputs="%(PoResource.BundleCompendium)">

    <MakeDir Directories="$(BundleCompendiumDir)" />

    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale=%(Culture) -o"%(PoResource.BundleCompendium)" -i"$(PoTemplatePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' Condition="!Exists('%(PoResource.BundleCompendium)')" />

    <!-- Merge: ModuleCompendium |= PoTemplate << PoResource -->
    <PropertyGroup>
      <_Options>-U --no-wrap -q --lang=%(PoResource.Culture) -D"$(PoAnchorDir)."</_Options>
      <_Options Condition="'%(PoResource.Length)' &gt; '10'">$(_Options) -C"%(PoResource.FullPath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "%(PoResource.BundleCompendium)" "$(PoTemplatePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Consolidate bundle compendium -->

  <Target Name="ConsolidateBundleCompendium"
          DependsOnTargets="InitBundleCompendium;UpdateModulePoTemplate"
          Inputs="%(PoResource.ModuleCompendium);$(ModulePoTemplatePath)"
          Outputs="%(PoResource.BundleCompendium)">

    <!-- Cat: BundleCompendium += ModuleCompendium -->
    <PropertyGroup>
      <_Options>--no-wrap --lang=%(Culture) -D"$(PoAnchorDir)." -o"%(PoResource.BundleCompendium)"</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.ModuleCompendium)' != '' And Exists('%(PoResource.ModuleCompendium)')"
          Command='"$(MsgCat)" $(_Options) "%(PoResource.BundleCompendium)" "%(PoResource.ModuleCompendium)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Update module compendium -->

  <Target Name="UpdateModuleCompendium"
          DependsOnTargets="ConsolidateBundleCompendium;UpdateModulePoTemplate"
          Inputs="$(ModulePoTemplatePath);%(PoResource.BundleCompendium)"
          Outputs="%(PoResource.ModuleCompendium)">
           
    <!-- Merge: ModuleCompendium |= ModulePoTemplate << BundleCompendium -->
    <PropertyGroup>
      <_Options>--no-wrap -q --lang=%(PoResource.Culture) -D"$(PoAnchorDir)." -C"%(PoResource.BundleCompendium)" -o"%(PoResource.ModuleCompendium)"</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.ModuleCompendium)' != ''"
          Command='"$(MsgMerge)" $(_Options) nul "$(ModulePoTemplatePath)"' />
    
    <!-- Avoid consolidation of bundle compendium during next build -->
    <Touch Condition="'%(PoResource.ModuleCompendium)' != ''"
           Files="%(PoResource.BundleCompendium)" ForceTouch="true" />
  </Target>

  <!--=========================================================================-->
  <!-- Update PO Resource -->

  <Target Name="UpdatePoResource"
          DependsOnTargets="UpdateBundleCompendium"
          Inputs="$(PoTemplatePath);%(PoResource.BundleCompendium)"
          Outputs="%(PoResource.FullPath)">

    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale=%(Culture) -o"%(PoResource.FullPath)" -i"$(PoTemplatePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' Condition="'%(PoResource.Length)' &lt; '10'" />

    <!-- Merge: PoResource = PoTemplate << BundleCompendium -->
    <PropertyGroup>
      <_Options>--no-wrap -q --lang=%(PoResource.Culture) -D"$(PoAnchorDir)."</_Options>
      <_Options>$(_Options) -C"%(PoResource.BundleCompendium)"</_Options>
      <_Options>$(_Options) -o"%(PoResource.FullPath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) nul "$(PoTemplatePath)"' />
    
    <!-- Avoid consolidation of bundle compendium during next build -->
    <!--<Touch Files="%(PoResource.BundleCompendium)" ForceTouch="true" />-->
  </Target>

  <!--=========================================================================-->
  <!-- Create MO Resource -->

  <Target Name="CreateMoResource"
          DependsOnTargets="UpdatePoResource"
          Inputs="%(PoResource.FullPath)"
          Outputs="%(PoResource.MoResourceFullPath)">
    <MakeDir Directories="%(PoResource.MoResourceDir)" />
    <Exec Command='"$(MsgFmt)" -c -o"%(PoResource.MoResourceFullPath)" "%(PoResource.FullPath)"' />
  </Target>

  <Target Name="DeleteMoResource" DependsOnTargets="SetupPoResource" Outputs="%(PoResource.MoResourceFullPath)">
    <!--<Message Importance="high" Text="[-] %(PoResource.MoResourceFullPath)" />-->
    <Delete Files="%(PoResource.MoResourceFullPath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Import MO Resources References -->
  
  <Target Name="GetMoResourceReferences">
    <ItemGroup>
      <MoResourceReference Include="%(ProjectReference.RootDir)%(Directory)$(OutputPath)$(PoLocaleDir)**\*.mo">
        <ProjectOwnerDirectory>%(ProjectReference.RootDir)%(Directory)</ProjectOwnerDirectory>
      </MoResourceReference>
      <MoResourceReference>
        <Link>$([MSBuild]::MakeRelative(%(MoResourceReference.ProjectOwnerDirectory)$(OutputPath), %(MoResourceReference.FullPath)))</Link>
      </MoResourceReference>
    </ItemGroup>
    <!--<LogItems Items="@(ProjectReference)" Title="ProjectReference" AllMetadata="true" />
    <LogItems Items="@(MoResourceReference)" Title="MoResourceReference" AllMetadata="true" />-->
  </Target>

  <Target Name="ImportMoResourceReferences"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="%(MoResourceReference.FullPath)"
          Outputs="$(TargetDir)$(PoLocaleDir)%(MoResourceReference.RecursiveDir)%(FileName)%(Extension)">
    <Copy SourceFiles="%(MoResourceReference.FullPath)" DestinationFiles="$(TargetDir)$(PoLocaleDir)%(RecursiveDir)%(FileName)%(Extension)"  />
  </Target>

  <!-- Set MO Resources files as content -->
  <Target Name="SetMoResourceReferencesAsContent"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="@(MoResourceReference)"
          Outputs="@(MoResourceReference->'$(TargetDir)%(RecursiveDir)%(FileName)%(Extension)')">
    <ItemGroup>
      <Content Include="@(MoResourceReference)">
        <Link>%(MoResourceReference.Link)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="ImportMoResourceReferencesBuild" BeforeTargets="BeforeBuild" DependsOnTargets="ImportMoResourceReferences;SetMoResourceReferencesAsContent" />
  <Target Name="ImportMoResourceReferencesClean" AfterTargets="AfterClean"   DependsOnTargets="GetMoResourceReferences" Outputs="@(MoResourceReference)">
    <Delete Files="@(MoResourceReference)" />
  </Target>

  <!--=========================================================================-->

  <Target Name="GetTextBuild0"
          DependsOnTargets="
            SetupPoResource;
            CreatePoTemplate;
            UpdateModulePoTemplate;
            ConsolidateBundleCompendium;
            UpdateModuleCompendium;
            UpdatePoResource;
            CreateMoResource">
    <!--<LogItems Items="@(PoResource)" AllMetadata="true" />-->
  </Target>
  <Target Name="GetTextBuild" BeforeTargets="Build"
          DependsOnTargets="
            SetupPoResource;
            CreatePoTemplate;
            UpdateModulePoTemplate;
            UpdateBundleCompendium;
            UpdatePoResource;
            CreateMoResource">
    <!--<LogItems Items="@(PoResource)" AllMetadata="true" />-->
  </Target>
  <Target Name="GetTextClean" AfterTargets="Clean" DependsOnTargets="DeleteMoResource;DeletePoTemplate" />
</Project>