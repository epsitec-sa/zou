<?xml version="1.0" encoding="utf-8"?>
<!-- Import this script at the end of the C# interop project -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GetTextBuild">

  <!-- Make sure that PoResource is available in VisualStudio's Build Action combo -->
  <ItemGroup>
    <AvailableItemName Include="PoResource" />
    <!--<AvailableItemName Include="PoGlobalResource" />-->
  </ItemGroup>

  <Import Project="Cs.Boot.props"  Condition="'$(CsBootImported)' != 'true'"/>

  <!--=========================================================================-->
  <!-- Definitions -->
  
  <PropertyGroup>
    <PoRootDir>$(BundleDir)</PoRootDir>
    <PoIntDir>$([System.IO.Path]::Combine($(ProjectDir),$(IntermediateOutputPath)))</PoIntDir>
    <PoLocaleSubdir>locale\</PoLocaleSubdir>
    <PoResourceSubdir>.Resource\</PoResourceSubdir>
    <PoSourcePath>$(PoIntDir)PoSource.txt</PoSourcePath>
    <PotResourcePath>$(PoIntDir)$(ProjectName).pot</PotResourcePath>

    <PoBundleDir>$(BundleDir)$(PoResourceSubdir)</PoBundleDir>
    <PoBundleName>Bundle</PoBundleName>
    <PoModuleDir   Condition="'$(ModuleDir)'  != ''">$(ModuleDir)$(PoResourceSubdir)</PoModuleDir>
    <PoModuleName  Condition="'$(ModuleName)' != ''">Module</PoModuleName>
    <PotModulePath Condition="'$(ModuleName)' != ''">$(PoModuleDir)$(PoModuleName).pot</PotModulePath>

    <!--<GetTextKeyword>_</GetTextKeyword>-->
    <XGetText>$(ZouBinDir)xgettext</XGetText>
    <MsgInit>$(ZouBinDir)msginit</MsgInit>
    <MsgMerge>$(ZouBinDir)msgmerge</MsgMerge>
    <MsgCat>$(ZouBinDir)msgcat</MsgCat>
    <MsgFmt>$(ZouBinDir)msgfmt</MsgFmt>
    <MsgAttrib>$(ZouBinDir)msgattrib</MsgAttrib>

    <PoCopyright>EPSITEC SA, CH-1400 Yverdon-les-Bains, Switzerland</PoCopyright>
    <PoPackageName Condition="'$(ModuleName)' == ''">'$(BundleName)'</PoPackageName>
    <PoPackageName Condition="'$(ModuleName)' != ''">'$(BundleName).$(ModuleName)'</PoPackageName>

    <!-- Use default keyword to extract messages (same as NGetText.Catalog methods) -->
    <PoKeywordSpec></PoKeywordSpec>
  </PropertyGroup>

  <!--=========================================================================-->
  <!-- Init PO Resource metadata -->
  
  <Target Name="InitPoResourceMetadata">
    <!-- Extract Culture metadata -->
    <AssignCulture Files="@(PoResource);@(PoGlobalResource)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoResourceWithCulture" />
      <Output TaskParameter="AssignedFilesWithNoCulture" ItemName="PoResourceWithNoCulture" />
    </AssignCulture>
    <AddFileInfo Files="@(PoResourceWithCulture);@(PoResourceWithNoCulture)">
      <Output TaskParameter="OutputFiles" ItemName="PoResourceWithInfo" />
    </AddFileInfo>
    <!-- Add metadata helpers -->
    <ItemGroup>
      <PoResource Remove="@(PoResourceWithInfo)" />
      <PoResource Include="@(PoResourceWithInfo)" />
      <!-- Use en-US as default culture -->
      <PoResource>
        <WithCulture>true</WithCulture>
        <Culture Condition="'%(Culture)' == ''">en-US</Culture>
      </PoResource>
      <PoResource>
        <Domain>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)'))</Domain>
        <MoResourceDir >$(TargetDir)$(PoLocaleSubdir)%(Culture)\LC_MESSAGES\</MoResourceDir>
        <PoBundlePath>$(PoBundleDir)$(PoBundleName).%(Culture).po</PoBundlePath>
        <PoModulePath Condition="'$(PoModuleDir)' != ''">$(PoModuleDir)$(PoModuleName).%(Culture).po</PoModulePath>
      </PoResource>
      <PoResource>
        <MoResourcePath>%(MoResourceDir)%(Domain).mo</MoResourcePath>
      </PoResource>
    </ItemGroup>
    <!--<LogItems Items="@(PoResource)" Title="PoResource" AllMetadata="true" />-->
  </Target>

  <!--=========================================================================-->
  <!-- PoSource = *.cs -->

  <Target Name="GetPoSources" Condition="'@(Compile)' != ''">
    <ItemGroup>
      <PoSource Include="@(Compile)" Exclude="$(TMP)\*" />
      <PoSource Condition="'@(PoGlobalResource)' != ''" Include="%(ProjectReference.RootDir)%(Directory)**\*.cs" Exclude="%(ProjectReference.RootDir)%(Directory)obj\**\*.cs" />
      <PoSource>
        <RelativePath>$([MSBuild]::MakeRelative($(PoRootDir), %(PoSource.FullPath)))</RelativePath>
      </PoSource>
    </ItemGroup>
    <!--<LogItems Items="@(PoSource)" Title="PoSource" AllMetadata="true"/>-->
  </Target>

  <Target Name="SavePoSources"
          DependsOnTargets="GetPoSources"
          Inputs="@(PoSource)"
          Outputs="$(PoSourcePath)">

    <MakeDir Directories="$(PoIntDir)" />
    <WriteLinesToFile File="$(PoSourcePath)" Lines="@(PoSource->'%(RelativePath)')" Overwrite="true" />
  </Target>

  <!--=========================================================================-->
  <!-- Create PO Template -->

  <Target Name="CreatePoTemplate"
          Inputs="$(PoSourcePath)"
          DependsOnTargets="SavePoSources"
          Outputs="$(PotResourcePath)">
    
    <!-- xgettext: Project.POT << *.cs -->
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(PoRootDir)." -f"$(PoSourcePath)" -o"$(PotResourcePath)"</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <!-- Replace CHARSET with UTF-8 -->
    <FileUpdate Files="$(PotResourcePath)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3" />
  </Target>
  
  <Target Name="DeletePoTemplate" Outputs="$(PoSourcePath);$(PotResourcePath)">
    <Delete Files="$(PoSourcePath);$(PotResourcePath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Update module PO template -->

  <Target Name="UpdatePotModule"
          Condition="'$(PotModulePath)' != ''"
          DependsOnTargets="SavePoSources"
          Inputs="$(PoSourcePath)"
          Outputs="$(PotModulePath)">
    <MakeDir Directories="$(PoModuleDir)" />
    
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(PoRootDir)." -f"$(PoSourcePath)" -o"$(PotModulePath)"</_Options>
      <_Options Condition="Exists('$(PotModulePath)')">$(_Options) --join-existing</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <!-- Replace CHARSET with UTF-8 -->
    <FileUpdate Files="$(PotModulePath)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3" />
  </Target>
  
  <Target Name="UpdatePotModule1"
          Condition="'$(PotModulePath)' != ''"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PotResourcePath)"
          Outputs="$(PotModulePath)">
    
    <MakeDir Directories="$(PoModuleDir)" />

    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale="" -o"$(PotModulePath)" -i"$(PotResourcePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' Condition="!Exists('$(PotModulePath)')" />
    
    <!-- Merge: PoModulePath |= PotResource << PoResource -->
    <PropertyGroup>
      <_Options>-U --no-wrap -q --lang="" -D"$(PoRootDir)."</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "$(PotModulePath)" "$(PotResourcePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Update bundle compendium -->

  <Target Name="UpdatePoBundle"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PotResourcePath)"
          Outputs="%(PoResource.PoBundlePath)">

    <MakeDir Directories="$(PoBundleDir)" />

    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap -D"$(PoRootDir)." -f"$(PoSourcePath)" -o"%(PoResource.PoBundlePath)"</_Options>
      <_Options Condition="Exists('%(PoResource.PoBundlePath)')">$(_Options) --join-existing</_Options>
      <_Options Condition="'$(PoCopyright)'   != ''">$(_Options) --copyright-holder="$(PoCopyright)"</_Options>
      <_Options Condition="'$(PoPackageName)' != ''">$(_Options) --package-name="$(PoPackageName)"</_Options>
      <_Options Condition="'$(PoKeywordSpec)' != ''">$(_Options) --keyword="$(PoKeywordSpec)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />

    <!-- Replace CHARSET with UTF-8 -->
    <FileUpdate Files="%(PoResource.PoBundlePath)" Multiline="true" IgnoreCase="true" Encoding="utf-8-without-bom"
                Regex='^("Content-Type.+?charset=)(CHARSET)(.*)$' ReplacementText="$1UTF-8$3" />
  </Target>
  
  <Target Name="UpdatePoBundle1"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PotResourcePath)"
          Outputs="%(PoResource.PoBundlePath)">

    <MakeDir Directories="$(PoBundleDir)" />

    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale=%(Culture) -o"%(PoResource.PoBundlePath)" -i"$(PotResourcePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' Condition="!Exists('%(PoResource.PoBundlePath)')" />

    <!-- Merge: PoModulePath |= PotResource << PoResource -->
    <PropertyGroup>
      <_Options>-U --no-wrap -q --lang=%(PoResource.Culture) -D"$(PoRootDir)."</_Options>
      <_Options Condition="'%(PoResource.Length)' &gt; '10'">$(_Options) -C"%(PoResource.FullPath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "%(PoResource.PoBundlePath)" "$(PotResourcePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Consolidate bundle compendium -->

  <Target Name="ConsolidatePoBundle"
          DependsOnTargets="InitPoBundle;UpdatePotModule"
          Inputs="%(PoResource.PoModulePath);$(PotModulePath)"
          Outputs="%(PoResource.PoBundlePath)">

    <!-- Cat: PoBundlePath += PoModulePath -->
    <PropertyGroup>
      <_Options>--no-wrap --lang=%(Culture) -D"$(PoRootDir)." -o"%(PoResource.PoBundlePath)"</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.PoModulePath)' != '' And Exists('%(PoResource.PoModulePath)')"
          Command='"$(MsgCat)" $(_Options) "%(PoResource.PoBundlePath)" "%(PoResource.PoModulePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Update module compendium -->

  <Target Name="UpdatePoModule"
          DependsOnTargets="ConsolidatePoBundle;UpdatePotModule"
          Inputs="$(PotModulePath);%(PoResource.PoBundlePath)"
          Outputs="%(PoResource.PoModulePath)">
           
    <!-- Merge: PoModulePath |= PotModule << PoBundlePath -->
    <PropertyGroup>
      <_Options>--no-wrap -q --lang=%(PoResource.Culture) -D"$(PoRootDir)." -C"%(PoResource.PoBundlePath)" -o"%(PoResource.PoModulePath)"</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.PoModulePath)' != ''"
          Command='"$(MsgMerge)" $(_Options) nul "$(PotModulePath)"' />
    
    <!-- Avoid consolidation of bundle compendium during next build -->
    <Touch Condition="'%(PoResource.PoModulePath)' != ''"
           Files="%(PoResource.PoBundlePath)" ForceTouch="true" />
  </Target>

  <!--=========================================================================-->
  <!-- Update PO Resource -->

  <Target Name="UpdatePoResource"
          DependsOnTargets="UpdatePoBundle"
          Inputs="$(PotResourcePath);%(PoResource.PoBundlePath)"
          Outputs="%(PoResource.FullPath)">

    <PropertyGroup>
      <_Options>--no-wrap --no-translator --locale=%(Culture) -o"%(PoResource.FullPath)" -i"$(PotResourcePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgInit)" $(_Options)' Condition="'%(PoResource.Length)' &lt; '10'" />

    <!-- Merge: PoResource = PotResource << PoBundlePath -->
    <PropertyGroup>
      <_Options>--no-wrap -q --lang=%(PoResource.Culture) -D"$(PoRootDir)."</_Options>
      <_Options>$(_Options) -C"%(PoResource.PoBundlePath)"</_Options>
      <_Options>$(_Options) -o"%(PoResource.FullPath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) nul "$(PotResourcePath)"' />
    
    <!-- Avoid consolidation of bundle compendium during next build -->
    <!--<Touch Files="%(PoResource.PoBundlePath)" ForceTouch="true" />-->
  </Target>

  <!--=========================================================================-->
  <!-- Create MO Resource -->

  <Target Name="CreateMoResource"
          DependsOnTargets="UpdatePoResource"
          Inputs="%(PoResource.FullPath)"
          Outputs="%(PoResource.MoResourcePath)">
    <MakeDir Directories="%(PoResource.MoResourceDir)" />
    <Exec Command='"$(MsgFmt)" -o"%(PoResource.MoResourcePath)" "%(PoResource.FullPath)"' />
  </Target>

  <Target Name="DeleteMoResource" DependsOnTargets="InitPoResourceMetadata" Outputs="%(PoResource.MoResourcePath)">
    <!--<Message Importance="high" Text="[-] %(PoResource.MoResourcePath)" />-->
    <Delete Files="%(PoResource.MoResourcePath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Import MO Resources References -->
  
  <Target Name="GetMoResourceReferences">
    <ItemGroup>
      <MoResourceReference Include="%(ProjectReference.RootDir)%(Directory)$(OutputPath)$(PoLocaleSubdir)**\*.mo">
        <ProjectOwnerDirectory>%(ProjectReference.RootDir)%(Directory)</ProjectOwnerDirectory>
      </MoResourceReference>
      <MoResourceReference>
        <Link>$([MSBuild]::MakeRelative(%(MoResourceReference.ProjectOwnerDirectory)$(OutputPath), %(MoResourceReference.FullPath)))</Link>
      </MoResourceReference>
    </ItemGroup>
    <!--<LogItems Items="@(ProjectReference)" Title="ProjectReference" AllMetadata="true" />
    <LogItems Items="@(MoResourceReference)" Title="MoResourceReference" AllMetadata="true" />-->
  </Target>

  <Target Name="ImportMoResourceReferences"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="%(MoResourceReference.FullPath)"
          Outputs="$(TargetDir)$(PoLocaleSubdir)%(MoResourceReference.RecursiveDir)%(FileName)%(Extension)">
    <Copy SourceFiles="%(MoResourceReference.FullPath)" DestinationFiles="$(TargetDir)$(PoLocaleSubdir)%(RecursiveDir)%(FileName)%(Extension)"  />
  </Target>

  <!-- Set MO Resources files as content -->
  <Target Name="SetMoResourceReferencesAsContent"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="@(MoResourceReference)"
          Outputs="@(MoResourceReference->'$(TargetDir)%(RecursiveDir)%(FileName)%(Extension)')">
    <ItemGroup>
      <Content Include="@(MoResourceReference)">
        <Link>%(MoResourceReference.Link)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="ImportMoResourceReferencesBuild" BeforeTargets="BeforeBuild" DependsOnTargets="ImportMoResourceReferences;SetMoResourceReferencesAsContent" />
  <Target Name="ImportMoResourceReferencesClean" AfterTargets="AfterClean"   DependsOnTargets="GetMoResourceReferences" Outputs="@(MoResourceReference)">
    <Delete Files="@(MoResourceReference)" />
  </Target>

  <!--=========================================================================-->

  <Target Name="GetTextBuild0"
          DependsOnTargets="
            InitPoResourceMetadata;
            CreatePoTemplate;
            UpdatePotModule;
            ConsolidatePoBundle;
            UpdatePoModule;
            UpdatePoResource;
            CreateMoResource">
    <!--<LogItems Items="@(PoResource)" AllMetadata="true" />-->
  </Target>
  <Target Name="GetTextBuild" BeforeTargets="Build"
          DependsOnTargets="
            InitPoResourceMetadata;
            CreatePoTemplate;
            UpdatePotModule;
            UpdatePoBundle;
            UpdatePoResource;
            CreateMoResource">
    <!--<LogItems Items="@(PoResource)" AllMetadata="true" />-->
  </Target>
  <Target Name="GetTextClean" AfterTargets="Clean" DependsOnTargets="DeleteMoResource;DeletePoTemplate" />
</Project>