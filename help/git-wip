usage: git wip start   [-r] [--hotfix] [<prefix>:][<suffix>] [-- <module-paths>]
   or: git wip enter   [-r] [--hotfix] [<prefix>:][<suffix>] [-- <module-paths>]
   or: git wip exit    [-r] [-- <module-paths>]
   or: git wip release [-r] [--merge] [-- <module-paths>]
   or: git wip finish  [-r] [--merge] [-- <module-paths>]
   or: git wip share

Manage WIP mode.

commands:
    start                   create and checkout WIP branches in bundle and specified modules
    enter                   checkout WIP branches in bundle and specified modules
    exit                    enter DEV or PROD mode in modules where WIP mode is activated (always recursive in bundle)
    release                 merge WIP branches into DEV and/or PROD branches (stay on WIP branches)
    finish                  release, exit and delete WIP branches
    share                   make all active WIP branches public (push them on origin)

options:
    -h|--help               display help
    -r|--recursive          visit specified modules recursively
    --hotfix                create a hotfix (graft WIP branch on production branch)
    --merge                 merge WIP branch into PROD and DEV branches (default in bundle)
    <prefix>                WIP prefix (default to 'hotfix' if --hotfix is specified else 'wip')
    <suffix>                WIP suffix (default to 'work')
    <module-paths>          specific modules to visit (default to current module)
    
example:
    git wip start                 # start 'wip:work' in bundle and current module
    git wip start my              # start 'wip:my'   in bundle and current module
    git wip start my -r           # start 'wip:my'   in bundle and current module recursively
    git wip start issue:7         # start 'issue:7'  in bundle and current module
    git wip start -- m1 m2        # start 'wip:work' in bundle and child modules 'm1' and 'm2'
    git wip start -r              # start 'wip:work' in bundle and current module recursively
    git wip start --hotfix my     # start 'hotfix:my' on PROD branch in bundle and current module
    git wip start hotfix:my       # same as 'git wip start --hotfix my'

    git wip enter my              # enter 'wip:my'    in bundle and current module
    git wip enter hotfix:my       # enter 'hotfix:my' in bundle and current module

    git wip release               # release WIP code to DEV in current module
    git wip release -r            # release WIP code to DEV in current module recursively

    git wip finish                # finish WIP mode in current module
    git wip finish -r -- ../m1    # finish WIP mode in sibling module 'm1' recursively
