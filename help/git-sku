usage: git sku enter  [-a] [--vnext] [--dev]    [<sku-spec>]
   or: git sku info   [-a] [-r]                 [-- <module-paths> ]
   or: git sku config [-a] [-r] [-i ..] [-x ..] [-- <module-paths> ]

Manage SKUs.

commands:
    enter                   enter SKU
    config                  [de]activate SKU submodules (default to active)
    info                    display SKU specialization info

options:
    -h|--help               display help
    -r|--recursive          visit specified modules recursively
    -a|--all                visit all submodules (skip SKU filter)
    --vnext                 enter next version (default to actual version)
    --dev                   enter developement mode (default to actual version)
    -i|--include [SM1,...]  include specific submodules (default to all) in current SKU
    -x|--exclude [SM1,...]  exclude specific submodules (default to all) from current SKU

arguments:
    <sku-spec>              SKU specification
    <module-paths>          specific modules to visit (default to current module)
    
example:
    git sku enter sal             # enter actual version of 'sal' SKU
                                  # checkout vtag 'sku/sal/<version>' of bundle and fallback vtags of submodules
    git sku enter                 # enter actual version of current SKU 
    git sku enter sal --vnext     # enter next version of 'sal' SKU
                                  # checkout vbranch 'sku/sal/<version>' of bundle and fallback vbranches of submodules
    git sku enter --vnext         # enter next version of current SKU
    git sku enter --dev           # enter development mode in current SKU
    
    git sku info                  # display SKU info of bundle and current module
    git sku info -- ../m1         # display SKU info of bundle and sibling module 'm1'

    git sku config                # display [in]active submodules
    git sku config -r             # display [in]active submodules recursively
    git sku config -i             # include all submodules in current SKU (default)
    git sku config -x             # exclude all submodules from current SKU
    git sku config -x sm1 sm2     # exclude submodules sm1 and sm2 from current SKU
