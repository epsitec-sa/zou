<!--
The CopyFile.targets can be used to copy files.
Input parameters:
- @(CopyFile)
  - %(TargetDir)  - default to OutDir
  - %(TargetFile) - default to source file
-->
<Project>
  <PropertyGroup>
    <CopyFileTargetsImported>true</CopyFileTargetsImported>
  </PropertyGroup>
  
  <!-- Define copy files default metadata -->
  <ItemDefinitionGroup>
    <CopyFile>
      <TargetFile>%(FileName)%(Extension)</TargetFile>
      <TargetDir>$(OutDir)</TargetDir>
      <RedistFolder>$(RedistFolder)</RedistFolder>
    </CopyFile>
  </ItemDefinitionGroup>

  <Target Name="CopyFileInitCrossBuild">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] CopyFileInitCrossBuild(CrossBuild=$(CrossBuild))" />

    <!-- CopyFile = CopyFile x RuntimeIdentifier (defined in Boot.Runtime.props ) -->
    <MulJoin Input="@(CopyFile)" Items="@(RuntimeIdentifier)" ItemName="RuntimeIdentifier" >
      <Output TaskParameter="Output" ItemName="_CopyFile" />
    </MulJoin>
    <ItemGroup>
      <CopyFile Remove="@(CopyFile)" />
      <CopyFile Include="@(_CopyFile)" />
      <_CopyFile Remove="@(_CopyFile)" />
    </ItemGroup>

    <ItemGroup>
      <CopyFile>
        <BundleRelativeSrcDir>$([MSBuild]::MakeRelative('$(BundleDir)', '%(RootDir)%(Directory)'))</BundleRelativeSrcDir>
        <BundleRelativeDstDir>$([MSBuild]::MakeRelative('$(BundleDir)', '%(TargetDir)'))</BundleRelativeDstDir>
      </CopyFile>
    </ItemGroup>

    <!--<LogItems Items="@(CopyFile)" Title="CopyFileInitCrossBuild.CopyFile" />
    <Message Importance="high"  Text=" " />-->
  </Target>

  <Target Name="CopyFileClean" AfterTargets="Clean" DependsOnTargets="CopyFileInitCrossBuild">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] CopyFileClean" />
    <!-- Display deleted files by extension  -->
    <ItemGroup>
      <_Message Include="%(CopyFile.TargetDir)%(RecursiveDir)*%(Extension)')" Condition="Exists('%(TargetDir)%(RecursiveDir)%(FileName)%(Extension)')" />
    </ItemGroup>
    <RemoveDuplicates Inputs="@(_Message)">
      <Output TaskParameter="Filtered" ItemName="_Message"/>
    </RemoveDuplicates>
    <Message Importance="high" Text="%1B[36m[-]%1B[37m %(_Message.Identity)%1B[0m" />
    <ItemGroup>
      <_Message Remove="@(_Message')" />
    </ItemGroup>

    <Delete  Files="@(CopyFile->'%(TargetDir)%(RecursiveDir)%(TargetFile)')" />
  </Target>

  <Target Name="CopyFile" Inputs="@(CopyFile.Identity)" Outputs="@(CopyFile->'%(TargetDir)%(RecursiveDir)%(TargetFile)')" BeforeTargets="Build" DependsOnTargets="CopyFileInitCrossBuild">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] CopyFile" />
    <Copy SourceFiles="@(CopyFile)" DestinationFiles="@(CopyFile->'%(TargetDir)%(RecursiveDir)%(TargetFile)')" ContinueOnError="true" />

    <!-- Display file copy by extension  -->
    <ItemGroup>
      <_Message Include="@(CopyFile->'%(BundleRelativeSrcDir)%(RecursiveDir)*%(Extension) -> %(BundleRelativeDstDir)%(RecursiveDir)*%(Extension)')" />
    </ItemGroup>
    <RemoveDuplicates Inputs="@(_Message)">
      <Output TaskParameter="Filtered" ItemName="_Message"/>
    </RemoveDuplicates>
    <Message Importance="high" Text="%1B[36m[Copy]%1B[37m %(_Message.Identity)%1B[0m" />
    <ItemGroup>
      <_Message Remove="@(_Message')" />
    </ItemGroup>
  </Target>

</Project>
