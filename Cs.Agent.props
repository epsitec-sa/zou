<!--
A C# agent builds external projects/solutions using a C# context (uses the C# standard settings for platform, output path, ...)
Normally, external components are C# based, because C++ components should be imported via interop build action (cf Cs.Interop.targets)

# : import project
+ : define data

# Agent.prolog.props
  + Standard configurations (Debug|x64, ...)
  + Default targets (Build, Clean, PackFilter)
  # Microsoft.Cpp.Default.props
  + C++ utility project
  # Boot.Core.props
    # zou.props
    # zou.Errors.props
    # PlatformToolset.props
      + PlatformToolset
    + Configuration, IsDebug, IsRelease, Solution*, Project*
  # Microsoft.Cpp.props

# Boot.Runtime.props
  + Platforms, Platform, RuntimePlatform, ForwardPlatform
# Cs.Frameworks.props
  + CoreTargetFramework, FullTargetFramework

# Com.WorkDir.props
# Tmp.IntDir.props
# Cs.PkgDir.props
# Cs.OutDir.props

# Agent.epilog.props
  + TargetDir, OutputPath, IntermediateOutputPath
  # Forward.props
  # [Microsoft.Cpp.targets] if ImportMicrosoftCppTargets
-->
<Project>
  <PropertyGroup>
    <_PropertySheetDisplayName>[zou] C# Agent</_PropertySheetDisplayName>
    <ZouAgentType>CSharp</ZouAgentType>
  </PropertyGroup>

  <Import Project="Agent.prolog.props" />

  <ImportGroup Label="PropertySheets">
    <Import Project="Com.WorkDir.props" />
    <Import Project="Tmp.IntDir.props" />
    <Import Project="Cs.PkgDir.props" />
    <Import Project="Cs.OutDir.props" />
  </ImportGroup>

  <PropertyGroup>
    <ImportMicrosoftCppTargets>false</ImportMicrosoftCppTargets>
  </PropertyGroup>
  
  <Import Project="Agent.epilog.props" />

</Project>
