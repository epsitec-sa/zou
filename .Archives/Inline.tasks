<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!--
    ZouResolveFallback task usage:
  
    <Target Name="ZouResolveFallbackExemple">
      <ZouResolveFallback File="Cpp.NTVersion.props" ZouProjectDir="$(ZouProjectDir)" ZouSolutionDir="$(ZouSolutionDir)" ZouBundleDir="$(ZouBundleDir)" ZouDir="$(ZouDir)">
        <Output PropertyName="ZouNTVersionFullPath" TaskParameter="FullPath" />
      </ZouResolveFallback>
    </Target>
  -->
  
  <UsingTask TaskName="ZouResolveFallback" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
	  <!-- Inputs -->
      <File Required="true" />
      <ZouProjectDir />
      <ZouSolutionDir />
      <ZouBundleDir />
      <ZouDir Required="true" />
	  <!-- Output -->
      <FullPath Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
			  if (!string.IsNullOrEmpty (ZouProjectDir) && Directory.Exists (ZouProjectDir))
			  {
				  FullPath = Path.Combine (ZouProjectDir, File);
			  }
			  else if (!string.IsNullOrEmpty (ZouSolutionDir) && Directory.Exists (ZouSolutionDir))
			  {
				  FullPath = Path.Combine (ZouSolutionDir, File);
			  }
			  else if (!string.IsNullOrEmpty (ZouBundleDir) && Directory.Exists (ZouBundleDir))
			  {
				  FullPath = Path.Combine (ZouBundleDir, File);
			  }
			  else
			  {
				  FullPath = Path.Combine (ZouDir, Path.GetFileNameWithoutExtension(File) + ".Default" + Path.GetExtension(File));
			  }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <UsingTask TaskName="GetMetadata" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <Source ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <Metadata Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          StringBuilder command = new StringBuilder();
          foreach (ITaskItem item in Source)
          {
              command.AppendFormat("ItemName={0}\r\n", item);
              foreach (string parameter in item.MetadataNames)
              {
                  command.AppendFormat("  {0}={1}\r\n", parameter, item.GetMetadata(parameter));
              }
              command.AppendFormat("\r\n");
          }
          Metadata = command.ToString();
      ]]>
      </Code>
    </Task>
  </UsingTask>
  
</Project>