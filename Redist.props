<!--
Import this script at the beginning of a C# redist agent

This script imports a chain of 'Redist.Build.props' in which we can define
properties to control the 'Redist.targets' build settings.

    RedistProjectPath     - [required] - the path of the project script                         - ex: Net\Swissdec.Transmitter.Host\Swissdec.Transmitter.Host.csproj
                                         relative to the 'Redist.build.props' directory
    RedistFolder          - [optional] - append a component folder to the output directory      - ex: bin\Release\win-x64\<redist-folder>
    RedistByFramework     - [optional] - include the target framework   in the output directory - ex: bin\Release\net6[\win-x64]\<redist-folder>
    RedistByRuntime       - [optional] - include the runtime identifier in the output directory - ex: bin\Release\[net6\]win-x64\<redist-folder>
    RedistWinX86Framework - [optional] - the target framework used for x86 platform             - (CoreTargetFramework | FullTargetFramework)
    RedistWinX64Framework - [optional] - the target framework used for x64 or AnyCPU platforms  - (CoreTargetFramework | FullTargetFramework)
-->
<Project TreatAsLocalProperty="RedistBuildPropsPath;RedistFolder;CrossBuild">

  <Import Project="zou.props"           Condition="'$(ZouVersion)' == ''" />
  <Import Project="Cs.Frameworks.props" Condition="'$(CoreTargetFramework)' == ''" />

  <!-- Import the first 'Redist.Build.props' found in the local project directory or above -->
  <PropertyGroup>
    <RedistBuildPropsPath>$([MSBuild]::GetPathOfFileAbove('Redist.Build.props', '$(MSBuildProjectDirectory)'))</RedistBuildPropsPath>
  </PropertyGroup>
  <Import Project="$(RedistBuildPropsPath)" Condition="Exists('$(RedistBuildPropsPath)')" />

</Project>
