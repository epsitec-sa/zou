<!--
Import this script at the end of a C# redist agent
For information on redist properties, see Redist.props
-->
<Project>

  <Import Project="Import.targets"/>

  <!-- Forward properties -->
  <!--<ItemDefinitionGroup>
    <ItemProject>
      <RedistFolder      Condition="'%(RedistFolder)'      == '' And '$(RedistFolder)'      != ''">$(RedistFolder)</RedistFolder>
      <RedistByFramework Condition="'%(RedistByFramework)' == '' And '$(RedistByFramework)' != ''">$(RedistByFramework)</RedistByFramework>
      <RedistByRuntime   Condition="'%(RedistByRuntime)'   == '' And '$(RedistByRuntime)'   != ''">$(RedistByRuntime)</RedistByRuntime>
    </ItemProject>
  </ItemDefinitionGroup>-->

  <!-- x86|AnyCPU -->
  <ItemGroup Condition="'$(RuntimePlatform)' == 'x86' Or '$(RuntimePlatform)' == 'AnyCPU'">
    <ImportProject Condition="$([MSBuild]::IsOsPlatform(Windows))" Include="$(RedistProjectPath)">
      <RuntimeIdentifier Condition="'%(RuntimeIdentifier)' == '' And '$(RuntimePlatform)' == 'x86'">win7-x86</RuntimeIdentifier>
      <TargetFramework>$(RedistWinX86Framework)</TargetFramework>
      <OutDir     Condition="'$(RedistWinX86Framework)' == '$(FullTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</OutDir>
      <PublishDir Condition="'$(RedistWinX86Framework)' == '$(CoreTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</PublishDir>
    </ImportProject>
  </ItemGroup>

  <!-- x64 -->
  <ItemGroup Condition="'$(RuntimePlatform)' == 'x64'">
    <ImportProject Condition="$(BuildWin)" Include="$(RedistProjectPath)">
      <TargetFramework>$(RedistWinX64Framework)</TargetFramework>
      <OutDir     Condition="'$(RedistWinX64Framework)' == '$(FullTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</OutDir>
      <PublishDir Condition="'$(RedistWinX64Framework)' == '$(CoreTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</PublishDir>
    </ImportProject>
    <ImportProject Condition="$(BuildOsx)" Include="$(RedistProjectPath)">
      <TargetFramework>$(CoreTargetFramework)</TargetFramework>
      <OutDir>$(OutDir)osx-$(RuntimePlatform)</OutDir>
      <PublishDir>$(OutDir)osx-$(RuntimePlatform)</PublishDir>
    </ImportProject>
    <ImportProject Condition="$(BuildLinux)" Include="$(RedistProjectPath)">
      <TargetFramework>$(CoreTargetFramework)</TargetFramework>
      <OutDir>$(OutDir)linux-$(RuntimePlatform)</OutDir>
      <PublishDir>$(OutDir)linux-$(RuntimePlatform)</PublishDir>
    </ImportProject>
  </ItemGroup>

  <!--
  Transform ImportProject.(Out|Publish)Dir metadata from redist to monolith layout

    - redist   layout format: $(OutDir)<project-folder>\$(RuntimeIdentifier)
    - monolith layout format: $(OutDir)$(RuntimeIdentifier)\$(RedistFolder)\<project-folder>\

    Inputs:
      PropertyGroup
        $(OutDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\
        $(RedistFolder) - ex: user\modules\cresus
      ItemGroup.ImportProject (redist layout)
        %(OutDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\xlsgen\win-x64
        %(PublishDir)   - ex: C:\devel\cresus-dev\cresus\bin\Release\xlsgen\win-x64
    Outputs:
      ItemGroup.ImportProject (monolith layout)
        %(OutDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\win-x64\user\modules\cresus\xlsgen\
        %(PublishDir)   - ex: C:\devel\cresus-dev\cresus\bin\Release\win-x64\user\modules\cresus\xlsgen\
        %(AsmDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\win-x64\user\modules\cresus\.cod\    (C++ project only)
  -->
  <Target Name="RedistTransformLayout" Condition="'$(RedistFolder)' != ''">
    <ItemGroup>
      <ImportProject>
        <_RuntimeFolder Condition="$([System.String]::new('%(ImportProject.OutDir)').EndsWith('$(RuntimePlatform)'))">$([System.IO.Path]::GetFileName('%(OutDir)'))</_RuntimeFolder>
        <_RuntimeFolder Condition="$([System.String]::new('%(ImportProject.PublishDir)').EndsWith('$(RuntimePlatform)'))">$([System.IO.Path]::GetFileName('%(ImportProject.PublishDir)'))</_RuntimeFolder>
      </ImportProject>

      <ImportProject>
        <_OutputFolder Condition="! $(RedistByRuntime)">$(RedistFolder)</_OutputFolder>
        <_OutputFolder Condition="  $(RedistByRuntime)">$([System.IO.Path]::Combine('%(ImportProject._RuntimeFolder)', '$(RedistFolder)'))</_OutputFolder>
      </ImportProject>
      <ImportProject>
        <_OutputFolder Condition="$(RedistByFramework)">$([System.IO.Path]::Combine('%(ImportProject.TargetFramework)', '%(ImportProject._OutputFolder)'))</_OutputFolder>
      </ImportProject>
      <ImportProject>
        <_OutputFolder>$([MSBuild]::EnsureTrailingSlash('%(ImportProject._OutputFolder)'))</_OutputFolder>
      </ImportProject>

      <ImportProject>
        <OutDir     Condition="'%(ImportProject.OutDir)'     != ''">$([System.IO.Path]::GetFullPath('$(OutDir)%(_OutputFolder)'))</OutDir>
        <PublishDir Condition="'%(ImportProject.PublishDir)' != ''">$([System.IO.Path]::GetFullPath('$(OutDir)%(_OutputFolder)'))</PublishDir>
      </ImportProject>

      <!-- Remove temporary metadata -->
      <ImportProject RemoveMetadata="_OutputFolder;_RuntimeFolder" />
    </ItemGroup>

    <!--<LogItems Items="@(ImportProject)" Title="RedistTransformLayout.ImportProject" />
    <Message Importance="high" Text=" " />-->
  </Target>
  
  <Target Name="RedistUpdateTarget" BeforeTargets="AddBuildOptions" DependsOnTargets="RedistTransformLayout">
    <ItemGroup>
      <ImportProject>
        <!-- use Build target for Debug config or .NET Framework -->
        <_UseBuildTarget>false</_UseBuildTarget>
      </ImportProject>
      <ImportProject>
        <_UseBuildTarget Condition="$(IsDebug) Or '%(TargetFramework)' == '$(FullTargetFramework)'">true</_UseBuildTarget>
      </ImportProject>
      <ImportProject>
        <Targets>Publish</Targets>
        <Targets Condition="%(_UseBuildTarget)">Build</Targets>
      </ImportProject>
      <ImportProject>
        <OutDir     Condition="! %(_UseBuildTarget)" />
        <PublishDir Condition="  %(_UseBuildTarget)" />
      </ImportProject>
      <ImportProject>
        <!--
        Reset Platform metadata if RuntimeIdentifier is specified to avoid redondant platform in OutDir like bin\x64\Release\netstandard2.0\win-x64
        - set its value to *Undefined* so that the ItemDefinitionGroup.ImportProject default value is not restored
        - the AddBuildOptions custom task (ImportProject.targets) does not generate metadata which value equals to *Undefined*
        -->
        <!--<Platform Condition="'%(ImportProject.RuntimeIdentifier)' != '' And '%(ImportProject.RuntimeIdentifier)' != '*Undefined*'">*Undefined*</Platform>-->
      </ImportProject>

      <ImportProject RemoveMetadata="_UseBuildTarget" />
    </ItemGroup>

    <!--<LogItems Items="@(ImportProject)" Title="RedistUpdateTarget.ImportProject" />
    <Message Importance="high" Text=" " />-->
  </Target>

</Project>
