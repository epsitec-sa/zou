<!--
Import this script at the end of a C# redist agent
For information on redist properties, see Redist.props
-->
<Project InitialTargets="TraceRedistTargets;RedistCheckProps">

  <!-- Supported Windows platform  -->
  <PropertyGroup>
    <WinRuntimePrefix Condition="'$(WinRuntimePrefix)' == ''">win7</WinRuntimePrefix>
  </PropertyGroup>

  <!-- Defaults-->
  <PropertyGroup>
    <RedistByFramework  Condition="'$(RedistByFramework)'  == ''">false</RedistByFramework>
  </PropertyGroup>

  <!-- Limit cross-build -->
  <PropertyGroup>
    <!-- FullTargetFramework is not available on OSX and Linux -->
    <CrossBuild Condition="'$(RedistX64Framework)' == '$(FullTargetFramework)'">false</CrossBuild>
    <!-- Do not cross-build inside Visual Studio -->
    <CrossBuild Condition="'$(BuildingInsideVisualStudio)' != ''">false</CrossBuild>
    <CrossBuild Condition="'$(CrossBuild)' == ''">false</CrossBuild>

    <BuildWin>false</BuildWin>
    <BuildOsx>false</BuildOsx>
    <BuildLinux>false</BuildLinux>
    <BuildWin   Condition="$(CrossBuild) Or $(RuntimeIdentifier.StartsWith('win'))   Or ('$(RuntimeIdentifier)'=='' And $([MSBuild]::IsOsPlatform(Windows)))">true</BuildWin>
    <BuildOsx   Condition="$(CrossBuild) Or $(RuntimeIdentifier.StartsWith('osx'))   Or ('$(RuntimeIdentifier)'=='' And $([MSBuild]::IsOsPlatform(OSX))    )">true</BuildOsx>
    <BuildLinux Condition="$(CrossBuild) Or $(RuntimeIdentifier.StartsWith('linux')) Or ('$(RuntimeIdentifier)'=='' And $([MSBuild]::IsOsPlatform(Linux))  )">true</BuildLinux>
  </PropertyGroup>

  <!-- Append or not the runtime identifier to the output directory -->
  <PropertyGroup>
    <!--
      if CrossBuild                           # need to classify multiple outputs
        RedistByRuntime = true
      elsif OutDir.Contains(RuntimePlatform)  # no need to classify output
        RedistByRuntime = false
       else
        RedistByRuntime = true
       endif
     -->
    <RedistByRuntime Condition="'$(RedistByRuntime)' == '' And $(CrossBuild)">true</RedistByRuntime>
    <RedistByRuntime Condition="'$(RedistByRuntime)' == '' And '$(RuntimePlatform)' != '' And $(OutDir.Contains('$(RuntimePlatform)'))">false</RedistByRuntime>
    <RedistByRuntime Condition="'$(RedistByRuntime)' == '' And '$(RuntimePlatform)' == 'x86' And $(OutDir.Contains('Win32'))">false</RedistByRuntime>
    <RedistByRuntime Condition="'$(RedistByRuntime)' == ''">true</RedistByRuntime>
  </PropertyGroup>

  <ItemGroup>
    <ImportProject Condition="'$(RedistProjectPath)' != ''" Include="$(RedistProjectPath)" />
  </ItemGroup>

  <Target Name="RedistInitImports">
    <!-- x86|AnyCPU -->
    <ItemGroup Condition="'$(RuntimePlatform)' == 'x86' Or '$(RuntimePlatform)' == 'AnyCPU'">
      <ImportProject Condition="$([MSBuild]::IsOsPlatform(Windows))">
        <TargetFramework>$(RedistX86Framework)</TargetFramework>
        <RuntimeIdentifier Condition="'$(RuntimePlatform)' == 'x86'">$(WinRuntimePrefix)-$(RuntimePlatform)</RuntimeIdentifier>
        <OutDir            Condition="'$(RedistX86Framework)' == '$(FullTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</OutDir>
        <PublishDir        Condition="'$(RedistX86Framework)' == '$(CoreTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</PublishDir>
      </ImportProject>
    </ItemGroup>

    <!-- x64 -->
    <ItemGroup Condition="'$(RuntimePlatform)' == 'x64'">
      <ImportProject Condition="$(BuildWin)">
        <TargetFramework>$(RedistX64Framework)</TargetFramework>
        <RuntimeIdentifier Condition="'$(RedistX64Framework)' == '$(CoreTargetFramework)'">$(WinRuntimePrefix)-$(RuntimePlatform)</RuntimeIdentifier>
        <OutDir            Condition="'$(RedistX64Framework)' == '$(FullTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</OutDir>
        <PublishDir        Condition="'$(RedistX64Framework)' == '$(CoreTargetFramework)'">$(OutDir)win-$(RuntimePlatform)</PublishDir>
      </ImportProject>
      <ImportProject Condition="$(BuildOsx)">
        <TargetFramework>$(CoreTargetFramework)</TargetFramework>
        <RuntimeIdentifier>osx-$(RuntimePlatform)</RuntimeIdentifier>
        <OutDir>$(OutDir)osx-$(RuntimePlatform)</OutDir>
        <PublishDir>$(OutDir)osx-$(RuntimePlatform)</PublishDir>
      </ImportProject>
      <ImportProject Condition="$(BuildLinux)">
        <TargetFramework>$(CoreTargetFramework)</TargetFramework>
        <RuntimeIdentifier>linux-$(RuntimePlatform)</RuntimeIdentifier>
        <OutDir>$(OutDir)linux-$(RuntimePlatform)</OutDir>
        <PublishDir>$(OutDir)linux-$(RuntimePlatform)</PublishDir>
      </ImportProject>
    </ItemGroup>
    
    <!--<LogItems Items="@(ImportProject)" Title="RedistInitImports.ImportProject" />
    <Message Importance="high" Text=" " />-->
  </Target>

  <!--
  Transform ImportProject.(Out|Publish)Dir metadata from redist to monolith layout

    - redist   layout format: $(OutDir)<project-folder>\$(RuntimeIdentifier)
    - monolith layout format: $(OutDir)$(RuntimeIdentifier)\$(RedistFolder)\<project-folder>\

    Inputs:
      PropertyGroup
        $(OutDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\
        $(RedistFolder) - ex: user\modules\cresus
      ItemGroup.ImportProject (redist layout)
        %(OutDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\xlsgen\win-x64
        %(PublishDir)   - ex: C:\devel\cresus-dev\cresus\bin\Release\xlsgen\win-x64
    Outputs:
      ItemGroup.ImportProject (monolith layout)
        %(OutDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\win-x64\user\modules\cresus\xlsgen\
        %(PublishDir)   - ex: C:\devel\cresus-dev\cresus\bin\Release\win-x64\user\modules\cresus\xlsgen\
        %(AsmDir)       - ex: C:\devel\cresus-dev\cresus\bin\Release\win-x64\user\modules\cresus\.cod\    (C++ project only)
  -->
  <Target Name="RedistTransformLayout" Condition="'$(RedistFolder)' != ''" DependsOnTargets="RedistInitImports">
    <ItemGroup>
      <ImportProject>
        <_RuntimeFolder Condition="$([System.String]::new('%(ImportProject.OutDir)').EndsWith('$(RuntimePlatform)'))">$([System.IO.Path]::GetFileName('%(OutDir)'))</_RuntimeFolder>
        <_RuntimeFolder Condition="$([System.String]::new('%(ImportProject.PublishDir)').EndsWith('$(RuntimePlatform)'))">$([System.IO.Path]::GetFileName('%(ImportProject.PublishDir)'))</_RuntimeFolder>
      </ImportProject>

      <ImportProject>
        <_OutputFolder Condition="! $(RedistByRuntime)">$(RedistFolder)</_OutputFolder>
        <_OutputFolder Condition="  $(RedistByRuntime)">$([System.IO.Path]::Combine('%(ImportProject._RuntimeFolder)', '$(RedistFolder)'))</_OutputFolder>
      </ImportProject>
      <ImportProject>
        <_OutputFolder Condition="$(RedistByFramework)">$([System.IO.Path]::Combine('%(ImportProject.TargetFramework)', '%(ImportProject._OutputFolder)'))</_OutputFolder>
      </ImportProject>
      <ImportProject>
        <_OutputFolder>$([MSBuild]::EnsureTrailingSlash('%(ImportProject._OutputFolder)'))</_OutputFolder>
      </ImportProject>

      <ImportProject>
        <OutDir     Condition="'%(ImportProject.OutDir)'     != ''">$([System.IO.Path]::GetFullPath('$(OutDir)%(_OutputFolder)'))</OutDir>
        <PublishDir Condition="'%(ImportProject.PublishDir)' != ''">$([System.IO.Path]::GetFullPath('$(OutDir)%(_OutputFolder)'))</PublishDir>
      </ImportProject>
      <ImportProject>
        <AsmDir Condition="'%(ImportProject.OutDir)' != '' And !$([System.String]::new('%(ImportProject.Identity)').EndsWith('.csproj'))">%(OutDir).cod\</AsmDir>
      </ImportProject>

      <!-- Remove temporary metadata -->
      <ImportProject RemoveMetadata="_OutputFolder;_RuntimeFolder" />
    </ItemGroup>

    <!--<LogItems Items="@(ImportProject)" Title="RedistTransformLayout.ImportProject" />
    <Message Importance="high" Text=" " />-->
  </Target>

  <Target Name="RedistUpdateTarget" BeforeTargets="AddBuildOptions" DependsOnTargets="RedistTransformLayout">
    <ItemGroup>
      <ImportProject>
        <!-- use Build target for Debug config or .NET Framework -->
        <_UseBuildTarget>false</_UseBuildTarget>
      </ImportProject>
      <ImportProject>
        <_UseBuildTarget Condition="$(Configuration.StartsWith('Debug', StringComparison.OrdinalIgnoreCase)) Or '%(TargetFramework)' == '' Or '%(TargetFramework)' == '$(FullTargetFramework)'">true</_UseBuildTarget>
      </ImportProject>
      <ImportProject>
        <Targets Condition="'%(ImportProject.Targets)' == ''">Publish</Targets>
        <Targets Condition="'%(ImportProject.Targets)' == '' And %(_UseBuildTarget)">Build</Targets>
      </ImportProject>
      <ImportProject>
        <OutDir     Condition="! %(_UseBuildTarget)" />
        <PublishDir Condition="  %(_UseBuildTarget)" />
      </ImportProject>
      <ImportProject>
        <!--
        Reset Platform metadata if RuntimeIdentifier is specified to avoid redondant platform in OutDir like bin\x64\Release\netstandard2.0\win-x64
        - set its value to *Undefined* so that the ItemDefinitionGroup.ImportProject default value is not restored
        - the AddBuildOptions custom task (ImportProject.targets) does not generate metadata which value equals to *Undefined*
        -->
        <!--<Platform Condition="'%(ImportProject.RuntimeIdentifier)' != '' And '%(ImportProject.RuntimeIdentifier)' != '*Undefined*'">*Undefined*</Platform>-->
      </ImportProject>

      <!-- Remove temporary metadata -->
      <ImportProject RemoveMetadata="_UseBuildTarget" />
    </ItemGroup>

    <LogItems Condition="$(RedistDebug)" Items="@(ImportProject)" Title="RedistUpdateTarget.ImportProject" />
    <Message  Condition="$(RedistDebug)" Importance="high" Text=" " />
  </Target>

  <Target Name="RedistCheckProps">
    <Warning Condition="'$(RedistProjectPath)' == '' And @(ImportProject->Count()) == 0"  Text="No project defined: specify one with the 'RedistProjectPath' property or the 'ImportProject' ItemGroup." />
    <Error   Condition="'$(RedistProjectPath)' != '' And !Exists('$(RedistProjectPath)')" Text="'RedistProjectPath' not found: '$(RedistProjectPath)'." />
  </Target>

  <Target Name="TraceRedistTargets" Condition="$(RedistDebug) Or '$(MSBuildProjectFile)' == '$(MSBuildThisFile)'">
    <Message Importance="high" Text="zou/Redist.targets [$(MSBuildProjectFile)]" />
    <Message Importance="high" Text="------------------" />
    <Message Importance="high" Text="CrossBuild         = $(CrossBuild)" />
    <Message Importance="high" Text="BuildWin           = $(BuildWin)" />
    <Message Importance="high" Text="BuildOsx           = $(BuildOsx)" />
    <Message Importance="high" Text="BuildLinux         = $(BuildLinux)" />
    <Message Importance="high" Text=" " />
    <Message Importance="high" Text="Configuration      = $(Configuration)" />
    <Message Importance="high" Text="RuntimePlatform    = $(RuntimePlatform)" />
    <Message Importance="high" Text="RuntimeIdentifier  = $(RuntimeIdentifier)" />
    <Message Importance="high" Text="OutDir             = $(OutDir)" />
    <Message Importance="high" Text="PublishDir         = $(PublishDir)" />
    <Message Importance="high" Text=" " />
    <Message Importance="high" Text="ZouRedistPath      = $(ZouRedistPath)" />
    <Message Importance="high" Text="RedistByFramework  = $(RedistByFramework)" />
    <Message Importance="high" Text="RedistByRuntime    = $(RedistByRuntime)" />
    <Message Importance="high" Text="RedistX86Framework = $(RedistX86Framework)" />
    <Message Importance="high" Text="RedistX64Framework = $(RedistX64Framework)" />
    <Message Importance="high" Text="RedistProjectPath  = $(RedistProjectPath)" />
    <Message Importance="high" Text=" " />
  </Target>

</Project>
