<!--
The ImportFile.targets can be used to import files in C++ projects.
For C# projects, use the Content  Itemgroup
For Go projects, use the CopyFile ItemGroup

Input parameters:
- @(ImportFile)
  - %(ImportDir)
  - %(ImportFile)
-->
<Project>
  <PropertyGroup>
    <ImportFileTargetsImported>true</ImportFileTargetsImported>
  </PropertyGroup>

  <!-- Define imported files default metadata -->
  <ItemDefinitionGroup>
    <ImportFile>
      <ImportDir>$(OutDir)</ImportDir>
      <ImportFile>%(FileName)%(Extension)</ImportFile>
      <RedistFolder>$(RedistFolder)</RedistFolder>
    </ImportFile>
  </ItemDefinitionGroup>

  <Target Name="ImportFileInitCrossBuild">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] ImportFileInitCrossBuild(CrossBuild=$(CrossBuild))" />
    
    <!-- CopyFile = CopyFile x RuntimeIdentifier (defined in Boot.Runtime.props ) -->
    <MulJoin Input="@(ImportFile)" Items="@(RuntimeIdentifier)" ItemName="RuntimeIdentifier" >
      <Output TaskParameter="Output" ItemName="_ImportFile" />
    </MulJoin>
    <ItemGroup>
      <ImportFile Remove="@(ImportFile)" />
      <ImportFile Include="@(_ImportFile)" />
      <_ImportFile Remove="@(_ImportFile)" />
    </ItemGroup>

    <ItemGroup>
      <ImportFile>
        <BundleRelativeSrcDir>$([MSBuild]::MakeRelative('$(BundleDir)', '%(RootDir)%(Directory)'))</BundleRelativeSrcDir>
        <BundleRelativeDstDir>$([MSBuild]::MakeRelative('$(BundleDir)', '%(ImportDir)'))</BundleRelativeDstDir>
      </ImportFile>
    </ItemGroup>

    <!--<LogItems Items="@(ImportFile)" Title="ImportFileInitCrossBuild.ImportFile" />
    <Message Importance="high"  Text=" " />-->
  </Target>

  <Target Name="ImportFile" Inputs="@(ImportFile)" Outputs="@(ImportFile->'%(ImportDir)%(RecursiveDir)%(ImportFile)')" BeforeTargets="PrepareForBuild" DependsOnTargets="ImportFileInitCrossBuild">
    <Message Condition="'$(ZouDebug)' == 'true'" Importance="high" Text="### [$(MSBuildProjectFile)] ImportFile" />
    
    <Error Condition="'$(ZouAgentType)' != 'Cpp' And '$(ZouAgentType)' != ''" Text="ImportFile is not available with '$(ZouAgentType)' agent (only available with C++ agent)" />
    
    <!-- Create custom builds so that Visual Studio FastUpToDateCheck does not skip changes -->
    <ItemGroup>
      <CustomBuild Include="@(ImportFile)">
        <Outputs Condition="'%(CustomBuild.ImportPaths)' == ''">%(ImportDir)%(RecursiveDir)%(ImportFile)</Outputs>
        <Command Condition="'%(CustomBuild.ImportPaths)' == '' And  $([MSBuild]::IsOsPlatform('Windows'))">copy "%(FullPath)" "%(ImportDir)%(RecursiveDir)%(ImportFile)" &gt;$(Nul)</Command>
        <Command Condition="'%(CustomBuild.ImportPaths)' == '' And !$([MSBuild]::IsOsPlatform('Windows'))">cp '%(FullPath)' '%(ImportDir)%(RecursiveDir)%(ImportFile)' &gt;$(Nul)</Command>

        <Outputs Condition="'%(CustomBuild.ImportPaths)' != ''">%(CustomBuild.ImportPaths)</Outputs>
        <Command Condition="'%(CustomBuild.ImportPaths)' != '' And  $([MSBuild]::IsOsPlatform('Windows'))">for %%i in (%(CustomBuild.ImportPaths)) do copy "%(FullPath)" "%%i" &gt;$(Nul)</Command>
        <Command Condition="'%(CustomBuild.ImportPaths)' != '' And !$([MSBuild]::IsOsPlatform('Windows'))">IFS=';'; for i in '%(CustomBuild.ImportPaths)'; do cp '%(FullPath)' "$i" &gt;$(Nul); done</Command>
        <TreatOutputAsContent>true</TreatOutputAsContent>

        <Message />
      </CustomBuild>
    </ItemGroup>
    
    <!-- Display file import by extension  -->
    <ItemGroup>
      <_Message Include="@(ImportFile->'$(T3)%(BundleRelativeSrcDir)$(T3)%(RecursiveDir)%2A%(Extension) -> %(BundleRelativeDstDir)$(T3)%(RecursiveDir)%2A%(Extension)')" />
    </ItemGroup>
    <RemoveDuplicates Inputs="@(_Message)">
      <Output TaskParameter="Filtered" ItemName="_Message"/>
    </RemoveDuplicates>
    <Message Importance="high" Text="$(L2p)[+] %(_Message.Identity)$(XC)" />
    <ItemGroup>
      <_Message Remove="@(_Message)" />
    </ItemGroup>

    <!--<LogItems Items="@(CustomBuild)" Title="### ImportFile.CustomBuild" />
    <Message Importance="high"  Text=" " />-->
  </Target>

</Project>
