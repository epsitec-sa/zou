<Project InitialTargets="CheckGoEnv;ToolsGoTrace">

  <Import Project="zou.props" Condition="'$(ZouImported)' == ''" />

  <Choose>
    <When Condition="$([MSBuild]::IsOSPlatform(Windows))">
      <PropertyGroup>
        <GOPATH Condition="'$(GOPATH)' == ''">$(USERPROFILE)\go</GOPATH>
        <GoOS   Condition="'$(GoOS)'   == ''">windows</GoOS>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOSPlatform(OSX))">
      <PropertyGroup>
        <GOPATH Condition="'$(GOPATH)' == ''">$(HOME)\go</GOPATH>
        <GoOS   Condition="'$(GoOS)'   == ''">darwin</GoOS>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOSPlatform(Linux))">
      <PropertyGroup>
        <GOPATH Condition="'$(GOPATH)' == ''">$(HOME)\go</GOPATH>
        <GoOS   Condition="'$(GoOS)'   == ''">linux</GoOS>
      </PropertyGroup>
    </When>
  </Choose>

  <PropertyGroup>
    <ForceGoGet Condition="'$(ForceGoGet)' == ''">false</ForceGoGet>

    <GoBinDir>$([System.IO.Path]::Combine($(GOPATH),'bin'))</GoBinDir>

    <GoWorkspace Condition="'$(GoWorkspace)' == ''">$(ModuleDir)src\</GoWorkspace>
    <GoWorkspace Condition="!Exists('$(GoWorkspace)')">$(ModuleDir)</GoWorkspace>
    
    <GoArch Condition="'$(Platform)' == 'Win32' Or '$(Platform)' == 'x86'">386</GoArch>
    <GoArch Condition="'$(GoArch)' == ''">amd64</GoArch>
    <GoEnvPath>$(GoBinDir);$(PATH)</GoEnvPath>
    <GoEnvPath>$(GoEnvPath.Replace(';', '%3B'))</GoEnvPath>
  </PropertyGroup>
  
  <Choose>
    <When Condition="$([MSBuild]::IsOSPlatform(Windows))">
      <PropertyGroup>
        <GoVerInfoPath>$([System.IO.Path]::GetFullPath('$(GoBinDir)\goversioninfo.exe'))</GoVerInfoPath>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <GoVerInfoPath>$([System.IO.Path]::GetFullPath('$(GoBinDir)\goversioninfo'))</GoVerInfoPath>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('Version.props', '$(MSBuildProjectDirectory)'))" Condition="'$(Version)' == ''"/>
  <ItemGroup>
    <GoBuildEnv Include="GOOS=$(GoOS)" />
    <GoBuildEnv Include="GOARCH=$(GoArch)" />
    <GoBuildEnv Include="VERSION=$(Version)" />
    <GoBuildEnv Include="PATH=$(GoEnvPath)" />
  </ItemGroup>

  <Target Name='CheckGoEnv'>
    <PropertyGroup>
      <WhereCommand Condition="$([MSBuild]::IsOSPlatform(Windows))">where</WhereCommand>
      <WhereCommand Condition="'$(WhereCommand)' == ''">which</WhereCommand>
    </PropertyGroup>
    <Exec Command="$(WhereCommand) go"
          EchoOFF="true"
          ConsoleToMSBuild="true"
          StandardOutputImportance='low'
          StandardErrorImportance='low'
          IgnoreExitCode='true'>
      <Output TaskParameter="ExitCode" PropertyName="WhereGoExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="GoExePath" />
    </Exec>
    <PropertyGroup>
      <GOROOT Condition="'$(GOROOT)' == ''">$([System.IO.Path]::GetFullPath('$(GoExePath)..\..\..'))</GOROOT>
    </PropertyGroup>
    <!--<Message Importance="high" Text="WhereGoExitCode = $(WhereGoExitCode)" />
    <Message Importance="high" Text="GOROOT          = $(GOROOT)" />-->
    <Error Condition="'$(WhereGoExitCode)' != '0'" Text="The 'go' command was not found. Please install or add it to the path."  />
  </Target>

  <!-- get some go tools -->
  <Target Name="GoGetVersionInfo" Condition="$(ForceGoGet) Or !Exists('$(GoVerInfoPath)')">
    <Exec Command="go get -u github.com/josephspurrier/goversioninfo/cmd/goversioninfo" />
  </Target>
  
  <Target Name="GoGetTools" DependsOnTargets="GoGetVersionInfo" BeforeTargets="Build" />

  <Target Name="ToolsGoTrace" Condition="'$(ZouTraceGo)' == 'true' Or '$(ZouTrace)' == 'true' Or '$(MSBuildProjectFile)' == '$(MSBuildThisFile)'">
    <Message Importance="normal" Text="GoWorkspace   = $(GoWorkspace)" />
    <Message Importance="normal" Text="GoBinDir      = $(GoBinDir)" />
    <Message Importance="normal" Text="GOPATH        = $(GOPATH)" />
    <Message Importance="normal" Text="GOROOT        = $(GOROOT)" />
    <Message Importance="normal" Text="GoExePath     = $(GoExePath)" />
    <Message Importance="normal" Text="GoVerInfoPath = $(GoVerInfoPath)" />
    <Message Importance="normal" Text="GoOS          = $(GoOS)" />
    <Message Importance="normal" Text="GoArch        = $(GoArch)" />
    <Message Importance="normal" Text="GoBuildEnv    = %(GoBuildEnv.Identity)" />
  </Target>
</Project>
