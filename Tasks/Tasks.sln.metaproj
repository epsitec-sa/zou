<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="ValidateSolutionConfiguration;ValidateToolsVersions;ValidateProjects" DefaultTargets="Build">
  <PropertyGroup>
    <RoslynTargetsPath>C:\Program Files\dotnet\sdk\1.0.3\Roslyn</RoslynTargetsPath>
    <Platform>Any CPU</Platform>
    <AspNetConfiguration>release</AspNetConfiguration>
    <SolutionDir>S:\devel\zou-dev\zou\Tasks\</SolutionDir>
    <SolutionExt>.sln</SolutionExt>
    <SolutionFileName>tasks.sln</SolutionFileName>
    <SolutionName>tasks</SolutionName>
    <SolutionPath>S:\devel\zou-dev\zou\Tasks\tasks.sln</SolutionPath>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <CurrentSolutionConfigurationContents>
      <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{00EA2476-BE35-4642-B1B0-7245730AA839}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\Tasks.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{CE838607-7D36-4593-93FA-EAAEF0B74148}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj" BuildProjectInSolution="True">Release|AnyCPU<ProjectDependency Project="{00EA2476-BE35-4642-B1B0-7245730AA839}" /></ProjectConfiguration>
  <ProjectConfiguration Project="{C4071F06-DFE6-4550-B48B-EEA6F5484D98}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
    </CurrentSolutionConfigurationContents>
    <NuGetRestoreTargets>C:\Program Files\dotnet\sdk\1.0.3\NuGet.targets</NuGetRestoreTargets>
    <IsRestoreTargetsFileLoaded>true</IsRestoreTargetsFileLoaded>
    <RestoreTaskAssemblyFile>NuGet.Build.Tasks.dll</RestoreTaskAssemblyFile>
    <RestoreRecursive>true</RestoreRecursive>
    <MSBuildAllProjects>;C:\Program Files\dotnet\sdk\1.0.3\NuGet.targets</MSBuildAllProjects>
    <ValidateRuntimeIdentifierCompatibility>false</ValidateRuntimeIdentifierCompatibility>
    <RestoreContinueOnError>WarnAndContinue</RestoreContinueOnError>
    <_GenerateRestoreGraphProjectEntryInputProperties>
      RestoreUseCustomAfterTargets=;
      NuGetRestoreTargets=C:\Program Files\dotnet\sdk\1.0.3\NuGet.targets;
      BuildProjectReferences=false;
      ExcludeRestorePackageImports=true;
    </_GenerateRestoreGraphProjectEntryInputProperties>
  </PropertyGroup>
  <ItemDefinitionGroup />
  <ItemGroup>
    <SolutionConfiguration Include="Debug|Any CPU">
      <Configuration>Debug</Configuration>
      <Platform>Any CPU</Platform>
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{00EA2476-BE35-4642-B1B0-7245730AA839}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\Tasks.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{CE838607-7D36-4593-93FA-EAAEF0B74148}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj" BuildProjectInSolution="False">Debug|AnyCPU<ProjectDependency Project="{00EA2476-BE35-4642-B1B0-7245730AA839}" /></ProjectConfiguration>
  <ProjectConfiguration Project="{C4071F06-DFE6-4550-B48B-EEA6F5484D98}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Release|Any CPU">
      <Configuration>Release</Configuration>
      <Platform>Any CPU</Platform>
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{00EA2476-BE35-4642-B1B0-7245730AA839}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\Tasks.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{CE838607-7D36-4593-93FA-EAAEF0B74148}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj" BuildProjectInSolution="True">Release|AnyCPU<ProjectDependency Project="{00EA2476-BE35-4642-B1B0-7245730AA839}" /></ProjectConfiguration>
  <ProjectConfiguration Project="{C4071F06-DFE6-4550-B48B-EEA6F5484D98}" AbsolutePath="S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
    </SolutionConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="S:\devel\zou-dev\zou\Tasks\Tasks.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <AdditionalProperties>Configuration=Release; Platform=AnyCPU</AdditionalProperties>
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectReference>
    <ProjectReference Include="S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj.metaproj">
      <ToolsVersion>15.0</ToolsVersion>
      <SkipNonexistentProjects>Build</SkipNonexistentProjects>
      <AdditionalProperties>Configuration=release; Platform=Any CPU</AdditionalProperties>
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectReference>
    <ProjectReference Include="S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj">
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
      <AdditionalProperties>Configuration=Release; Platform=AnyCPU</AdditionalProperties>
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectReference>
  </ItemGroup>
  <Target Name="Restore" DependsOnTargets="_GenerateRestoreGraph">
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <RestoreTask RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestoreSources="$(RestoreSources)" RestorePackagesPath="$(RestorePackagesPath)" RestoreDisableParallel="$(RestoreDisableParallel)" RestoreConfigFile="$(RestoreConfigFile)" RestoreNoCache="$(RestoreNoCache)" RestoreIgnoreFailedSources="$(RestoreIgnoreFailedSources)" RestoreRecursive="$(RestoreRecursive)" />
  </Target>
  <Target Name="GenerateRestoreGraphFile" DependsOnTargets="_GenerateRestoreGraph">
    <Error Condition="$(RestoreGraphOutputPath) == ''" Text="Missing RestoreGraphOutputPath property!" />
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <WriteRestoreGraphTask RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestoreGraphOutputPath="$(RestoreGraphOutputPath)" RestoreRecursive="$(RestoreRecursive)" />
  </Target>
  <Target Name="_LoadRestoreGraphEntryPoints" Returns="@(RestoreGraphProjectInputItems)" />
  <Target Name="_FilterRestoreGraphProjectInputItems" DependsOnTargets="_LoadRestoreGraphEntryPoints" Returns="@(FilteredRestoreGraphProjectInputItems)" />
  <Target Name="_GenerateRestoreGraph" DependsOnTargets="_FilterRestoreGraphProjectInputItems">
    <Message Text="Generating dg file" Importance="low" />
    <Message Text="%(FilteredRestoreGraphProjectInputItems.Identity)" Importance="low" />
    <MsBuild ContinueOnError="$(RestoreContinueOnError)" Projects="@(FilteredRestoreGraphProjectInputItems)" Targets="_GenerateRestoreGraphProjectEntry" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration);                     %(_MSBuildProjectReferenceExistent.SetPlatform);                     $(_GenerateRestoreGraphProjectEntryInputProperties)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MsBuild>
  </Target>
  <Target Name="_GenerateRestoreGraphProjectEntry" DependsOnTargets="_GenerateRestoreSpecs;_GenerateDotnetCliToolReferenceSpecs;_GenerateRestoreGraphWalk" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreSpecs" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreGraphEntry)">
    <Message Text="Restore entry point $(MSBuildProjectFullPath)" Importance="low" />
  </Target>
  <Target Name="_GenerateDotnetCliToolReferenceSpecs" Returns="@(_RestoreGraphEntry)">
    <GetRestoreDotnetCliToolsTask Condition=" '$(RestoreDotnetCliToolReferences)' == '' OR '$(RestoreDotnetCliToolReferences)' == 'true' " ProjectPath="$(MSBuildProjectFullPath)" ToolFramework="$(DotnetCliToolTargetFramework)" DotnetCliToolReferences="@(DotnetCliToolReference)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreDotnetCliToolsTask>
  </Target>
  <Target Name="_GetProjectJsonPath" Returns="$(_CurrentProjectJsonPath)">
    <GetRestoreProjectJsonPathTask Condition=" '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' " ProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="ProjectJsonPath" ItemName="_CurrentProjectJsonPath" />
    </GetRestoreProjectJsonPathTask>
  </Target>
  <Target Name="_GetRestoreProjectStyle" DependsOnTargets="_GetProjectJsonPath" Returns="$(RestoreProjectStyle)" />
  <Target Name="_GetRestoreTargetFrameworksOutput" Condition=" '$(RestoreProjectStyle)' != 'ProjectJson' " DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworksOutputFiltered)">
    <GetRestoreProjectFrameworks ProjectPath="$(MSBuildProjectFullPath)" TargetFrameworks="$(TargetFrameworks)" TargetFramework="$(TargetFramework)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" TargetPlatformVersion="$(TargetPlatformVersion)">
      <Output TaskParameter="ProjectTargetFrameworks" ItemName="_RestoreProjectFramework" />
    </GetRestoreProjectFrameworks>
  </Target>
  <Target Name="_GenerateRestoreProjectSpec" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput" Returns="@(_RestoreGraphEntry)">
    <ConvertToAbsolutePath Condition=" '$(RestoreProjectStyle)' == 'PackageReference' " Paths="$(RestoreOutputPath)">
      <Output TaskParameter="AbsolutePaths" ItemName="RestoreOutputAbsolutePath" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateRestoreDependencies" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput" Returns="@(_RestoreGraphEntry)">
    <MSBuild ContinueOnError="$(RestoreContinueOnError)" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateRestoreGraphWalkPerFramework" Properties="TargetFramework=%(_RestoreTargetFrameworksOutputFiltered.Identity);                   %(_MSBuildProjectReferenceExistent.SetConfiguration);                   %(_MSBuildProjectReferenceExistent.SetPlatform);                   $(_GenerateRestoreGraphProjectEntryInputProperties)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GetAllRestoreProjectReferences" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput" Returns="@(RestoreGraphProjectFullPathForOutput)">
    <MSBuild ContinueOnError="$(RestoreContinueOnError)" Projects="$(MSBuildProjectFullPath)" Targets="_GenerateRestoreProjectReferencePaths" Properties="TargetFramework=%(_RestoreTargetFrameworksOutputFiltered.Identity);                   %(_MSBuildProjectReferenceExistent.SetConfiguration);                   %(_MSBuildProjectReferenceExistent.SetPlatform);                   $(_GenerateRestoreGraphProjectEntryInputProperties)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)">
      <Output TaskParameter="TargetOutputs" ItemName="RestoreGraphProjectFullPathForOutput" />
    </MSBuild>
  </Target>
  <Target Name="_GetChildRestoreProjects" DependsOnTargets="_GetRestoreProjectStyle;_GetAllRestoreProjectReferences" Returns="@(_RestoreGraphEntry)">
    <MSBuild ContinueOnError="$(RestoreContinueOnError)" Projects="@(RestoreGraphProjectFullPathForOutput)" Targets="_GenerateRestoreGraphWalk" Properties="%(_MSBuildProjectReferenceExistent.SetConfiguration);                   %(_MSBuildProjectReferenceExistent.SetPlatform);                   $(_GenerateRestoreGraphProjectEntryInputProperties)" RemoveProperties="%(_MSBuildProjectReferenceExistent.GlobalPropertiesToRemove)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreGraphWalk" DependsOnTargets="       _GetRestoreProjectStyle;       _GetRestoreTargetFrameworksOutput;       _GenerateRestoreProjectSpec;       _GenerateRestoreDependencies;       _GetChildRestoreProjects" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreGraphWalkPerFramework" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreGraphEntry)">
    <GetRestoreProjectReferencesTask ProjectUniqueName="$(MSBuildProjectFullPath)" ProjectReferences="@(ProjectReference)" TargetFrameworks="$(TargetFramework)" ParentProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreProjectReferencesTask>
    <GetRestorePackageReferencesTask Condition=" '$(RestoreProjectStyle)' == 'PackageReference' " ProjectUniqueName="$(MSBuildProjectFullPath)" PackageReferences="@(PackageReference)" TargetFrameworks="$(TargetFramework)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageReferencesTask>
  </Target>
  <Target Name="_GenerateRestoreProjectReferencePaths" DependsOnTargets="_SplitProjectReferencesByFileExistence" Returns="@(RestoreGraphProjectFullPathForOutput)">
    <ConvertToAbsolutePath Paths="@(ValidProjectInputForRestoreGraph)">
      <Output TaskParameter="AbsolutePaths" ItemName="RestoreGraphAbsoluteProjectPaths" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="GetSolutionConfigurationContents" Outputs="$(SolutionConfigurationContents)" />
  <Target Name="ValidateProjects">
    <Message Condition=" ('$(Configuration)' == 'Debug') and ('$(Platform)' == 'Any CPU') " Text="The project &quot;Tasks.Pack&quot; is not selected for building in solution configuration &quot;Debug|Any CPU&quot;." />
  </Target>
  <Target Name="ValidateToolsVersions">
    <Error Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(ProjectToolsVersion)' != '2.0' and '$(ProjectToolsVersion)' != '')" Text="The tools version &quot;$(MSBuildToolsVersion)&quot; of the solution does not support building projects with a different tools version." Code="MSB4149" HelpKeyword="MSBuild.SolutionToolsVersionDoesNotSupportProjectToolsVersion" />
  </Target>
  <Target Name="ValidateSolutionConfiguration">
    <Error Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' != 'true')" Text="The specified solution configuration &quot;$(Configuration)|$(Platform)&quot; is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;) or leave those properties blank to use the default solution configuration." Code="MSB4126" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" />
    <Warning Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' == 'true')" Text="The specified solution configuration &quot;$(Configuration)|$(Platform)&quot; is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;) or leave those properties blank to use the default solution configuration." Code="MSB4126" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" />
    <Message Condition="'$(CurrentSolutionConfigurationContents)' != ''" Text="Building solution configuration &quot;$(Configuration)|$(Platform)&quot;." />
  </Target>
  <Target Name="Build" Outputs="@(CollectedBuildOutput)">
    <MSBuild Projects="@(ProjectReference)" BuildInParallel="True" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Clean">
    <MSBuild Projects="@(ProjectReference-&gt;Reverse())" Targets="Clean" BuildInParallel="True" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" />
  </Target>
  <Target Name="Rebuild" Outputs="@(CollectedBuildOutput)">
    <MSBuild Projects="@(ProjectReference)" Targets="Rebuild" BuildInParallel="True" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Publish">
    <MSBuild Projects="@(ProjectReference)" Targets="Publish" BuildInParallel="True" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" />
  </Target>
  <Target Name="Tasks" Outputs="@(TasksBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.csproj'" Projects="@(ProjectReference)" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="TasksBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Tasks:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.csproj'" Projects="@(ProjectReference)" Targets="Clean" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="Tasks:Rebuild" Outputs="@(TasksBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.csproj'" Projects="@(ProjectReference)" Targets="Rebuild" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="TasksBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Tasks:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.csproj'" Projects="@(ProjectReference)" Targets="Publish" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="Tasks_Pack" Outputs="@(Tasks_PackBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj.metaproj'" Projects="@(ProjectReference)" BuildInParallel="True" ToolsVersion="15.0" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)">
      <Output TaskParameter="TargetOutputs" ItemName="Tasks_PackBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Tasks_Pack:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj.metaproj'" Projects="@(ProjectReference)" Targets="Clean" BuildInParallel="True" ToolsVersion="15.0" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" />
  </Target>
  <Target Name="Tasks_Pack:Rebuild" Outputs="@(Tasks_PackBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj.metaproj'" Projects="@(ProjectReference)" Targets="Rebuild" BuildInParallel="True" ToolsVersion="15.0" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)">
      <Output TaskParameter="TargetOutputs" ItemName="Tasks_PackBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Tasks_Pack:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\Tasks.Pack.vcxproj.metaproj'" Projects="@(ProjectReference)" Targets="Publish" BuildInParallel="True" ToolsVersion="15.0" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" />
  </Target>
  <Target Name="Bcx_Core" Outputs="@(Bcx_CoreBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj'" Projects="@(ProjectReference)" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="Bcx_CoreBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Bcx_Core:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj'" Projects="@(ProjectReference)" Targets="Clean" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="Bcx_Core:Rebuild" Outputs="@(Bcx_CoreBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj'" Projects="@(ProjectReference)" Targets="Rebuild" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="Bcx_CoreBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Bcx_Core:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'S:\devel\zou-dev\zou\Tasks\..\..\Bcx\NetStandard\Bcx.Core\Bcx.Core.csproj'" Projects="@(ProjectReference)" Targets="Publish" BuildInParallel="True" ToolsVersion="$(ProjectToolsVersion)" Properties="Configuration=Release; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
</Project>