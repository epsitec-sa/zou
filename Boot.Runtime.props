<!--
Inputs
  RuntimeIdentifier
Outputs
  Platforms       - global const
  Platform        - local
  RuntimePlatform - local
  ForwardPlatform - local (Forward.props)
-->
<Project InitialTargets="TraceBootPlatform;BootRuntimeCheck" 
         TreatAsLocalProperty="RuntimeIdentifier;RuntimePlatform;Platform;CrossBuild">

  <!-- Supported Windows RID prefix  -->
  <PropertyGroup>
    <WinRuntimePrefix   Condition="'$(WinRuntimePrefix)'   == ''">win7</WinRuntimePrefix>
    <OsxRuntimePrefix   Condition="'$(OsxRuntimePrefix)'   == ''">osx</OsxRuntimePrefix>
    <LinuxRuntimePrefix Condition="'$(LinuxRuntimePrefix)' == ''">linux</LinuxRuntimePrefix>
  </PropertyGroup>
  
  <PropertyGroup>
    <Platforms>AnyCPU;x86;x64</Platforms>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(RuntimeIdentifier)' == '' Or '$(RuntimeIdentifier)' == '*Undefined*'">
      <PropertyGroup>
        <DebugBootRuntime>1</DebugBootRuntime>

        <Platform Condition="'$(Platform)' == '' And '$(ZouAgentType)' == 'Cpp'">Win32</Platform>
        <Platform Condition="'$(Platform)' == '' And '$(ZouAgentType)' == 'CSharp'">AnyCPU</Platform>

        <!-- Normalized Platform -->
        <RuntimePlatform Condition="'$(Platform)' == 'Any CPU' Or '$(Platform)' == 'AnyCPU'">AnyCPU</RuntimePlatform>
        <RuntimePlatform Condition="'$(Platform)' == 'Win32'   Or '$(Platform)' == 'x86'">x86</RuntimePlatform>
        <RuntimePlatform Condition="'$(RuntimePlatform)' == ''">x64</RuntimePlatform>
        <!-- Fix runtime platform for linux and osx -->
        <RuntimePlatform Condition="'$(RuntimePlatform)' == 'AnyCPU' And ! $([MSBuild]::IsOsPlatform(Windows))">x64</RuntimePlatform>

        <ForwardPlatform Condition="'$(ForwardPlatform)' == '' And '$(RuntimePlatform)' == 'AnyCPU'">Any CPU</ForwardPlatform>
        <ForwardPlatform Condition="'$(ForwardPlatform)' == '' And '$(RuntimePlatform)' == 'x86' And '$(Platform)' == 'Win32'">Win32</ForwardPlatform>
        <ForwardPlatform Condition="'$(ForwardPlatform)' == '' And '$(RuntimePlatform)' == 'x86'">x86</ForwardPlatform>
        <ForwardPlatform Condition="'$(ForwardPlatform)' == ''">x64</ForwardPlatform>
      </PropertyGroup>
    </When>
    <When Condition="$(RuntimeIdentifier.EndsWith('x86'))">
      <PropertyGroup>
        <DebugBootRuntime>2</DebugBootRuntime>

        <Platform        Condition="'$(Platform)'        == ''">x86</Platform>
        <RuntimePlatform Condition="'$(RuntimePlatform)' == ''">x86</RuntimePlatform>
        <ForwardPlatform Condition="'$(ForwardPlatform)' == ''">x86</ForwardPlatform>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <DebugBootRuntime>3</DebugBootRuntime>

        <Platform        Condition="'$(Platform)'        == ''">x64</Platform>
        <RuntimePlatform Condition="'$(RuntimePlatform)' == ''">x64</RuntimePlatform>
        <ForwardPlatform Condition="'$(ForwardPlatform)' == ''">x64</ForwardPlatform>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Limit cross-build -->
  <PropertyGroup>
    <!-- Do not cross-build inside Visual Studio -->
    <CrossBuild Condition="'$(BuildingInsideVisualStudio)' != ''">false</CrossBuild>
    <CrossBuild Condition="$(RuntimePlatform.EndsWith('x86'))">false</CrossBuild>
    <CrossBuild Condition="'$(CrossBuild)' == ''">false</CrossBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(SkipCrossBuild)' == 'true'">
    <!-- Save CrossBuild state -->
    <_CrossBuild0>$(CrossBuild)</_CrossBuild0>
    <!-- Disable cross-build for pack agent -->
    <CrossBuild>false</CrossBuild>
  </PropertyGroup>

  <PropertyGroup>
    <BuildWin>false</BuildWin>
    <BuildOsx>false</BuildOsx>
    <BuildLinux>false</BuildLinux>
    <BuildWin   Condition="$(CrossBuild) Or $(RuntimeIdentifier.StartsWith('win'))   Or ('$(RuntimeIdentifier)'=='' And $([MSBuild]::IsOsPlatform(Windows)))">true</BuildWin>
    <BuildOsx   Condition="$(CrossBuild) Or $(RuntimeIdentifier.StartsWith('osx'))   Or ('$(RuntimeIdentifier)'=='' And $([MSBuild]::IsOsPlatform(OSX))    )">true</BuildOsx>
    <BuildLinux Condition="$(CrossBuild) Or $(RuntimeIdentifier.StartsWith('linux')) Or ('$(RuntimeIdentifier)'=='' And $([MSBuild]::IsOsPlatform(Linux))  )">true</BuildLinux>
  </PropertyGroup>

  <PropertyGroup Condition="'$(SkipCrossBuild)' == 'true'">
    <SkipCrossBuild />
    <!-- Restore CrossBuild state -->
    <CrossBuild>$(_CrossBuild0)</CrossBuild>
    <_CrossBuild0 />
  </PropertyGroup>

  <!-- Compute RIDs -->
  <ItemGroup>
    <RuntimeIdentifier Condition="$(BuildWin)   And   $(RuntimeIdentifier.StartsWith('win'))"   Include="$(RuntimeIdentifier)">
      <RuntimeOS>win</RuntimeOS>
    </RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(BuildWin)   And ! $(RuntimeIdentifier.StartsWith('win'))"   Include="$(WinRuntimePrefix)-$(RuntimePlatform)">
      <RuntimeOS>win</RuntimeOS>
    </RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(BuildOsx)   And   $(RuntimeIdentifier.StartsWith('osx'))"   Include="$(RuntimeIdentifier)">
      <RuntimeOS>osx</RuntimeOS>
    </RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(BuildOsx)   And ! $(RuntimeIdentifier.StartsWith('osx'))"   Include="$(OsxRuntimePrefix)-$(RuntimePlatform)">
      <RuntimeOS>osx</RuntimeOS>
    </RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(BuildLinux) And   $(RuntimeIdentifier.StartsWith('linux'))" Include="$(RuntimeIdentifier)">
      <RuntimeOS>linux</RuntimeOS>
    </RuntimeIdentifier>
    <RuntimeIdentifier Condition="$(BuildLinux) And ! $(RuntimeIdentifier.StartsWith('linux'))" Include="$(LinuxRuntimePrefix)-$(RuntimePlatform)">
      <RuntimeOS>linux</RuntimeOS>
    </RuntimeIdentifier>
  </ItemGroup>

  <Target Name="BootRuntimeCheck" Condition="'$(ForwardPlatform)' != '' And '$(RuntimePlatform)' != ''">
    <PropertyGroup>
      <ErrorMessage>"Platform ($(ForwardPlatform)) and RuntimePlatform ($(RuntimePlatform)) are not compatibles"</ErrorMessage>
    </PropertyGroup>
    <Error Text="$(ErrorMessage)" Condition="('$(ForwardPlatform)' == 'Win32' Or '$(ForwardPlatform)' == 'x86') And '$(RuntimePlatform)' != 'x86'" />
    <Error Text="$(ErrorMessage)" Condition="('$(ForwardPlatform)' == ''      Or '$(ForwardPlatform)' == 'x64') And '$(RuntimePlatform)' != 'x64'" />
  </Target>

  <Target Name="TraceBootPlatform" Condition="'$(ZouTrace)' == 'true' Or '$(MSBuildProjectFile)' == '$(MSBuildThisFile)'">
    <Message Importance="high" Text="zou/Boot.Runtime.props [$(MSBuildProjectFile)]" />
    <Message Importance="high" Text="----------------------" />
    <Message Importance="high" Text="DebugBootRuntime   = $(DebugBootRuntime)" />
    <Message Importance="high" Text=" " />
    <Message Importance="high" Text="CrossBuild         = $(CrossBuild)" />
    <Message Importance="high" Text="BuildWin           = $(BuildWin)" />
    <Message Importance="high" Text="BuildOsx           = $(BuildOsx)" />
    <Message Importance="high" Text="BuildLinux         = $(BuildLinux)" />
    <Message Importance="high" Text=" " />
    <Message Importance="high" Text="Platform           = $(Platform)" />
    <Message Importance="high" Text="RuntimePlatform    = $(RuntimePlatform)" />
    <Message Importance="high" Text="$RuntimeIdentifier = $(RuntimeIdentifier)"/>
    <Message Importance="high" Text="@RuntimeIdentifier = %(RuntimeIdentifier.Identity)" />
    <Message Importance="high" Text=" " />
    <Message Importance="high" Text="ForwardPlatform    = $(ForwardPlatform)" />
    <Message Importance="high" Text="Platforms          = $(Platforms)" />
    <Message Importance="high" Text=" " />
  </Target>

</Project>
