<?xml version="1.0" encoding="utf-8"?>
<!--
Layout:
=======

  {native-project}
    Win32\v120_xp\bin\Debug\{native-files}

  where:
    Win32     $(InteropPlatform)
    v120_xp   $(PlatformToolset)
    
  ====
  
  {mixed-platform-solution}
    Win32\Interop\{native-project-name}\Debug\{native-files}
      
  {managed-project}
    bin\Debug\{native-files}

  where:
    Win32     $(InteropPlatform)
    
-->
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="InteropBuild">

  <!-- Make sure that ImportProject is available in VisualStudio's Build Action combo -->
  <ItemGroup>
    <AvailableItemName Include="ImportProject" />
  </ItemGroup>

  <Import Project="Cs.Boot.props" Condition="'$(ZouVersion)' == ''"/>
  <Import Project="Com.WorkDir.props"/>
  <Import Project="Com.InteropPlatform.props" />

  <ItemDefinitionGroup>
    <ImportProject>
      <Platform>$(InteropPlatform)</Platform>
      <OutDir>$(WorkDir)$(InteropPlatform)\Interop\%(FileName)\$(Configuration)\</OutDir>
    </ImportProject>
  </ItemDefinitionGroup>
  
  <Import Project="ImportProject.targets" />

  <Target Name="CreateInteropContent"
          Condition="'@(ImportProject)' != ''"
          DependsOnTargets="ImportProject">
    <ItemGroup>
      <InteropContent Include="%(ImportProject.OutDir)**\*.*" />
      <InteropContent>
        <Link>%(InteropContent.RecursiveDir)%(FileName)%(Extension)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </InteropContent>
      <Content Include="@(InteropContent)" />
    </ItemGroup>
    <Message Importance="low" Text="[i] %(InteropContent.FullPath) -&gt; $(TargetDir)%(RecursiveDir)%(FileName)%(Extension)" />
  </Target>

  <Target Name="InteropBuild"
          BeforeTargets="ResolveReferences"
          DependsOnTargets="CreateInteropContent"
          Condition="'$(DesignTimeBuild)' != 'true' And '$(BuildingProject)' == 'true'"/>

  <Target Name="InteropClean"
          AfterTargets="Clean"
          DependsOnTargets="ImportProjectClean" />
</Project>