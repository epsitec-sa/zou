#!/bin/bash

zou_setup()
{
  local NC='\e[0m' Red='\e[0;31m' Brown='\e[0;33m' Cyan='\e[0;36m' message

  cd "$zouBinDir"
  message="\n${Cyan}[zou]${NC} : ${Brown}Starting asynchronous update...${NC}"
  printf '%b\n' "$message"
  sleep .2
  message="${Cyan}[zou]${NC} : ${Cyan}Downloading, please wait...${NC}"
  printf '%b\n' "$message"
  git fetch --prune --all >/dev/null
  git fetch --tags --force >/dev/null
  git merge FETCH_HEAD >/dev/null

  find . -maxdepth 1 -type f -iname 'zoul-*' -not -iname 'zoul-update-boot' -exec cp --preserve '{}' "$setupDir/{}" ';'
  find . -maxdepth 1 -type f -iname 'git-*' -exec cp --preserve '{}' "$setupDir/{}" ';'

  export PATH="$setupDir:$PATH"

  zoul-update
}
zou_wait_launcher_exit()
{
  # register for launcher exiting event
  local launcherExiting=1
  trap "launcherExiting=0" USR1

  # notify launcher that we are listening
  kill -USR1 $PPID

  # wait for launcher to exit
  while [ $launcherExiting -ne 0 ]; do sleep .1; done
}
zou_clean() { rm -rf "$setupDir"; }

zouBinDir=$1
setupDir=$2
trap 'zou_clean' EXIT
zou_wait_launcher_exit
zou_setup "${@:3}"
