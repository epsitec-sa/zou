#! /bin/bash
# http://schacon.github.io/git/git.html
# https://stackoverflow.com/questions/2657935/checking-for-a-dirty-index-or-untracked-files-with-git/2658301

. zlib-core

[[ $SYNC_ISM == true ]] && ISM_OPT='--ignore-submodules'

repo_list_untracked()  { git ls-files --exclude-standard --others; }
repo_list_unstaged()   { git diff-files --name-only -r $ISM_OPT --; }
repo_list_uncommited() { git diff-index --cached --name-only -r $ISM_OPT HEAD --; }
repo_list_deleted()    { git ls-files --deleted; }
repo_list_unmerged()   { git diff --name-only --diff-filter=U $ISM_OPT | cut -f1; }

repo_module_id()
{
  local bdir=$(readlink -f ${1:-.})
  local mdir
  while [[ -n "$bdir" && ! -d "$bdir/.git" ]]; do
    [[ -z "$mdir" && -f "$bdir/.git" ]] && mdir=$bdir
    bdir=${bdir%/*}
  done
  [[ -n $mdir ]] && echo ${mdir#$bdir/}
}
repo_bundle_id()
{
  local bdir=$(readlink -f ${1:-.})
  bdir=$(readlink -f $bdir)
  while [[ -n "$bdir" && ! -d "$bdir/.git" ]]; do
    bdir=${bdir%/*}
  done

  cd "$bdir"
  local url=$(git config remote.origin.url)
  cd - >/dev/null

  local bid=${url##*/}; bid=${bid%.git}
  echo $bid
}

repo_require_clean_work_tree () {
    # io_info >&2 "repo_require_clean_work_tree"
    local prefix="$*"
    [[ -z $prefix ]] && prefix='error' || prefix="cannot $prefix"
    local err=0

    # Update the index
    if ! git update-index -q $ISM_OPT --refresh; then
        io_error 'your have unmerged paths.' "$prefix"
        io_message >&2 "$(repo_list_unmerged | sed 's/^/  /')" '' Red
        io_message >&2 "  fix conflicts and run 'git commit'." '' LightCyan
        err=1
    fi

    # Disallow untracked changes in the working tree
    if ! test -z "$(git ls-files --exclude-standard --others)"; then
        io_error 'your work tree contains untracked changes.' "$prefix"
        io_message >&2 "$(repo_list_untracked | sed 's/^/  /')" '' Red
        io_message >&2 "  run 'git add'" '' LightCyan
        err=1
    fi

    # Disallow unstaged changes in the working tree
    if ! git diff-files --quiet $ISM_OPT --; then
        io_error 'you have unstaged changes.' "$prefix"
        io_message >&2 "$(repo_list_unstaged | sed 's/^/  /')" '' Red
        io_message >&2 "  run 'git stash' or 'git add' and 'git commit'." '' LightCyan
        err=1
    fi

    # Disallow uncommitted changes in the index
    if ! git diff-index --cached --quiet HEAD $ISM_OPT --; then
        io_error 'your index contains uncommitted changes.' "$prefix"
        io_message >&2 "$(repo_list_uncommited | sed 's/^/  /')" '' Red
        io_message >&2 "  run 'git commit'." '' LightCyan
        err=1
    fi

    return $err
}