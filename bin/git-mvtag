#!/bin/bash

[[ -z $ZOUL_CORE ]]       && . zoul-core
[[ -z $ZOUL_GIT_TAG ]]    && . zoul-git-tag
[[ -z $ZOUL_GIT_MODULE ]] && . zoul-git-module

set -f

mvtag_parse()
{
  while [[ "$#" > 0 ]]; do case "$1" in
    -h|--help) zou-help $0; exit 0;;
    --) args+=( "$@" ); break;;
    -n|--dry-run) dryRun='echo';;
    -u|--no-push) noPushTags=true;;
    --debug) debug=true;;
    -*) io_error "unknown option: $1"; exit 1;;
    *) args+=("$1");;
  esac; shift; done
}
mvtag_run()
{
  local dryRun args=() noPushTags
  mvtag_parse "$@" || return $?
  
  module_run mvtag_main "${args[@]}"
}
mvtag_main()
{
  local tag1=$1 tag2=$2
  [[ -z $tag1 ]] && { io_error "missing source tag"; exit 1; }
  if tag_exists $tag1; then
    [[ -z $tag2 ]] && { io_error "missing target tag"; exit 1; }
    [[ $tag2 =~ /$ ]] && tag2="$tag2${tag1##*/}"  # tag2 is a folder
    $dryRun tag_move "$tag1" "$tag2"
  else
    local noPushTagsOpt=$noPushTags tag dest
    noPushTags=true
    # assume tag1 is a glob and tag2 is a folder
    for tag in $(mvtag_tag_enumerator "$tag1"); do
      tag2=${tag2#.}            # remove leading dot from dest
      dest=${tag2%/}/${tag##*/} # remove trailing slash from dest and concat tag name without folder
      $dryRun tag_move $tag ${dest#/}
    done
    [[ -z $noPushTagsOpt ]] && $dryRun . git-mirrortags
  fi
}
mvtag_tag_enumerator()
{
  case "$1" in
    .) git tag -l | grep -Ev '/';;  
    *) git tag -l "$1";;
  esac
}

mvtag_run "$@"
