#!/bin/bash

[[ -z $ZOUL_GIT_MODULE ]]     && . zoul-git-module
[[ -z $ZOUL_GIT_CONFIG_SKU ]] && . zoul-git-config-sku

csku_parse()
{
  while [[ "$#" > 0 ]]; do case "$1" in
    --) shift; args+=("$@"); break;;
    -h|--help) zou-help $0; exit 0;;
    -q|--quiet) quiet=true;;
    -i|--include) [[ $mode == 'exclude' ]] && { io_error 'options conflict'; exit 1; } || mode='include';;
    -x|--exclude) [[ $mode == 'include' ]] && { io_error 'options conflict'; exit 1; } || mode='exclude';;
    -*) io_error "unknown option: $1"; exit 1;;
    *)
      case "$mode" in
        include) include+=($1);;
        exclude) exclude+=($1);;
      esac
  esac; shift; done
}
csku_run()
{
  local quiet mode='status' include=() exclude=()
  csku_parse "$@" || return $?

  module_run csku_main "${args[@]}"
}
csku_main()
{
  if [ ${#include[@]} -ne 0 ]; then
    if [ ${#include[@]} -eq 1 ]; then
      config_sku_include "${include[0]}"
    else
      config_sku_include_many "${include[@]}"
    fi
  fi
  if [ ${#exclude[@]} -ne 0 ]; then
    if [ ${#exclude[@]} -eq 1 ]; then
      config_sku_exclude "${exclude[0]}"
    else
      config_sku_exclude_many "${exclude[@]}"
    fi
  fi

  case "$mode" in
    include) [ ${#include[@]} -eq 0 ] && config_sku_include_all;;
    exclude) [ ${#exclude[@]} -eq 0 ] && config_sku_exclude_all;;
  esac

  [[ $quiet == true ]] || config_sku_status
}

csku_run "$@"
