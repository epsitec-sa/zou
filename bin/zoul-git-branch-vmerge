#!/bin/bash

# Use the following statement to include current lib only once
#   [[ -z $ZOUL_GIT_BRANCH_VMERGE ]] && . zoul-git-branch-vmerge
ZOUL_GIT_BRANCH_VMERGE=true

[[ -z $ZOUL_GIT_VBRANCH ]]      && . zoul-git-vbranch
[[ -z $ZOUL_GIT_BRANCH_MERGE ]] && . zoul-git-branch-merge

branch_get_vbranch_name()
{
    local ltag=$(vtag_describe ${1:-HEAD})
    vtag_get_vbranch_name $ltag
}
branch_vmerge()
{
  local branch=${1:-HEAD}
  local vbranch=$(branch_get_vbranch_name $branch)
  branch_merge $branch $vbranch
  echo $vbranch
}
branch_release()
{
  local branch=$1 vbranch
  [[ -z $branch ]] && branch=$(branch_current)
  vbranch=$(branch_vmerge "$branch")
  [ $? -ne 0 ] && return 1

  # compute next vtag
  local vtag
  vtag=$(vbranch_next_vtag $branch)
  [ $? -ne 0 ] && return 1

  # set technical version - modify resources files
  local files
  files=( $(version_update $vtag) )
  version_commit_files "$vtag" "${files[@]}"
  # ff merge
  branch_merge $branch $vbranch

  # create vtag
  git tag -a -m "Branch '$branch' released" $vtag $branch
  [[ $local == true ]] || git push $(git remote) "$vtag"
}
