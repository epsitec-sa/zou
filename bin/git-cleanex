#!/bin/bash

. zoul-git-repo

forOpts=()
while [[ "$#" > 0 ]]; do case "$1" in
  -h|--help) zou-help $0; exit 0;;
  -d|--dsm-only)  dsmOnly=true;;
  -f|--force)     force=true;;
  -r|--recursive) recursive=true;;
  -*) forOpts+=($1);;
esac; shift; done

clean_node()
{
  if [[ $dsmOnly == true ]]; then
    repo_remove_dangling_submodules_async
    return $?
  fi

  if [[ $force == true ]]; then
    repo_remove_dangling_submodules_async
  else
    repo_require_clean_work_tree 'cannot clean' || return $?
  fi

  if [ -d node_modules ]; then
    io_info 'Removing node modules...' "[$moduleId]"
    rm -rf node_modules
  fi

  git clean -xdf -e 'packages'
  git checkout .

  io_info "Cleaned" "[$moduleId]"
}

moduleId=$(repo_module_id)
if [[ $recursive = true ]]; then
  . git-for "${forOpts[@]}" -- 'clean_node'
else
  clean_node
fi
