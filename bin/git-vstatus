#!/bin/bash

[[ -z $ZOUL_GIT_REPO ]]        && . zoul-git-repo
[[ -z $ZOUL_GIT_VTAG ]]        && . zoul-git-vtag
[[ -z $ZOUL_GIT_BRANCH_CORE ]] && . zoul-git-branch-core
[[ -z $ZOUL_GIT_MODULE ]]      && . zoul-git-module

vstatus_parse()
{
  while [[ "$#" > 0 ]]; do case "$1" in
    -h|--help) zou-help $0; exit 0;;
    .)              unset recursive;;
    --alpha)        prerelPrefix='alpha';;
    --beta)         prerelPrefix='beta';;
    --rc)           prerelPrefix='rc';;
    --rtm)          prerelPrefix='rtm';;
    --debug)        debug=true;;
    -*)             forOpts+=($1);;
    *) ref=$1;;
  esac; shift; done
}
vstatus_run()
{
  local prerelPrefix forOpts=() ref recursive=true
  vstatus_parse "$@" || return $?

  module_run vstatus_main "$ref"
}
vstatus_main()
{
  [ ${#moduleSubmodulePaths[@]} -eq 0 ] && unset recursive

  if [[ $recursive == true ]]; then
    . git-for "${forOpts[@]}" -- vstatus_node "$@"
  else
    module_run vstatus_node "$@"
  fi
}
vstatus_node()
{
  local ref=$(git_symbolic_ref "${1:-HEAD}") verbose
  [[ -z $recursive ]] && verbose=true
  # ZOU_TRACE=true io_trace "vstatus_node ${*@Q} -- $(print_vars ref verbose)"
  if ! ref_exists "$ref"; then
    ref=$(branch_realize $ref)
    if [ $? -gt 1 ]; then
      io_error "Branch '$1' does not exist" "$moduleTracePrefix"
      return 1
    fi
  fi
  local ltag stag ntag lsuf delta tags vbranch
  ltag=$(vtag_describe $ref)
  if [[ -z $ltag ]]; then
    io_error "Version tag not found" "$moduleTracePrefix"
    return 1
  fi
  stag=${ltag%-*-g*}
  lsuf=${ltag#$stag}
  vbranch=$(vtag_get_vbranch_name $stag)

  # get the highest vtag on vbranch
  stag=$(vtag_highest $vbranch)

  # Already published at   v12.1.1 -- next version = v12.1.2
  # 123 commit[s] ahead of v12.1.1 -- next version = v12.1.2
  ntag=$(vtag_increment "$stag" "$prerelPrefix")
  if [[ -z $lsuf ]]; then
    io_message "Already published   at ${Brown}$(string_pad_right 8 $stag)${LightBlue} -- next version = ${Brown}$(string_pad_right 8 $ntag)" "$moduleTracePrefix" LightBlue
  else
    delta=${lsuf%-g*}
    delta=${delta#-}
    # io_info "Active branch is ${Brown}$(string_pad_left 3 $delta)${Cyan} commit[s] ahead of tag ${Brown}$(string_pad_right 8 $stag)${Cyan} -- next version = ${Brown}$(string_pad_right 8 $ntag)" "$moduleTracePrefix"
    io_info "${Brown}$(string_pad_left 3 $delta)${Cyan} commit[s] ahead of ${Brown}$(string_pad_right 8 $stag)${Cyan} -- next version = ${Brown}$(string_pad_right 8 $ntag)" "$moduleTracePrefix"
  fi
  return 0
}

vstatus_run "$@"
