#!/usr/bin/env bash

[[ -z $ZOUL_CONFIG ]]          && . zoul-config
[[ -z $ZOUL_CHICKEN ]]         && . zoul-chicken
[[ -z $ZOUL_GIT_MODULE ]]      && . zoul-git-module

zou_setup1_parse()
{
  while [[ "$#" > 0 ]]; do case "$1" in
    ---vlast)           zouCheckoutType='vlast';;
    ---vnext)           zouCheckoutType='vnext';;
    ---dev)             zouCheckoutType='dev';;
    --vlast)            checkoutType='vlast';;
    --vnext)            checkoutType='vnext';;
    --dev)              checkoutType='dev';;
    -*) io_error "unknown option '$1'"; return 1;;
  esac; shift; done

  [[ -n $zouSetupDebug ]] && io_trace "[DEBUG] zou_setup1_parse -- $(print_vars checkoutType zouCheckoutType)"
  return 0
}

zou_setup1()
{
  [[ -n $zouSetupDebug ]] && io_trace "[DEBUG] zou_setup1 -- \$0='$0'"
  [[ -n $zouSetupDebug ]] && io_trace "[DEBUG] zou_setup1 -- ${*@Q}"
  module_run _zou_setup1_core "$@"
}

_zou_setup1_core()
{
  local checkoutType zouCheckoutType

  zou_setup1_parse "$@" || return $?
  io_set_version

  [[ -n $zouSetupDebug ]] && io_trace "[DEBUG] _zou_setup1_core -- $(print_vars actualVersion version)"
  [[ -n $zouSetupDebug ]] && io_trace "[DEBUG] _zou_setup1_core -- $(print_vars checkoutType zouCheckoutType)"

  config_setup  # global setup only

  printf '\n'
  zou_chicken_setup
  [[ $checkoutType == $zouCheckoutType ]] || git sku enter "--$checkoutType"
}

zou_setup1 "$@"
