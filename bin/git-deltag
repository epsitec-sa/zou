#!/bin/bash

[[ -z $ZOUL_GIT_TAG ]]    && . zoul-git-tag
[[ -z $ZOUL_GIT_MODULE ]] && . zoul-git-module

deltag_parse()
{
  while [[ "$#" > 0 ]]; do case "$1" in
    -h|--help) zou-help $0; exit 0;;
    --) args+=( "$@" ); break;;
    -n|--dry-run) dryRun=true;;
    -u|--no-push) noTagPush=true;;
    --debug) debug=true;;
    -*) io_error "unknown option: $1"; exit 1;;
    *) args+=("$1");;
  esac; shift; done
}

deltag_run()
{
  local args=() dryRun noTagPush
  deltag_parse "$@" || return $?

  module_run deltag_main "${args[@]}"
}
deltag_main()
{
  local tag=$1
  [[ -z $tag ]] && { io_error "missing argument"; exit 1; }
  if tag_exists $tag; then
    deltag_delete $tag
  else
    # assume tag is a glob
    for tag in $(deltag_tag_enumerator "$tag"); do
      deltag_delete $tag
    done
    [[ -z $noTagPush ]] && tag_mirror false $dryRun
  fi
}
deltag_delete()
{
  local tag=$1
  if [[ $dryRun == true ]]; then
    io_message "Deleted tag ${Brown}$tag${DarkGray}" "$moduleTracePrefix" DarkGray
  else
    tag_delete "$tag"
  fi
}
deltag_tag_enumerator()
{
  case "$1" in
    .) git tag -l | grep -Ev '/';;  
    *) git tag -l "$1";;
  esac
}

deltag_run "$@"
