#!/bin/bash

. zoul-git-config-select

mode='status'
include=()
exclude=()
while [[ "$#" > 0 ]]; do case "$1" in
  --) shift; args+=("$@"); break;;
  -h|--help) zou-help $0; exit 0;;
  -i|--include) [[ $mode == 'exclude' ]] && { io_error 'options conflict'; exit 1; } || mode='include';;
  -x|--exclude) [[ $mode == 'include' ]] && { io_error 'options conflict'; exit 1; } || mode='exclude';;
  -q|--quiet) quiet=true;;
  -*) echo "unknown option: $1" >&2; exit 1;;
  *)
    case "$mode" in
      include) include+=($1);;
      exclude) exclude+=($1);;
    esac
esac; shift; done

branch=$(branch_current)
configFile=$(repo_zouflow_path)

if [ ${#include[@]} -ne 0 ]; then
  if [ ${#include[@]} -eq 1 ]; then
    config_select_include "${include[0]}" "$branch" "$configFile"
  else
    config_select_include_many "$branch" "$configFile" "${include[@]}"
  fi
fi
if [ ${#exclude[@]} -ne 0 ]; then
  if [ ${#exclude[@]} -eq 1 ]; then
    config_select_exclude "${exclude[0]}" "$branch" "$configFile"
  else
    config_select_exclude_many "$branch" "$configFile" "${exclude[@]}"
  fi
fi

case "$mode" in
  include) [ ${#include[@]} -eq 0 ] && config_select_include_all "$branch" "$configFile";;
  exclude) [ ${#exclude[@]} -eq 0 ] && config_select_exclude_all "$branch" "$configFile";;
esac

[[ $quiet == true ]] || config_select_status "$branch" "$configFile"
