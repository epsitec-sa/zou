#!/bin/bash

# General references
# https://www.davidpashley.com/articles/writing-robust-shell-scripts/

# Use '. zoul' to (re)load zoul-* libraries

while [[ "$#" > 0 ]]; do case "$1" in
  -h|--help)
    echo "zoul [<options>] - Load zou libraries.

      -h|--help            display help
      -z|--zou-vars        display zou variables
      --debug              display debug info"
    exit 0;;
  -z|--zou-vars) showZouVars=true;;
  --debug)       debug=true;;
  -*) echo "unknown option: $1" >&2; exit 1;;
esac; shift; done

unset ZOUL_CORE
unset ZOUL_LOCK
unset ZOUL_CONFIG
unset ZOUL_PROCESS
unset ZOUL_GIT_CORE
unset ZOUL_GIT_REPO
unset ZOUL_GIT_REF
unset ZOUL_GIT_TAG
unset ZOUL_GIT_VTAG
unset ZOUL_GIT_VTAG_GROUPING
unset ZOUL_GIT_VTABLE
unset ZOUL_GIT_COMMIT
unset ZOUL_GIT_VBRANCH
unset ZOUL_GIT_BUNDLE
unset ZOUL_GIT_MODULE
unset ZOUL_GIT_COSM
unset ZOUL_GIT_CONFIG
unset ZOUL_GIT_CONFIG_PUBLISH
unset ZOUL_GIT_CONFIG_SELECT
unset ZOUL_GIT_CONFIG_SKU
unset ZOUL_GIT_CONFIG_VERSION
unset ZOUL_GIT_BRANCH_CORE
unset ZOUL_GIT_BRANCH_MERGE
unset ZOUL_GIT_BRANCH_SYNC
unset ZOUL_GIT_BRANCH_SELECT
unset ZOUL_GIT_BRANCH_PUBLISH

[[ -z $ZOUL_CORE ]]               && . zoul-core
[[ -z $ZOUL_LOCK ]]               && . zoul-lock
[[ -z $ZOUL_CONFIG ]]             && . zoul-config
[[ -z $ZOUL_PROCESS ]]            && . zoul-process
[[ -z $ZOUL_GIT_CORE ]]           && . zoul-git-core
[[ -z $ZOUL_GIT_REPO ]]           && . zoul-git-repo
[[ -z $ZOUL_GIT_REF ]]            && . zoul-git-ref
[[ -z $ZOUL_GIT_TAG ]]            && . zoul-git-tag
[[ -z $ZOUL_GIT_VTAG ]]           && . zoul-git-vtag
[[ -z $ZOUL_GIT_VTAG_GROUPING ]]  && . zoul-git-vtag-grouping
[[ -z $ZOUL_GIT_VTABLE ]]         && . zoul-git-vtable
[[ -z $ZOUL_GIT_COMMIT ]]         && . zoul-git-commit
[[ -z $ZOUL_GIT_VBRANCH ]]        && . zoul-git-vbranch
[[ -z $ZOUL_GIT_BUNDLE ]]         && . zoul-git-bundle
[[ -z $ZOUL_GIT_MODULE ]]         && . zoul-git-module
[[ -z $ZOUL_GIT_COSM ]]           && . zoul-git-cosm
[[ -z $ZOUL_GIT_CONFIG ]]         && . zoul-git-config
[[ -z $ZOUL_GIT_CONFIG_PUBLISH ]] && . zoul-git-config-publish
[[ -z $ZOUL_GIT_CONFIG_SELECT ]]  && . zoul-git-config-select
[[ -z $ZOUL_GIT_CONFIG_SKU ]]     && . zoul-git-config-sku
[[ -z $ZOUL_GIT_CONFIG_VERSION ]] && . zoul-git-config-version
[[ -z $ZOUL_GIT_BRANCH_CORE ]]    && . zoul-git-branch-core
[[ -z $ZOUL_GIT_BRANCH_MERGE ]]   && . zoul-git-branch-merge
[[ -z $ZOUL_GIT_BRANCH_SYNC ]]    && . zoul-git-branch-sync
[[ -z $ZOUL_GIT_BRANCH_SELECT ]]  && . zoul-git-branch-select
[[ -z $ZOUL_GIT_BRANCH_PUBLISH ]] && . zoul-git-branch-publish

if [[ $showZouVars == true ]]; then
  for zouVar in $(compgen -v | grep -Ei '^(zou|io)_'); do
    declare -p $zouVar
  done
fi