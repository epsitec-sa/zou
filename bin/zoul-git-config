#!/bin/bash

# Use the following statement to include current lib only once
#   [[ -z $ZOUL_GIT_CONFIG ]] && . zoul-git-config
ZOUL_GIT_CONFIG=true

[[ -z $ZOUL_GIT_MODULE ]]        && . zoul-git-module
[[ -z $ZOUL_GIT_CONFIG_SKU ]]    && . zoul-git-config-sku
[[ -z $ZOUL_GIT_CONFIG_SELECT ]] && . zoul-git-config-select

# global options
#   noSkuFilter
#   noSelectFilter

# io_trace "branchChangedEvent+=( _config_reset_scope )"
branchChangedEvent+=( _config_reset_scope )
branchSyncEvent+=( _config_on_sync )

# usage:
#   module_run config_scope $*
config_scope()
{
  # setup config context
  local configSkuInclude configSkuExclude \
        configSelectInclude configSelectExclude configSelectExcludeIds \
        configScopeInitialized=true
  
  _config_reset_scope

  # execute next russian doll
  $1 "${@:2}"
}
_config_on_sync()
{
  [[ $3 =~ ^\< ]] && _config_reset_scope
}
_config_reset_scope()
{
  # io_trace "_config_reset_scope"

  [[ $configScopeInitialized == true ]] || return 0

  if [ ${#moduleSubmodulePaths[@]} -eq 0 ]; then
    configSkuExclude=()
    configSkuInclude=()
    configSelectExclude=()
    configSelectInclude=()
  else
    if [[ $noSkuFilter == true ]]; then
      configSkuExclude=()
      configSkuInclude=( ${moduleSubmodulePaths[@]} )
    else
      configSkuExclude=( $(config_sku_list_excluded) )
      configSkuInclude=( $(config_sku_list_included moduleSubmodulePaths[@] configSkuExclude[@]) )
    fi
    if [[ $noSelectFilter == true ]]; then
      configSelectExclude=()
      configSelectInclude=( ${configSkuInclude[@]} )
    else
      local exclude=( $(config_select_list_excluded moduleSubmodulePaths[@]) )
      local include=( $(config_select_list_included moduleSubmodulePaths[@]) )

      configSelectExclude=( $(array_remove_array exclude[@] configSkuExclude[@]) )
      configSelectInclude=( $(array_remove_array include[@] configSkuExclude[@]) )
    fi
    configSelectExcludeIds=( "${configSelectExclude[@]/#/$moduleId\/}" )

    # io_trace "_config_reset_scope -- $(print_vars configSkuInclude[@])"
    # io_trace "_config_reset_scope -- $(print_vars configSkuExclude[@])"
    # io_trace "_config_reset_scope -- $(print_vars configSelectInclude[@])"
    # io_trace "_config_reset_scope -- $(print_vars configSelectExclude[@])"
    # io_trace "_config_reset_scope -- $(print_vars configSelectExcludeIds[@])"
  fi
}
