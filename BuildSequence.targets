<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
    <LastBuildSequencePath>$(SolutionDir)$(SolutionName).lbs.zou</LastBuildSequencePath>
    <ActualBuildSequencePath>$(SolutionDir)$(SolutionName).abs.zou</ActualBuildSequencePath>
  </PropertyGroup>

  <!--=========================================================================-->

  <!-- Reset build sequence if associated solution changes -->
  <Target Name="ResetBuildSequence"
          Condition="$(SolutionName) != ''"
          Inputs="$(SolutionPath)"
          Outputs="$(LastBuildSequencePath);$(ActualBuildSequencePath)">
    
    <Delete Files="$(LastBuildSequencePath);$(ActualBuildSequencePath)" />
  </Target>
  
  
  <Target Name="ReadBuildSequence"
          Condition="$(SolutionName) != ''"
          DependsOnTargets="ResetBuildSequence"
          Returns="$(LastBuildSequencePath);$(ActualBuildSequencePath)">

    <!-- Clean obsolete stuff -->
    <Delete Files="$(SolutionDir)$(SolutionName).bo.zou" />

    <!-- Load last build sequence -->
    <ReadLinesFromFile File="$(LastBuildSequencePath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>
    <ItemGroup >
      <LastBuildSequence Include="@(_Temporary)" />
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
     <PropertyGroup >
      <LastBuildSequenceContainsProject Condition="'@(LastBuildSequence)' != '' And @(LastBuildSequence->AnyHaveMetadataValue('Identity', '$(ProjectPath)'))">true</LastBuildSequenceContainsProject>
    </PropertyGroup>
    <!--<LogItems Items="@(LastBuildSequence)" Title="[R] LastBuildSequence" />-->
    
    <!-- Load actual build sequence -->
    <ReadLinesFromFile File="$(ActualBuildSequencePath)" >
      <Output TaskParameter="Lines" ItemName="_Temporary"/>
    </ReadLinesFromFile>
    <ItemGroup >
      <ActualBuildSequence Include="@(_Temporary)" />
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
     <PropertyGroup >
      <ActualBuildSequenceContainsProject Condition="'@(ActualBuildSequence)' != '' And @(ActualBuildSequence->AnyHaveMetadataValue('Identity', '$(ProjectPath)'))">true</ActualBuildSequenceContainsProject>
    </PropertyGroup>
    <!--<Message Importance="high" Text="ActualBuildSequenceContainsProject = $(ActualBuildSequenceContainsProject)" />-->

    <!-- Reset actual build sequence if the current project is alreay inside -->
    <ItemGroup >
      <ActualBuildSequence Remove="@(ActualBuildSequence)" Condition="'$(ActualBuildSequenceContainsProject)' == 'true'"/>
    </ItemGroup>

    <!-- Add current project to actual build sequence -->
    <ItemGroup>
      <ActualBuildSequence Remove="$(ProjectPath)" />
      <ActualBuildSequence Include="$(ProjectPath)" />
    </ItemGroup>
    <!--<LogItems Items="@(ActualBuildSequence)" Title="[U] ActualBuildSequence" />-->
  
    <!-- Compare last and actual build sequences: if they contain the same elements we can consider that the current project is the last project of the solution build -->
    <ItemGroup >
      <_LastMinusActual Include="@(LastBuildSequence)" />
      <_LastMinusActual Remove="@(ActualBuildSequence)" />
      <_ActualMinusLast Include="@(ActualBuildSequence)" />
      <_ActualMinusLast Remove="@(LastBuildSequence)" />
    </ItemGroup>
    <Error Condition="'@(_ActualMinusLast)' != ''" Text="Last build sequence is not up to date: please clean the solution!" />
         
    <PropertyGroup >
      <BuildSequenceIsLastProject Condition="'@(_LastMinusActual)' == ''">true</BuildSequenceIsLastProject>
    </PropertyGroup>
    <!--<Message Importance="high" Text="BuildSequenceIsLastProject = $(BuildSequenceIsLastProject)" />-->
    
    <ItemGroup >
      <_LastMinusActual Remove="@(_LastMinusActual)" />
      <_ActualMinusLast Remove="@(_ActualMinusLast)" />
    </ItemGroup>
  </Target>

  <Target Name="WriteBuildSequence"
          Condition="$(SolutionName) != ''"
          DependsOnTargets="ReadBuildSequence"
          Returns="$(LastBuildSequencePath);$(ActualBuildSequencePath)">

    <ItemGroup>
      <LastBuildSequence Remove="$(ProjectPath)" />
      <LastBuildSequence Include="$(ProjectPath)" />
    </ItemGroup>
    
    <WriteLinesToFile File="$(LastBuildSequencePath)"
                      Lines="@(LastBuildSequence)"
                      Overwrite="true" />

    <WriteLinesToFile File="$(ActualBuildSequencePath)"
                      Lines="@(ActualBuildSequence)"
                      Overwrite="true" />

    <!--<LogItems Items="@(LastBuildSequence)"   Title="[W] LastBuildSequence" />
    <LogItems Items="@(ActualBuildSequence)" Title="[W] ActualBuildSequence" />-->
  </Target>

  <Target Name="BuildSequenceClean" AfterTargets="AfterClean">
    <Delete Files="$(LastBuildSequencePath);$(ActualBuildSequence)" />
  </Target>
</Project>
