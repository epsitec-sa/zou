<?xml version="1.0" encoding="utf-8"?>
<!-- Import this script at the end of the C# interop project -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GetTextBuild">

  <!-- Make sure that PoResource is available in VisualStudio's Build Action combo -->
  <ItemGroup>
    <AvailableItemName Include="PoResource" />
    <!--<AvailableItemName Include="PoGlobalResource" />-->
  </ItemGroup>

  <Import Project="Cs.Boot.props"/>

  <!--=========================================================================-->
  <!-- Definitions -->
  
  <PropertyGroup>
    <PoAnchorDir>$(BundleDir)</PoAnchorDir>
    <PoIntDir>$([System.IO.Path]::Combine($(ProjectDir),$(IntermediateOutputPath)))</PoIntDir>
    <PoLocaleDir>locale\</PoLocaleDir>
    <PoTemplateSourcesPath>$(PoIntDir)potsources.txt</PoTemplateSourcesPath>
    <PoTemplatePath>$(PoIntDir)$(ProjectName).pot</PoTemplatePath>

    <BundleCompendiumDir>$(BundleDir).Resource\</BundleCompendiumDir>
    <BundleCompendiumName>Compendium</BundleCompendiumName>
    <ModuleCompendiumDir  Condition="'$(ModuleDir)'  != ''">$(ModuleDir).Resource\</ModuleCompendiumDir>
    <ModuleCompendiumName Condition="'$(ModuleName)' != ''">Compendium</ModuleCompendiumName>

    <!--<GetTextKeyword>_</GetTextKeyword>-->
    <XGetText>$(ZouBinDir)xgettext</XGetText>
    <MsgInit>$(ZouBinDir)msginit</MsgInit>
    <MsgMerge>$(ZouBinDir)msgmerge</MsgMerge>
    <MsgCat>$(ZouBinDir)msgcat</MsgCat>
    <MsgAttrib>$(ZouBinDir)msgattrib</MsgAttrib>

    <CopyrightHolder>EPSITEC SA, CH-1400 Yverdon-les-Bains, Switzerland</CopyrightHolder>
    <PackageName Condition="'$(ModuleName)' == ''">'$(BundleName)'</PackageName>
    <PackageName Condition="'$(ModuleName)' != ''">'$(ModuleName)'</PackageName>
  </PropertyGroup>

  <!--=========================================================================-->
  <!-- Setup PO Resource -->
  
  <Target Name="SetupPoResource">
    <!-- Extract Culture metadata -->
    <AssignCulture Files="@(PoResource);@(PoGlobalResource)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoResourceWithCulture" />
      <Output TaskParameter="AssignedFilesWithNoCulture" ItemName="PoResourceWithNoCulture" />
    </AssignCulture>
    <AddFileInfo Files="@(PoResourceWithCulture);@(PoResourceWithNoCulture)">
      <Output TaskParameter="OutputFiles" ItemName="PoResourceWithInfo" />
    </AddFileInfo>
    <!-- Add metadata helpers -->
    <ItemGroup>
      <PoResource Remove="@(PoResourceWithInfo)" />
      <PoResource Include="@(PoResourceWithInfo)" />
      <PoResource>
        <Type>PO</Type>
        <Domain>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)'))</Domain>
        <MoResourceDir Condition="'%(WithCulture)' == 'true'">$(TargetDir)$(PoLocaleDir)%(Culture)\LC_MESSAGES\</MoResourceDir>
        <MoResourceDir Condition="'%(WithCulture)' != 'true'">$(TargetDir)$(PoLocaleDir)en-US\LC_MESSAGES\</MoResourceDir>

        <BundleCompendium Condition="'%(WithCulture)' == 'true'">$(BundleCompendiumDir)$(BundleCompendiumName).%(Culture).po</BundleCompendium>
        <BundleCompendium Condition="'%(WithCulture)' != 'true'">$(BundleCompendiumDir)$(BundleCompendiumName).po</BundleCompendium>
        <ModuleCompendium Condition="'%(WithCulture)' == 'true' And '$(ModuleCompendiumDir)' != ''">$(ModuleCompendiumDir)$(ModuleCompendiumName).%(Culture).po</ModuleCompendium>
        <ModuleCompendium Condition="'%(WithCulture)' != 'true' And '$(ModuleCompendiumDir)' != ''">$(ModuleCompendiumDir)$(ModuleCompendiumName).po</ModuleCompendium>
      </PoResource>
      <PoResource>
        <MoResourceFullPath>%(MoResourceDir)%(Domain).mo</MoResourceFullPath>
      </PoResource>
    </ItemGroup>
    <!--<LogItems Items="@(PoResource)" Title="PoResource" AllMetadata="true" />-->
  </Target>

  <!--=========================================================================-->
  <!-- Create PO Template -->

  <Target Name="GetPoSources" Condition="'@(Compile)' != ''">
    <ItemGroup>
      <PoSource Include="@(Compile)" Exclude="$(TMP)\*" />
      <PoSource Condition="'@(PoGlobalResource)' != ''" Include="%(ProjectReference.RootDir)%(Directory)**\*.cs" Exclude="%(ProjectReference.RootDir)%(Directory)obj\**\*.cs" />
      <PoSource>
        <AnchorRelativePath>$([MSBuild]::MakeRelative($(PoAnchorDir), %(PoSource.FullPath)))</AnchorRelativePath>
      </PoSource>
    </ItemGroup>
    <!--<LogItems Items="@(PoSource)" Title="PoSource" AllMetadata="true"/>-->
  </Target>

  <Target Name="SavePoSources"
          DependsOnTargets="GetPoSources"
          Inputs="@(PoSource)"
          Outputs="$(PoTemplateSourcesPath)">

    <MakeDir Directories="$(PoIntDir)" />
    <WriteLinesToFile File="$(PoTemplateSourcesPath)" Lines="@(PoSource->'%(AnchorRelativePath)')" Overwrite="true" />
  </Target>

  <Target Name="CreatePoTemplate"
          DependsOnTargets="SavePoSources"
          Inputs="$(PoTemplateSourcesPath)"
          Outputs="$(PoTemplatePath)">
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap --copyright-holder="$(CopyrightHolder)" --package-name="$(PackageName)"</_Options>
      <_Options>$(_Options) -k_</_Options>
      <_Options>$(_Options) -D"$(PoAnchorDir)." -f"$(PoTemplateSourcesPath)" -o"$(PoTemplatePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />
  </Target>
  <Target Name="DeletePoTemplate" Outputs="$(PoTemplateSourcesPath);$(PoTemplatePath)">
    <Delete Files="$(PoTemplateSourcesPath);$(PoTemplatePath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Init PO Resource -->
  
  <Target Name="InitPoResource"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PoTemplatePath)"
          Outputs="%(PoResource.FullPath)">
    <!--<Message Importance="high" Text="%(PoResource.FullPath) (%(PoResource.Length) bytes)"/>-->
    <PropertyGroup>
      <_Options>-o"%(PoResource.FullPath)" -i"$(PoTemplatePath)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) -l%(Culture)</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.Length)' &lt;= '10'" Command='"$(MsgInit)" $(_Options)' />
  </Target>

  <!--=========================================================================-->
  <!-- Init bundle compendium -->

  <Target Name="InitBundleCompendium"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PoTemplatePath)"
          Outputs="%(PoResource.BundleCompendium)">
    <MakeDir Directories="$(BundleCompendiumDir)" />
    <PropertyGroup>
      <_Options>--no-wrap -o"%(PoResource.BundleCompendium)" -i"$(PoTemplatePath)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) -l%(Culture)</_Options>
    </PropertyGroup>
    <Exec Condition="!Exists('%(PoResource.ModuleCompendium)')" Command='"$(MsgInit)" $(_Options)' />
  </Target>

  <!--=========================================================================-->
  <!-- Init module compendium -->

  <Target Name="InitModuleCompendium"
          DependsOnTargets="CreatePoTemplate"
          Inputs="$(PoTemplatePath)"
          Outputs="%(PoResource.ModuleCompendium)">
    <MakeDir Condition="'%(PoResource.ModuleCompendium)' != ''" Directories="$(ModuleCompendiumDir)" />
    <PropertyGroup>
      <_Options>--no-wrap -o"%(PoResource.ModuleCompendium)" -i"$(PoTemplatePath)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) -l%(Culture)</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.ModuleCompendium)' != '' And !Exists('%(PoResource.ModuleCompendium)')" Command='"$(MsgInit)" $(_Options)' />
  </Target>

  <!--=========================================================================-->
  <!-- Consolidate bundle compendium -->

  <Target Name="ConsolidateBundleCompendiumWithPoResource"
          DependsOnTargets="InitBundleCompendium;InitPoResource"
          Inputs="%(PoResource.FullPath)"
          Outputs="%(PoResource.BundleCompendium)">

    <!-- Cat: BundleCompendium += PoResource -->
    <PropertyGroup>
      <_Options>--no-wrap -D"$(PoAnchorDir)." -o"%(PoResource.BundleCompendium)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) --lang=%(Culture)</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgCat)" $(_Options) "%(PoResource.BundleCompendium)" "%(PoResource.FullPath)"' />
  </Target>

  <Target Name="ConsolidateBundleWithModuleCompendium"
          DependsOnTargets="InitBundleCompendium;InitModuleCompendium"
          Inputs="%(PoResource.ModuleCompendium)"
          Outputs="%(PoResource.BundleCompendium)">

    <!-- Cat: BundleCompendium += ModuleCompendium -->
    <PropertyGroup>
      <_Options>--no-wrap -D"$(PoAnchorDir)." -o"%(PoResource.BundleCompendium)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) --lang=%(Culture)</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.ModuleCompendium)' != ''" Command='"$(MsgCat)" $(_Options) "%(PoResource.BundleCompendium)" "%(PoResource.ModuleCompendium)"' />
  </Target>

  <Target Name="ConsolidateBundleCompendium" DependsOnTargets="ConsolidateBundleCompendiumWithPoResource;ConsolidateBundleWithModuleCompendium"/>

  <!--=========================================================================-->
  <!-- Update module compendium -->

  <Target Name="UpdateModuleCompendium"
          DependsOnTargets="ConsolidateBundleCompendium"
          Inputs="$(PoTemplatePath);%(PoResource.BundleCompendium)"
          Outputs="%(PoResource.ModuleCompendium)">

    <!-- Delete translations -->
    <PropertyGroup>
      <_Options>--untranslated --force-po -D"$(PoAnchorDir)." -o"%(PoResource.ModuleCompendium)"</_Options>
    </PropertyGroup>
    <!--<Exec Command='"$(MsgAttrib)" $(_Options) "%(PoResource.ModuleCompendium)"' />-->

    <!-- Merge: ModuleCompendium |= PoTemplate << BundleCompendium -->
    <PropertyGroup>
      <_Options>-U --no-wrap -q -D"$(PoAnchorDir)." -C"%(PoResource.BundleCompendium)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) --lang=%(PoResource.Culture)</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.ModuleCompendium)' != ''" Command='"$(MsgMerge)" $(_Options) "%(PoResource.ModuleCompendium)" "$(PoTemplatePath)"' />
    <!-- Avoid consolidation of bundle compendium during next build -->
    <Touch Condition="'%(PoResource.ModuleCompendium)' != ''" Files="%(PoResource.BundleCompendium)" ForceTouch="true" />
  </Target>

  <!--=========================================================================-->
  <!-- Update PO Resource -->

  <Target Name="UpdatePoResource"
          DependsOnTargets="ConsolidateBundleCompendium"
          Inputs="$(PoTemplatePath)%(PoResource.BundleCompendium)"
          Outputs="%(PoResource.FullPath)">

    <!-- Delete translations -->
    <PropertyGroup>
      <_Options>--untranslated --force-po -D"$(PoAnchorDir)." -o"%(PoResource.FullPath)"</_Options>
    </PropertyGroup>
    <!--<Exec Command='"$(MsgAttrib)" $(_Options) "%(PoResource.FullPath)"' />-->

    <!-- Merge: PoResource |= PoTemplate << BundleCompendium -->
    <PropertyGroup>
      <_Options>-U --no-wrap -q -D"$(PoAnchorDir)." -C"%(PoResource.BundleCompendium)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) --lang=%(PoResource.Culture)</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "%(PoResource.FullPath)" "$(PoTemplatePath)"' />
    <!-- Avoid consolidation of bundle compendium during next build -->
    <Touch Files="%(PoResource.BundleCompendium)" ForceTouch="true" />
  </Target>

  <!--=========================================================================-->
  <!-- Create MO Resource -->

  <Target Name="CreateMoResource" DependsOnTargets="UpdatePoResource"
          Inputs="%(PoResource.FullPath)"
          Outputs="%(PoResource.MoResourceFullPath)">
    <MakeDir Directories="%(PoResource.MoResourceDir)" />
    <Exec Command='"$(ZouBinDir)msgfmt" -c -o"%(PoResource.MoResourceFullPath)" "%(PoResource.FullPath)"' />
  </Target>
  
  <Target Name="DeleteMoResource" DependsOnTargets="SetupPoResource" Outputs="%(PoResource.MoResourceFullPath)">
    <!--<Message Importance="high" Text="[-] %(PoResource.MoResourceFullPath)" />-->
    <Delete Files="%(PoResource.MoResourceFullPath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Import MO Resources References -->
  
  <Target Name="GetMoResourceReferences">
    <ItemGroup>
      <MoResourceReference Include="%(ProjectReference.RootDir)%(Directory)$(OutputPath)$(PoLocaleDir)**\*.mo">
        <ProjectOwnerDirectory>%(ProjectReference.RootDir)%(Directory)</ProjectOwnerDirectory>
      </MoResourceReference>
      <MoResourceReference>
        <Link>$([MSBuild]::MakeRelative(%(MoResourceReference.ProjectOwnerDirectory)$(OutputPath), %(MoResourceReference.FullPath)))</Link>
      </MoResourceReference>
    </ItemGroup>
    <!--<LogItems Items="@(ProjectReference)" Title="ProjectReference" AllMetadata="true" />
    <LogItems Items="@(MoResourceReference)" Title="MoResourceReference" AllMetadata="true" />-->
  </Target>

  <Target Name="ImportMoResourceReferences"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="%(MoResourceReference.FullPath)"
          Outputs="$(TargetDir)$(PoLocaleDir)%(MoResourceReference.RecursiveDir)%(FileName)%(Extension)">
    <Copy SourceFiles="%(MoResourceReference.FullPath)" DestinationFiles="$(TargetDir)$(PoLocaleDir)%(RecursiveDir)%(FileName)%(Extension)"  />
  </Target>

  <!-- Set MO Resources files as content -->
  <Target Name="SetMoResourceReferencesAsContent"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="@(MoResourceReference)"
          Outputs="@(MoResourceReference->'$(TargetDir)%(RecursiveDir)%(FileName)%(Extension)')">
    <ItemGroup>
      <Content Include="@(MoResourceReference)">
        <Link>%(MoResourceReference.Link)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="ImportMoResourceReferencesBuild" BeforeTargets="BeforeBuild" DependsOnTargets="ImportMoResourceReferences;SetMoResourceReferencesAsContent" />
  <Target Name="ImportMoResourceReferencesClean" AfterTargets="AfterClean"   DependsOnTargets="GetMoResourceReferences" Outputs="@(MoResourceReference)">
    <Delete Files="@(MoResourceReference)" />
  </Target>

  <!--=========================================================================-->

  <Target Name="GetTextBuild" BeforeTargets="Build"
          DependsOnTargets="
            SetupPoResource;
            CreatePoTemplate;
            ConsolidateBundleCompendium;
            UpdateModuleCompendium;
            UpdatePoResource;
            CreateMoResource">
    <!--<LogItems Items="@(PoResource)" AllMetadata="true" />-->
  </Target>
  <Target Name="GetTextClean" AfterTargets="Clean" DependsOnTargets="DeleteMoResource;DeletePoTemplate" />
</Project>