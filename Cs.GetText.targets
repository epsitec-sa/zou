<?xml version="1.0" encoding="utf-8"?>
<!-- Import this script at the end of the C# interop project -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="GetTextBuild">

  <!-- Make sure that PoResource is available in VisualStudio's Build Action combo -->
  <ItemGroup>
    <AvailableItemName Include="PoResource" />
    <!--<AvailableItemName Include="PoGlobalResource" />-->
  </ItemGroup>

  <Import Project="Cs.Boot.props"/>

  <PropertyGroup>
    <PoAnchorDir>$(BundleDir)</PoAnchorDir>
    <PoIntDir>$([System.IO.Path]::Combine($(ProjectDir),$(IntermediateOutputPath)))</PoIntDir>
    <PoLocaleDir>locale\</PoLocaleDir>
    <PoTemplateSourcesPath>$(PoIntDir)potsources.txt</PoTemplateSourcesPath>
    <PoTemplatePath>$(PoIntDir)$(ProjectName).pot</PoTemplatePath>
    
    <BundleCompendiumDir Condition="'$(BundleDir)' != ''">$(BundleDir).Resource\</BundleCompendiumDir>
    <ModuleCompendiumDir Condition="'$(ModuleDir)' != ''">$(ModuleDir).Resource\</ModuleCompendiumDir>

    <!--<GetTextKeyword>_</GetTextKeyword>-->
    <XGetText>$(ZouBinDir)xgettext</XGetText>
    <MsgInit>$(ZouBinDir)msginit</MsgInit>
    <MsgMerge>$(ZouBinDir)msgmerge</MsgMerge>
    <MsgCat>$(ZouBinDir)msgcat</MsgCat>
    
    <CopyrightHolder>EPSITEC SA, CH-1400 Yverdon-les-Bains, Switzerland</CopyrightHolder>
    <PackageName>'$(BundleName)'</PackageName>
  </PropertyGroup>

  <!--=========================================================================-->
  <Target Name="AddPoResourceInfo">
    <!-- Extract Culture metadata -->
    <AssignCulture Files="@(PoResource);@(PoGlobalResource)">
      <Output TaskParameter="AssignedFilesWithCulture" ItemName="PoResourceWithCulture" />
      <Output TaskParameter="AssignedFilesWithNoCulture" ItemName="PoResourceWithNoCulture" />
    </AssignCulture>
    <AddFileInfo Files="@(PoResourceWithCulture);@(PoResourceWithNoCulture)">
      <Output TaskParameter="OutputFiles" ItemName="PoResourceWithInfo" />
    </AddFileInfo>
    <!-- Add metadata helpers -->
    <ItemGroup>
      <PoResource Remove="@(PoResourceWithInfo)" />
      <PoResource Include="@(PoResourceWithInfo)" />
      <PoResource>
        <Type>PO</Type>
        <Domain>$([System.IO.Path]::GetFileNameWithoutExtension('%(Filename)'))</Domain>
        <MoResourceDir Condition="'%(WithCulture)' == 'true'">$(TargetDir)$(PoLocaleDir)%(Culture)\LC_MESSAGES\</MoResourceDir>
        <MoResourceDir Condition="'%(WithCulture)' != 'true'">$(TargetDir)$(PoLocaleDir)en-US\LC_MESSAGES\</MoResourceDir>

        <BundleCompendium Condition="'$(BundleCompendiumDir)' != '' And '%(WithCulture)' == 'true'">$(BundleCompendiumDir)Compendium.%(Culture).po</BundleCompendium>
        <BundleCompendium Condition="'$(BundleCompendiumDir)' != '' And '%(WithCulture)' != 'true'">$(BundleCompendiumDir)Compendium.po</BundleCompendium>
        <ModuleCompendium Condition="'$(ModuleCompendiumDir)' != '' And '%(WithCulture)' == 'true'">$(ModuleCompendiumDir)Compendium.%(Culture).po</ModuleCompendium>
        <ModuleCompendium Condition="'$(ModuleCompendiumDir)' != '' And '%(WithCulture)' != 'true'">$(ModuleCompendiumDir)Compendium.po</ModuleCompendium>
      </PoResource>
      <PoResource>
        <MoResourceFullPath>%(MoResourceDir)%(Domain).mo</MoResourceFullPath>
      </PoResource>
    </ItemGroup>
    <LogItems Items="@(PoResource)" Title="PoResource" AllMetadata="true" />
  </Target>
  
  <Target Name="CreateCompendiums">
    <ItemGroup>
      <Compendium Condition="'%(PoResource.BundleCompendium)' != ''" Include="%(PoResource.BundleCompendium)">
        <Culture>%(PoResource.Culture)</Culture>
        <WithCulture>%(PoResource.WithCulture)</WithCulture>
      </Compendium>
      <Compendium Condition="'%(PoResource.ModuleCompendium)' != ''" Include="%(PoResource.ModuleCompendium)">
        <Culture>%(PoResource.Culture)</Culture>
        <WithCulture>%(PoResource.WithCulture)</WithCulture>
      </Compendium>
    </ItemGroup>
    <!--<LogItems Items="@(Compendium)" Title="Compendium" AllMetadata="true" />-->
    <MakeDir Directories="%(Compendium.RootDir)%(Directory)" />
    <Exec Condition="!Exists('%(Compendium.FullPath)')" Command='"$(MsgInit)" -l%(Culture) -o"%(FullPath)" -i"$(PoTemplatePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Create list of .cs file for xgettext -->
  <Target Name="GetPoSources">
    <ItemGroup>
      <_Temporary Include="@(Compile)" Exclude="$(TMP)\*" />
      <PoSource  Include="$([MSBuild]::MakeRelative($(PoAnchorDir), %(_Temporary.FullPath)))" />
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
  </Target>
  <Target Name="GetPoReferenceSources" Condition="'@(PoGlobalResource)' != ''">
    <ItemGroup>
      <_Temporary Include="%(ProjectReference.RootDir)%(Directory)**\*.cs" Exclude="%(ProjectReference.RootDir)%(Directory)obj\**\*.cs" />
      <PoSource  Include="$([MSBuild]::MakeRelative($(PoAnchorDir), %(_Temporary.Identity)))" />
      <_Temporary Remove="@(_Temporary)" />
    </ItemGroup>
    <!--<LogItems Title="ProjectReference" Items="@(ProjectReference)" AllMetadata="true" />-->
  </Target>

  <!--=========================================================================-->
  <!-- Save the list of PO source files for xgettext -->
  <Target Name="SavePoSources"
          DependsOnTargets="GetPoSources;GetPoReferenceSources"
          Inputs="@(PoSource)"
          Outputs="$(PoTemplateSourcesPath)">
    <MakeDir Directories="$(PoIntDir)" />
    <WriteLinesToFile File="$(PoTemplateSourcesPath)" Lines="@(PoSource)" Overwrite="true" />
    <Message Importance="high" Text="%(PoSource.Identity)" />
    <!--<Exec Command='"$(PoTemplateSourcesPath)"' />-->  <!-- open in default editor -->
  </Target>

  <!--=========================================================================-->
  <!-- Create or update new PO Template file -->
  <Target Name="CreatePoTemplate" DependsOnTargets="SavePoSources" Inputs="@(PoSource)" Outputs="$(PoTemplatePath)">
    <PropertyGroup>
      <_Options>--from-code=UTF-8 --no-wrap --copyright-holder="$(CopyrightHolder)" --package-name="$(PackageName)"</_Options>
      <_Options>$(_Options) -k_</_Options>
      <_Options>$(_Options) -D"$(PoAnchorDir)." -f"$(PoTemplateSourcesPath)" -o"$(PoTemplatePath)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(XGetText)" $(_Options)' />
  </Target>
  <Target Name="DeletePoTemplate" Outputs="$(PoTemplateSourcesPath)">
    <Delete Files="$(PoTemplateSourcesPath)" />
  </Target>


  <!--=========================================================================-->
  <!-- Merge new PO Template into PO Resource file -->

  <!-- foreach %(PoResource.Identity) ... -->
  <Target Name="MergePoTemplateIntoPoResource" DependsOnTargets="CreatePoTemplate;CreateCompendiums" Inputs="$(PoTemplatePath)" Outputs="%(PoResource.Identity)">
    
    <!--<Message Importance="high" Text="%(PoResource.Identity) (%(PoResource.Length) bytes)"/>-->
    <PropertyGroup>
      <_Options>-o"%(PoResource.FullPath)" -i"$(PoTemplatePath)"</_Options>
      <_Options Condition="'%(PoResource.WithCulture)' == 'true'">$(_Options) -l%(Culture)</_Options>
    </PropertyGroup>
    <Exec Condition="'%(PoResource.Length)' &lt;= '10'" Command='"$(MsgInit)" $(_Options)' />
    
    <!-- Merge PO template int PO resource -->
    <PropertyGroup>
      <_Options>-U --no-wrap -D"$(PoAnchorDir)."</_Options>
      <_Options Condition="'%(PoResource.WithCulture)'   == 'true'">$(_Options) --lang=%(Culture)</_Options>
      <_Options Condition="'%(PoResource.ModuleCompendium)' != ''">$(_Options) -C"%(ModuleCompendium)"</_Options>
      <_Options Condition="'%(PoResource.ModuleCompendium)' == '' And '%(BundleCompendium)' != ''">$(_Options) -C"%(BundleCompendium)"</_Options>
    </PropertyGroup>
    <Exec Command='"$(MsgMerge)" $(_Options) "%(PoResource.FullPath)" "$(PoTemplatePath)"' />
    <!-- Update compendiums -->
    
    <!-- If module compendium exists: -->
    <!-- Update module compendium (concatenate PO resource and module compendium into module compendium)... -->
    <Exec Condition="'%(PoResource.ModuleCompendium)' != ''" Command='"$(MsgCat)" -D"$(PoAnchorDir)." -o"%(ModuleCompendium)" "%(ModuleCompendium)" "%(FullPath)"' />
    <!-- ... and merge PO template into module compendium-->
    <Exec Condition="'%(PoResource.ModuleCompendium)' != ''" Command='"$(MsgMerge)" -U -D"$(PoAnchorDir)." "%(ModuleCompendium)" "$(PoTemplatePath)"' />
    <!-- Update bundle compendium (concatenate module compendium and bundle compendium into bundle compendium)... -->
    <Exec Condition="'%(PoResource.ModuleCompendium)' != '' And '%(BundleCompendium)' != ''" Command='"$(MsgCat)" -D"$(PoAnchorDir)." -o"%(BundleCompendium)" "%(BundleCompendium)" "%(ModuleCompendium)"' />
    <!-- ... and merge PO template into bundle compendium-->
    <Exec Condition="'%(PoResource.ModuleCompendium)' != '' And '%(BundleCompendium)' != ''" Command='"$(MsgMerge)" -U -D"$(PoAnchorDir)." "%(BundleCompendium)" "$(PoTemplatePath)"' />
    
    <!-- else -->
    <!-- Update bundle compendium (concatenate PO resource and bundle compendium into bundle compendium)... -->
    <Exec Condition="'%(PoResource.ModuleCompendium)' == '' And '%(BundleCompendium)' != ''" Command='"$(MsgCat)" -D"$(PoAnchorDir)." -o"%(BundleCompendium)" "%(BundleCompendium)" "%(FullPath)"' />
    <!-- ... and merge PO template into module compendium-->
    <Exec Condition="'%(PoResource.ModuleCompendium)' == '' And '%(BundleCompendium)' != ''" Command='"$(MsgMerge)" -U -D"$(PoAnchorDir)." "%(BundleCompendium)" "$(PoTemplatePath)"' />
  </Target>

  <!--=========================================================================-->
  <!-- Create MO Resource file from PO Resource file -->

  <!-- Use target batching -->
  <Target Name="CreateMoResource" DependsOnTargets="MergePoTemplateIntoPoResource"
          Inputs="%(PoResource.FullPath)"
          Outputs="%(PoResource.MoResourceFullPath)">
    <MakeDir Directories="%(PoResource.MoResourceDir)" />
    <Exec Command='"$(ZouBinDir)msgfmt" -c -v -o"%(PoResource.MoResourceFullPath)" "%(PoResource.FullPath)"' />
  </Target>
  
  <Target Name="DeleteMoResource" DependsOnTargets="AddPoResourceInfo" Outputs="%(PoResource.MoResourceFullPath)">
    <Message Importance="high" Text="[-] %(PoResource.MoResourceFullPath)" />
    <Delete Files="%(PoResource.MoResourceFullPath)" />
  </Target>

  <!--=========================================================================-->
  <!-- Import MO Resources owned by project references -->
  <Target Name="GetMoResourceReferences">
    <ItemGroup>
      <MoResourceReference Include="%(ProjectReference.RootDir)%(Directory)$(OutputPath)$(PoLocaleDir)**\*.mo" />
    </ItemGroup>
    <!-- TODO: assign culture -->
    <LogItems Items="@(MoResourceReference)" Title="MoResourceReference" AllMetadata="true" />
  </Target>

  <!-- Use target batching -->
  <Target Name="ImportMoResourceReferences"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="%(MoResourceReference.Identity)"
          Outputs="$(TargetDir)$(PoLocaleDir)%(MoResourceReference.RecursiveDir)%(FileName)%(Extension)">
    <Copy SourceFiles="%(MoResourceReference.Identity)" DestinationFiles="$(TargetDir)$(PoLocaleDir)%(RecursiveDir)%(FileName)%(Extension)"  />
    <Message Importance="high" Text="  [+] %(MoResourceReference.Identity) =&gt; $(TargetDir)$(PoLocaleDir)%(RecursiveDir)%(FileName)%(Extension)" />
  </Target>

  <!-- Set MO Resources files as content -->
  <Target Name="SetMoResourceReferencesAsContent"
          DependsOnTargets="GetMoResourceReferences"
          Inputs="@(MoResourceReference)"
          Outputs="@(MoResourceReference->'$(TargetDir)%(RecursiveDir)%(FileName)%(Extension)')">
    <!--<LogItems Items="@(ProjectReference)" Title="ProjectReference" AllMetadata="true" />
    <LogItems Items="@(MoResourceReference)" Title="MoResourceReference" AllMetadata="true" />-->
    <ItemGroup>
      <Content Include="@(MoResourceReference)">
        <!-- TODO: compute hintpath $(OutputPath)$(PoLocaleDir)%(MoResource.Culture)\LC_MESSAGES\%(FileName)%(Extension) -->
        <HintPath></HintPath>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </Content>
    </ItemGroup>
    <!--<LogItems Items="@(Content)" Title="Content" AllMetadata="true" />
    <Message Importance="high" Text="[mo] %(MoResourceReference.Identity) -&gt; $(TargetDir)%(RecursiveDir)%(FileName)%(Extension)" />-->
  </Target>

  <Target Name="ImportMoResourceReferencesBuild" BeforeTargets="BeforeBuild" DependsOnTargets="ImportMoResourceReferences;SetMoResourceReferencesAsContent" />
  <Target Name="ImportMoResourceReferencesClean" AfterTargets="AfterClean"   DependsOnTargets="GetMoResourceReferences" Outputs="@(MoResourceReference)">
    <Delete Files="@(MoResourceReference)" />
  </Target>

  <!--=========================================================================-->

  <Target Name="GetTextBuild" BeforeTargets="Build" DependsOnTargets="AddPoResourceInfo;CreatePoTemplate;MergePoTemplateIntoPoResource;CreateMoResource">
    <!--<LogItems Items="@(PoResource)" AllMetadata="true" />-->
  </Target>
  <Target Name="GetTextClean" AfterTargets="Clean" DependsOnTargets="DeleteMoResource;DeletePoTemplate" />

  <!--<Target Name="CsGetTextTrace" BeforeTargets="BeforeBuild">
    <Message Importance="high" Text="##### CSGETTEXTTRACE" />
    <LogItems Items="@(ProjectReference)" Title="ProjectReference" AllMetadata="true" />
    <ItemGroup>
      <MoResourceReference Include="%(ProjectReference.RootDir)%(Directory)$(OutputPath)$(PoLocaleDir)\**\*.mo" />
    </ItemGroup>
    <LogItems Items="@(MoResourceReference)" Title="MoResourceReference" AllMetadata="true" />
    <ItemGroup>
      <Content Include="@(MoResourceReference)">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Visible>false</Visible>
      </Content>
    </ItemGroup>
    <LogItems Items="@(Content)" Title="Content" AllMetadata="true" />
    <Message Importance="high" Text="##### CSGETTEXTTRACE" />
  </Target>-->
</Project>