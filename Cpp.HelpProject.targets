<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Help Project Property Page -->
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Cpp.HelpProject.xml" />
    <AvailableItemName Include="HelpProject">
      <Targets>_HcBuild</Targets>
    </AvailableItemName>
  </ItemGroup>

  <!--=========================================================================-->
  <!-- Constants -->
  <!--=========================================================================-->

  <PropertyGroup>
    <MakeHm>$(VsToolsDir)makehm.exe</MakeHm>
    <Hhc>$(ZouBinDir)hhc.exe</Hhc>
  </PropertyGroup>

  <!--=========================================================================-->
  <!-- Initialization -->
  <!--=========================================================================-->

  <ItemDefinitionGroup>
    <HelpProject>
      <CommandLineTemplate>
        "$(MakeHm)" [ResIdsMappingRules] "[CppResIdsFile]" "[HelpResIdsFile]"
      </CommandLineTemplate>
      <ResIdsMappingRules>ID_,HID_,0x10000;IDM_,HIDM_,0x10000;IDP_,HIDP_,0x30000;IDR_,HIDR_,0x20000;IDD_,HIDD_,0x20000;IDW_,HIDW_,0x50000</ResIdsMappingRules>
      <CppResIdsFile>resource.h</CppResIdsFile>
      <HelpResIdsFile>$(IntDir)resource.hm</HelpResIdsFile>

      <HhpTmpFile>%(RootDir)%(Directory)_zou.%(FileName)%(Extension)</HhpTmpFile>
      <TopicSynonymsFile>%(RootDir)%(Directory)..\synonymtopics.txt</TopicSynonymsFile>
      <CppHelpMapFile>%(RootDir)%(Directory)..\helpmap.h</CppHelpMapFile>
      <HelpFile>$(OutDir)%(FileName).chm</HelpFile>
      <LogFile>%(RootDir)%(Directory)_errorlog.txt</LogFile>
      <ExcludedFromBuild>false</ExcludedFromBuild>
    </HelpProject>
  </ItemDefinitionGroup>

  <!--=========================================================================-->
  <!-- C/C++ Help Map -->
  <!--=========================================================================-->

  <Target Name="_ConcatWithMfcHmFile">
    <ItemGroup>
      <HelpResIdsFile Include="%(HelpProject.HelpResIdsFile)" />
      <HelpResIdsFile Include="$(MFCIncludeDir)afxhelp.hm" />
    </ItemGroup>
    <ReadLinesFromFile File="%(HelpResIdsFile.FullPath)" >
      <Output TaskParameter="Lines" ItemName="_SourceFile"/>
    </ReadLinesFromFile>
    <WriteLinesToFile File="%(HelpProject.HelpResIdsFile)" Lines="@(_SourceFile)" Overwrite="true"/>
    <ItemGroup>
      <_SourceFile Remove="@(_SourceFile)" />
    </ItemGroup>
  </Target>

  <Target Name="_CreateHmFile" Inputs="%(HelpProject.CppResIdsFile)" Outputs="%(HelpResIdsFile)">
    <Delete Files="%(HelpProject.HelpResIdsFile)" />
    <PropertyGroup>
      <ResIdsMappingRules>%(HelpProject.ResIdsMappingRules)</ResIdsMappingRules>
      <ResIdsMappingRules>$(ResIdsMappingRules.Replace(';', ' '))</ResIdsMappingRules>
    </PropertyGroup>
    <Exec Command='"$(MakeHm)" $(ResIdsMappingRules) "%(HelpProject.CppResIdsFile)" &gt;&gt;"%(HelpResIdsFile)"' />
    <CallTarget Targets="_ConcatWithMfcHmFile" Condition="'$(UseOfMfc)' != 'false' And '$(UseOfMfc)' != ''" />
  </Target>

  <Target Name="_GetHelpTopics" DependsOnTargets="_CreateHmFile" Returns="@(_HelpTopic)">
    <ReadLinesFromFile File="%(HelpProject.FullPath)">
      <Output TaskParameter="Lines" ItemName="_SourceFile" />
    </ReadLinesFromFile>
    
    <PropertyGroup>
      <_SourceFile>@(_SourceFile)</_SourceFile>
      <_OptionsSection>$([System.Text.RegularExpressions.Regex]::Match($(_SourceFile), '(?&lt;=\[OPTIONS\])[^\[]*'))</_OptionsSection>
      <_FilesSection>$([System.Text.RegularExpressions.Regex]::Match($(_SourceFile), '(?&lt;=\[FILES\])[^\[]*'))</_FilesSection>
      <_SourceFile></_SourceFile>
    </PropertyGroup>
    <ItemGroup>
      <_SourceFile Remove="@(_SourceFile) " />
      <_HelpTopic Include="$([System.Text.RegularExpressions.Regex]::Match($(_OptionsSection), '(?&lt;=Default Topic=)[^;]*'))" />
      <_HelpTopic Include="$(_FilesSection)" />
    </ItemGroup>

    <!--<Message Importance="high" Text="_HelpTopic=%(_HelpTopic.Identity)" />-->
  </Target>

  <Target Name="_CreateCppHelpMap" DependsOnTargets="_GetHelpTopics" Inputs="%(HelpProject.HelpResIdsFile);%(TopicSynonymsFile)" Outputs="%(CppHelpMapFile)">
    <ReadLinesFromFile File="%(HelpProject.HelpResIdsFile)">
      <Output TaskParameter="Lines" ItemName="_HelpId" />
    </ReadLinesFromFile>
    <!--<Message Importance="high" Text="_HelpId = %(_HelpId.Identity)" />-->
    
    <ReadLinesFromFile File="%(HelpProject.TopicSynonymsFile)">
      <Output TaskParameter="Lines" ItemName="_HelpTopicSynonym" />
    </ReadLinesFromFile>
    <!--<Message Importance="high" Text="_HelpTopicSynonym = %(_HelpTopicSynonym.Identity)" />-->

    <CreateHelpMap HelpIds="@(_HelpId)" Topics="@(_HelpTopic)" Synonyms="@(_HelpTopicSynonym)">
      <Output TaskParameter="Items" ItemName="_SourceFile" />
    </CreateHelpMap>
    
    <WriteLinesToFile File="%(HelpProject.CppHelpMapFile)" Lines="@(_SourceFile)" Overwrite="true" />
    <!--<Message Importance="high" Text="%(_SourceFile.Identity)" />-->

    <ItemGroup>
      <_HelpId Remove="@(_HelpId)" />
      <_HelpTopicSynonym Remove="@(_HelpTopicSynonym)" />
      <_SourceFile Remove="@(_SourceFile)" />
    </ItemGroup>
  </Target>
  
  <Target Name="_DeleteHmFiles">
    <Delete Files="%(HelpProject.HelpResIdsFile)" />
    <Delete Files="%(HelpProject.CppHelpMapFile)" />
  </Target>

  <Target Name="_HmClean"   DependsOnTargets="_DeleteHmFiles" AfterTargets="Clean"/>
  <Target Name="_HmBuild"   DependsOnTargets="_CreateCppHelpMap" BeforeTargets="ClCompile" />
  <Target Name="_HmRebuild" DependsOnTargets="_HmClean;_HmBuild"/>

  <!--=========================================================================-->
  <!-- Help compilation -->
  <!--=========================================================================-->

  <Target Name="_HcInit">
    <ItemGroup>
      <_ExcludedFromBuild Include="%(HelpProject.Identity)" Condition="'%(ExcludedFromBuild)' == 'true'" />
      <HelpProject Remove="@(_ExcludedFromBuild)" />
      <_ExcludedFromBuild Remove="@(_ExcludedFromBuild)" />
    </ItemGroup>
  </Target>

  <Target Name="_AssignHelpSourceFiles" Returns="%(HelpProject.Identity)">
    <ItemGroup>
      <_SourceFile Include="%(HelpProject.RootDir)%(Directory)**\*" />
      <_SourceFile Include="%(HelpProject.FullPath)" KeepDuplicates="false" />
      <HelpProject>
        <SourceFiles>@(_SourceFile)</SourceFiles>
      </HelpProject>
      <_SourceFile Remove="@(_SourceFile)" />
    </ItemGroup>
  </Target>

  <Target Name="_HcCore" DependsOnTargets="_AssignHelpSourceFiles" Inputs="%(HelpProject.SourceFiles)" Outputs="%(HelpProject.HelpFile)">
    <!-- Replace the path of the output file (.chm) inside the help project file -->
    <Copy SourceFiles="%(HelpProject.FullPath)" DestinationFiles="%(HhpTmpFile)" />
    <FileUpdate Files="%(HelpProject.HhpTmpFile)" Encoding="windows-1252"
                Regex='^(\s*Compiled File\s*=\s*).*[^\r\n]'
                ReplacementText="$1%(HelpProject.HelpFile)"
                Multiline="true"
                IgnoreCase="true"/>

    <!-- Execute the help compiler (HHC) and redirect its output to NUL -->
    <Exec Command='"$(Hhc)" "%(HelpProject.HhpTmpFile)" &gt;NUL' IgnoreExitCode='true' />
    <Delete Files="%(HelpProject.HhpTmpFile)" />
  </Target>

  <Target Name="_CheckForHcError" DependsOnTargets="_HcCore" Condition="'@(HelpProject)' != ''">
    <!-- Parse log file for errors and convert them to MSBuild format -->
    <ReadLinesFromFile File="%(HelpProject.LogFile)">
      <Output TaskParameter="Lines" ItemName="_SourceFile"/>
    </ReadLinesFromFile>
    <PropertyGroup>
      <_SourceFile>@(_SourceFile)</_SourceFile>
      <_HhpPath>%(HelpProject.FullPath)</_HhpPath>
    </PropertyGroup>
    <ItemGroup>
      <_SourceFile Remove="@(_SourceFile)" />
      <_HhcError Include="$([System.Text.RegularExpressions.Regex]::Matches($(_SourceFile), 'HHC\w+:\s*Error:[^;]*'))" />
    </ItemGroup>
    <!-- Fix for Visual Studio -->
    <CallTarget Targets="_DeleteLastBuildState" Condition="'%(_HhcError.Identity)' != ''" />
    <!-- -->
    <Error File="$(_HhpPath)"
           Condition="'%(_HhcError.Identity)' != ''"
           Code="$([System.Text.RegularExpressions.Regex]::Match(%(Identity), 'HHC[^:]+'))"
           Text="$([System.Text.RegularExpressions.Regex]::Match(%(Identity), '(?&lt;=HHC\w+:\s*Error:\s*).*'))" />

    <Delete Files="%(HelpProject.LogFile)" />
    <PropertyGroup>
      <_SourceFile></_SourceFile>
      <_HhpPath></_HhpPath>
    </PropertyGroup>
  </Target>

  <Target Name="_DeleteHhcFiles">
    <Delete Files="%(HelpProject.HhpTmpFile);%(HelpFile)" />
  </Target>

  <Target Name="_HcClean"   DependsOnTargets="_DeleteHhcFiles" AfterTargets="Clean" />
  <Target Name="_HcBuild"   DependsOnTargets="_HcInit;_HcCore;_CheckForHcError" AfterTargets="Build" />
  <Target Name="_HcRebuild" DependsOnTargets="_HcClean;_HcBuild" />
</Project>